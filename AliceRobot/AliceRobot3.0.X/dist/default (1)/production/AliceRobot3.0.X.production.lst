

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 12:33:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89  0000                     
    90                           ; Version 2.05
    91                           ; Generated 20/12/2018 GMT
    92                           ; 
    93                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F4620 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     
   125                           	psect	idataCOMRAM
   126  004AFA                     __pidataCOMRAM:
   127                           	opt callstack 0
   128                           
   129                           ;initializer for _slavePower
   130  004AFA  0000               	dw	0
   131  004AFC  4292               	dw	17042
   132                           
   133                           	psect	idataBANK0
   134  004AFE                     __pidataBANK0:
   135                           	opt callstack 0
   136                           
   137                           ;initializer for _masterPower
   138  004AFE  0000               	dw	0
   139  004B00  4292               	dw	17042
   140                           
   141                           	psect	idataBANK1
   142  004AE6                     __pidataBANK1:
   143                           	opt callstack 0
   144                           
   145                           ;initializer for stoa@F1158
   146  004AE6  28                 	db	40
   147  004AE7  6E                 	db	110
   148  004AE8  75                 	db	117
   149  004AE9  6C                 	db	108
   150  004AEA  6C                 	db	108
   151  004AEB  29                 	db	41
   152  004AEC  00                 	db	0
   153                           
   154                           	psect	smallconst
   155  001000                     __psmallconst:
   156                           	opt callstack 0
   157  001000  00                 	db	0
   158  001001                     _keys:
   159                           	opt callstack 0
   160  001001  31                 	db	49
   161  001002  32                 	db	50
   162  001003  33                 	db	51
   163  001004  41                 	db	65
   164  001005  34                 	db	52
   165  001006  35                 	db	53
   166  001007  36                 	db	54
   167  001008  42                 	db	66
   168  001009  37                 	db	55
   169  00100A  38                 	db	56
   170  00100B  39                 	db	57
   171  00100C  43                 	db	67
   172  00100D  2A                 	db	42
   173  00100E  30                 	db	48
   174  00100F  23                 	db	35
   175  001010  44                 	db	68
   176  001011  00                 	db	0
   177  001012                     __end_of_keys:
   178                           	opt callstack 0
   179  001012  0000               	dw	0
   180  001014  4060               	dw	16480
   181  001016                     __end_of_kp:
   182                           	opt callstack 0
   183  001016  10                 	db	16
   184  001017                     __end_ofPWMSetup@TIMER2_PRESCALER:
   185                           	opt callstack 0
   186  001017  50                 	db	80
   187  001018                     __end_of_LCD_LINE4_ADDR:
   188                           	opt callstack 0
   189  001018  10                 	db	16
   190  001019                     __end_of_LCD_LINE3_ADDR:
   191                           	opt callstack 0
   192  001019  40                 	db	64
   193  00101A                     __end_of_LCD_LINE2_ADDR:
   194                           	opt callstack 0
   195  00101A                     _LCD_LINE1_ADDR:
   196                           	opt callstack 0
   197  00101A  00                 	db	0
   198  00101B                     __end_of_LCD_LINE1_ADDR:
   199                           	opt callstack 0
   200  00101B                     _LCD_SIZE_VERT:
   201                           	opt callstack 0
   202  00101B  04                 	db	4
   203  00101C                     __end_of_LCD_SIZE_VERT:
   204                           	opt callstack 0
   205  00101C                     _LCD_SIZE_HORZ:
   206                           	opt callstack 0
   207  00101C  10                 	db	16
   208  00101D                     __end_of_LCD_SIZE_HORZ:
   209                           	opt callstack 0
   210  00101D  0C1C               	dw	3100
   211  00101F  0000               	dw	0
   212  001021                     __end_ofPWMSetup@FREQUENCY:
   213                           	opt callstack 0
   214  0000                     _CCPR2L	set	4027
   215  0000                     _CCPR1L	set	4030
   216  0000                     _PIE1bits	set	3997
   217  0000                     _RCSTAbits	set	4011
   218  0000                     _TXSTAbits	set	4012
   219  0000                     _SPBRG	set	4015
   220  0000                     _PR2	set	4043
   221  0000                     _LATAbits	set	3977
   222  0000                     _ADCON2	set	4032
   223  0000                     _CMCONbits	set	4020
   224  0000                     _CVRCON	set	4021
   225  0000                     _ADCON2bits	set	4032
   226  0000                     _ADCON1	set	4033
   227  0000                     _ADCON0	set	4034
   228  0000                     _TRISD	set	3989
   229  0000                     _TRISC	set	3988
   230  0000                     _TRISB	set	3987
   231  0000                     _TRISA	set	3986
   232  0000                     _LATE	set	3981
   233  0000                     _LATC	set	3979
   234  0000                     _LATB	set	3978
   235  0000                     _LATA	set	3977
   236  0000                     _TXREG	set	4013
   237  0000                     _RCREG	set	4014
   238  0000                     _PORTDbits	set	3971
   239  0000                     _PORTB	set	3969
   240  0000                     _LATD	set	3980
   241  0000                     _LATDbits	set	3980
   242  0000                     _INTCONbits	set	4082
   243  0000                     _SSPBUF	set	4041
   244  0000                     _SSPCON2bits	set	4037
   245  0000                     _SSPCON1	set	4038
   246  0000                     _SSPADD	set	4040
   247  0000                     _TRISCbits	set	3988
   248  0000                     _SSPCON1bits	set	4038
   249  0000                     _SSPCON2	set	4037
   250  0000                     _SSPSTAT	set	4039
   251  0000                     _CCP2Y	set	32212
   252  0000                     _CCP2X	set	32213
   253  0000                     _CCP1Y	set	32236
   254  0000                     _CCP1X	set	32237
   255  0000                     _TMR2ON	set	32338
   256  0000                     _T2CKPS1	set	32337
   257  0000                     _T2CKPS0	set	32336
   258  0000                     _CCP2M0	set	32208
   259  0000                     _CCP2M1	set	32209
   260  0000                     _CCP2M2	set	32210
   261  0000                     _CCP2M3	set	32211
   262  0000                     _CCP1M0	set	32232
   263  0000                     _CCP1M1	set	32233
   264  0000                     _CCP1M2	set	32234
   265  0000                     _CCP1M3	set	32235
   266  0000                     _P1M0	set	32238
   267  0000                     _P1M1	set	32239
   268  0000                     _INTEDG1	set	32653
   269  0000                     _INTEDG0	set	32654
   270  0000                     _TXIF	set	31988
   271  0000                     _TXIE	set	31980
   272  0000                     _RCIF	set	31989
   273  0000                     _RCIE	set	31981
   274  0000                     _INT1IE	set	32643
   275  0000                     _INT1IF	set	32640
   276  0000                     _INT2IF	set	32641
   277  0000                     _INT2IE	set	32644
   278  0000                     _INT0IF	set	32657
   279  0000                     _INT0IE	set	32660
   280  001021                     STR_1:
   281  001021  49                 	db	73	;'I'
   282  001022  6E                 	db	110	;'n'
   283  001023  69                 	db	105	;'i'
   284  001024  74                 	db	116	;'t'
   285  001025  20                 	db	32
   286  001026  63                 	db	99	;'c'
   287  001027  6F                 	db	111	;'o'
   288  001028  6D                 	db	109	;'m'
   289  001029  70                 	db	112	;'p'
   290  00102A  6C                 	db	108	;'l'
   291  00102B  65                 	db	101	;'e'
   292  00102C  74                 	db	116	;'t'
   293  00102D  65                 	db	101	;'e'
   294  00102E  0A                 	db	10
   295  00102F  00                 	db	0
   296  001030                     STR_6:
   297  001030  25                 	db	37
   298  001031  63                 	db	99	;'c'
   299  001032  25                 	db	37
   300  001033  2D                 	db	45
   301  001034  34                 	db	52	;'4'
   302  001035  2E                 	db	46
   303  001036  30                 	db	48	;'0'
   304  001037  66                 	db	102	;'f'
   305  001038  0A                 	db	10
   306  001039  00                 	db	0
   307  00103A                     STR_7:
   308  00103A  25                 	db	37
   309  00103B  63                 	db	99	;'c'
   310  00103C  25                 	db	37
   311  00103D  63                 	db	99	;'c'
   312  00103E  0A                 	db	10
   313  00103F  00                 	db	0
   314  001040                     STR_2:
   315  001040  25                 	db	37
   316  001041  2E                 	db	46
   317  001042  2A                 	db	42
   318  001043  73                 	db	115	;'s'
   319  001044  00                 	db	0
   320  001045                     STR_8:
   321  001045  49                 	db	73	;'I'
   322  001046  4E                 	db	78	;'N'
   323  001047  46                 	db	70	;'F'
   324  001048  00                 	db	0
   325  001049                     STR_12:
   326  001049  4E                 	db	78	;'N'
   327  00104A  41                 	db	65	;'A'
   328  00104B  4E                 	db	78	;'N'
   329  00104C  00                 	db	0
   330  00104D                     STR_9:
   331  00104D  69                 	db	105	;'i'
   332  00104E  6E                 	db	110	;'n'
   333  00104F  66                 	db	102	;'f'
   334  001050  00                 	db	0
   335  001051                     STR_13:
   336  001051  6E                 	db	110	;'n'
   337  001052  61                 	db	97	;'a'
   338  001053  6E                 	db	110	;'n'
   339  001054  00                 	db	0
   340  001055                     STR_16:
   341  001055  6C                 	db	108	;'l'
   342  001056  66                 	db	102	;'f'
   343  001057  00                 	db	0
   344  0000                     
   345                           ; #config settings
   346  001058  00                 	db	0	; dummy byte at the end
   347  0000                     
   348                           	psect	cinit
   349  0040C2                     __pcinit:
   350                           	opt callstack 0
   351  0040C2                     start_initialization:
   352                           	opt callstack 0
   353  0040C2                     __initialization:
   354                           	opt callstack 0
   355                           
   356                           ; Initialize objects allocated to BANK1 (7 bytes)
   357                           ; load TBLPTR registers with __pidataBANK1
   358  0040C2  0EE6               	movlw	low __pidataBANK1
   359  0040C4  6EF6               	movwf	tblptrl,c
   360  0040C6  0E4A               	movlw	high __pidataBANK1
   361  0040C8  6EF7               	movwf	tblptrh,c
   362  0040CA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   363  0040CC  6EF8               	movwf	tblptru,c
   364  0040CE  EE01  F0DD         	lfsr	0,__pdataBANK1
   365  0040D2  EE10 F007          	lfsr	1,7
   366  0040D6                     copy_data0:
   367  0040D6  0009               	tblrd		*+
   368  0040D8  CFF5 FFEE          	movff	tablat,postinc0
   369  0040DC  50E5               	movf	postdec1,w,c
   370  0040DE  50E1               	movf	fsr1l,w,c
   371  0040E0  E1FA               	bnz	copy_data0
   372                           
   373                           ; Initialize objects allocated to BANK0 (4 bytes)
   374                           ; load TBLPTR registers with __pidataBANK0
   375  0040E2  0EFE               	movlw	low __pidataBANK0
   376  0040E4  6EF6               	movwf	tblptrl,c
   377  0040E6  0E4A               	movlw	high __pidataBANK0
   378  0040E8  6EF7               	movwf	tblptrh,c
   379  0040EA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   380  0040EC  6EF8               	movwf	tblptru,c
   381  0040EE  EE00  F0F9         	lfsr	0,__pdataBANK0
   382  0040F2  EE10 F004          	lfsr	1,4
   383  0040F6                     copy_data1:
   384  0040F6  0009               	tblrd		*+
   385  0040F8  CFF5 FFEE          	movff	tablat,postinc0
   386  0040FC  50E5               	movf	postdec1,w,c
   387  0040FE  50E1               	movf	fsr1l,w,c
   388  004100  E1FA               	bnz	copy_data1
   389                           
   390                           ; Initialize objects allocated to COMRAM (4 bytes)
   391                           ; load TBLPTR registers with __pidataCOMRAM
   392  004102  0EFA               	movlw	low __pidataCOMRAM
   393  004104  6EF6               	movwf	tblptrl,c
   394  004106  0E4A               	movlw	high __pidataCOMRAM
   395  004108  6EF7               	movwf	tblptrh,c
   396  00410A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   397  00410C  6EF8               	movwf	tblptru,c
   398  00410E  EE00  F061         	lfsr	0,__pdataCOMRAM
   399  004112  EE10 F004          	lfsr	1,4
   400  004116                     copy_data2:
   401  004116  0009               	tblrd		*+
   402  004118  CFF5 FFEE          	movff	tablat,postinc0
   403  00411C  50E5               	movf	postdec1,w,c
   404  00411E  50E1               	movf	fsr1l,w,c
   405  004120  E1FA               	bnz	copy_data2
   406                           
   407                           ; Clear objects allocated to BANK2 (128 bytes)
   408  004122  EE02  F000         	lfsr	0,__pbssBANK2
   409  004126  0E80               	movlw	128
   410  004128                     clear_0:
   411  004128  6AEE               	clrf	postinc0,c
   412  00412A  06E8               	decf	wreg,f,c
   413  00412C  E1FD               	bnz	clear_0
   414                           
   415                           ; Clear objects allocated to BANK1 (106 bytes)
   416  00412E  EE01  F073         	lfsr	0,__pbssBANK1
   417  004132  0E6A               	movlw	106
   418  004134                     clear_1:
   419  004134  6AEE               	clrf	postinc0,c
   420  004136  06E8               	decf	wreg,f,c
   421  004138  E1FD               	bnz	clear_1
   422                           
   423                           ; Clear objects allocated to BANK0 (4 bytes)
   424  00413A  0100               	movlb	0
   425  00413C  6BF8               	clrf	(__pbssBANK0+3)& (0+255),b
   426  00413E  6BF7               	clrf	(__pbssBANK0+2)& (0+255),b
   427  004140  6BF6               	clrf	(__pbssBANK0+1)& (0+255),b
   428  004142  6BF5               	clrf	__pbssBANK0& (0+255),b
   429                           
   430                           ; Clear objects allocated to COMRAM (21 bytes)
   431  004144  EE00  F04C         	lfsr	0,__pbssCOMRAM
   432  004148  0E15               	movlw	21
   433  00414A                     clear_2:
   434  00414A  6AEE               	clrf	postinc0,c
   435  00414C  06E8               	decf	wreg,f,c
   436  00414E  E1FD               	bnz	clear_2
   437  004150                     end_of_initialization:
   438                           	opt callstack 0
   439  004150                     __end_of__initialization:
   440                           	opt callstack 0
   441  004150  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   442  004152  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  004154  0E00               	movlw	low (__Lmediumconst shr (0+16))
   444  004156  6EF8               	movwf	tblptru,c
   445  004158  0100               	movlb	0
   446  00415A  EFDA  F00F         	goto	_main	;jump to C main() function
   447                           
   448                           	psect	bssCOMRAM
   449  00004C                     __pbssCOMRAM:
   450                           	opt callstack 0
   451  00004C                     _tickRightTemp:
   452                           	opt callstack 0
   453  00004C                     	ds	4
   454  000050                     _tickLeftTemp:
   455                           	opt callstack 0
   456  000050                     	ds	4
   457  000054                     _width:
   458                           	opt callstack 0
   459  000054                     	ds	2
   460  000056                     _prec:
   461                           	opt callstack 0
   462  000056                     	ds	2
   463  000058                     _flags:
   464                           	opt callstack 0
   465  000058                     	ds	2
   466  00005A                     _travelDirection:
   467                           	opt callstack 0
   468  00005A                     	ds	2
   469  00005C                     _correctingDirection:
   470                           	opt callstack 0
   471  00005C                     	ds	1
   472  00005D                     __tx_buffer_tail:
   473                           	opt callstack 0
   474  00005D                     	ds	1
   475  00005E                     __tx_buffer_head:
   476                           	opt callstack 0
   477  00005E                     	ds	1
   478  00005F                     __rx_buffer_tail:
   479                           	opt callstack 0
   480  00005F                     	ds	1
   481  000060                     __rx_buffer_head:
   482                           	opt callstack 0
   483  000060                     	ds	1
   484                           
   485                           	psect	dataCOMRAM
   486  000061                     __pdataCOMRAM:
   487                           	opt callstack 0
   488  000061                     _slavePower:
   489                           	opt callstack 0
   490  000061                     	ds	4
   491                           
   492                           	psect	bssBANK0
   493  0000F5                     __pbssBANK0:
   494                           	opt callstack 0
   495  0000F5                     _nout:
   496                           	opt callstack 0
   497  0000F5                     	ds	2
   498  0000F7                     _sideTurnedOff:
   499                           	opt callstack 0
   500  0000F7                     	ds	2
   501                           
   502                           	psect	dataBANK0
   503  0000F9                     __pdataBANK0:
   504                           	opt callstack 0
   505  0000F9                     _masterPower:
   506                           	opt callstack 0
   507  0000F9                     	ds	4
   508                           
   509                           	psect	bssBANK1
   510  000173                     __pbssBANK1:
   511                           	opt callstack 0
   512  000173                     floorf@F524:
   513                           	opt callstack 0
   514  000173                     	ds	4
   515  000177                     ___fpclassifyf@F463:
   516                           	opt callstack 0
   517  000177                     	ds	4
   518  00017B                     _distanceR:
   519                           	opt callstack 0
   520  00017B                     	ds	4
   521  00017F                     _distanceL:
   522                           	opt callstack 0
   523  00017F                     	ds	4
   524  000183                     _tickR:
   525                           	opt callstack 0
   526  000183                     	ds	4
   527  000187                     _tickL:
   528                           	opt callstack 0
   529  000187                     	ds	4
   530  00018B                     _moving:
   531                           	opt callstack 0
   532  00018B                     	ds	1
   533  00018C                     _key_was_pressed:
   534                           	opt callstack 0
   535  00018C                     	ds	1
   536  00018D                     _dbuf:
   537                           	opt callstack 0
   538  00018D                     	ds	80
   539                           
   540                           	psect	dataBANK1
   541  0001DD                     __pdataBANK1:
   542                           	opt callstack 0
   543  0001DD                     stoa@F1158:
   544                           	opt callstack 0
   545  0001DD                     	ds	7
   546                           
   547                           	psect	bssBANK2
   548  000200                     __pbssBANK2:
   549                           	opt callstack 0
   550  000200                     __tx_buffer:
   551                           	opt callstack 0
   552  000200                     	ds	64
   553  000240                     __rx_buffer:
   554                           	opt callstack 0
   555  000240                     	ds	64
   556                           
   557                           	psect	cstackBANK1
   558  000100                     __pcstackBANK1:
   559                           	opt callstack 0
   560  000100                     ?_sprintf:
   561                           	opt callstack 0
   562  000100                     sprintf@s:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x0
   566  000100                     	ds	2
   567  000102                     sprintf@fmt:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x2
   571  000102                     	ds	10
   572  00010C                     sprintf@ap:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0xC
   576  00010C                     	ds	2
   577  00010E                     sprintf@f:
   578                           	opt callstack 0
   579                           
   580                           ; 6 bytes @ 0xE
   581  00010E                     	ds	6
   582  000114                     ??_main:
   583                           
   584                           ; 1 bytes @ 0x14
   585  000114                     	ds	5
   586  000119                     main@uart_char_to_send:
   587                           	opt callstack 0
   588                           
   589                           ; 25 bytes @ 0x19
   590  000119                     	ds	25
   591  000132                     main@buffer:
   592                           	opt callstack 0
   593                           
   594                           ; 10 bytes @ 0x32
   595  000132                     	ds	10
   596  00013C                     main@command:
   597                           	opt callstack 0
   598                           
   599                           ; 25 bytes @ 0x3C
   600  00013C                     	ds	25
   601  000155                     main@lcdDisplay:
   602                           	opt callstack 0
   603                           
   604                           ; 16 bytes @ 0x55
   605  000155                     	ds	18
   606  000167                     main@k:
   607                           	opt callstack 0
   608                           
   609                           ; 8 bytes @ 0x67
   610  000167                     	ds	8
   611  00016F                     main@keypress:
   612                           	opt callstack 0
   613                           
   614                           ; 1 bytes @ 0x6F
   615  00016F                     	ds	1
   616  000170                     main@commandReceived:
   617                           	opt callstack 0
   618                           
   619                           ; 1 bytes @ 0x70
   620  000170                     	ds	1
   621  000171                     main@index:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x71
   625  000171                     	ds	2
   626                           
   627                           	psect	cstackBANK0
   628  000080                     __pcstackBANK0:
   629                           	opt callstack 0
   630  000080                     ___flmul@sign:
   631                           	opt callstack 0
   632                           
   633                           ; 1 bytes @ 0x0
   634  000080                     	ds	1
   635  000081                     ___flmul@aexp:
   636                           	opt callstack 0
   637                           
   638                           ; 1 bytes @ 0x1
   639  000081                     	ds	1
   640  000082                     ___flmul@grs:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0x2
   644  000082                     	ds	4
   645  000086                     ___flmul@bexp:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x6
   649  000086                     	ds	1
   650  000087                     ___flmul@prod:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0x7
   654  000087                     	ds	4
   655  00008B                     ___flmul@temp:
   656                           	opt callstack 0
   657                           
   658                           ; 2 bytes @ 0xB
   659  00008B                     	ds	2
   660  00008D                     ?_efgtoa:
   661                           	opt callstack 0
   662  00008D                     efgtoa@fp:
   663                           	opt callstack 0
   664  00008D                     set_pwm_duty_cycle_RC2_RightSlave@duty:
   665                           	opt callstack 0
   666  00008D                     set_pwm_duty_cycle_RC1_LeftMaster@duty:
   667                           	opt callstack 0
   668                           
   669                           ; 4 bytes @ 0xD
   670  00008D                     	ds	2
   671  00008F                     efgtoa@f:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0xF
   675  00008F                     	ds	2
   676  000091                     ??_set_pwm_duty_cycle_RC2_RightSlave:
   677  000091                     ??_set_pwm_duty_cycle_RC1_LeftMaster:
   678                           
   679                           ; 1 bytes @ 0x11
   680  000091                     	ds	2
   681  000093                     efgtoa@c:
   682                           	opt callstack 0
   683  000093                     _set_pwm_duty_cycle_RC2_RightSlave$2030:
   684                           	opt callstack 0
   685  000093                     _set_pwm_duty_cycle_RC1_LeftMaster$2031:
   686                           	opt callstack 0
   687                           
   688                           ; 4 bytes @ 0x13
   689  000093                     	ds	1
   690  000094                     ??_efgtoa:
   691                           
   692                           ; 1 bytes @ 0x14
   693  000094                     	ds	3
   694  000097                     set_pwm_duty_cycle_RC2_RightSlave@max_duty_val:
   695                           	opt callstack 0
   696  000097                     set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val:
   697                           	opt callstack 0
   698                           
   699                           ; 2 bytes @ 0x17
   700  000097                     	ds	2
   701  000099                     set_pwm_duty_cycle_RC2_RightSlave@duty_val:
   702                           	opt callstack 0
   703  000099                     set_pwm_duty_cycle_RC1_LeftMaster@duty_val:
   704                           	opt callstack 0
   705  000099                     efgtoa@ou:
   706                           	opt callstack 0
   707                           
   708                           ; 4 bytes @ 0x19
   709  000099                     	ds	2
   710  00009B                     drive@error:
   711                           	opt callstack 0
   712                           
   713                           ; 4 bytes @ 0x1B
   714  00009B                     	ds	2
   715  00009D                     _efgtoa$1146:
   716                           	opt callstack 0
   717                           
   718                           ; 2 bytes @ 0x1D
   719  00009D                     	ds	2
   720  00009F                     _efgtoa$1147:
   721                           	opt callstack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724  00009F                     	ds	2
   725  0000A1                     _efgtoa$1151:
   726                           	opt callstack 0
   727                           
   728                           ; 2 bytes @ 0x21
   729  0000A1                     	ds	2
   730  0000A3                     _efgtoa$1155:
   731                           	opt callstack 0
   732                           
   733                           ; 2 bytes @ 0x23
   734  0000A3                     	ds	2
   735  0000A5                     _efgtoa$1156:
   736                           	opt callstack 0
   737                           
   738                           ; 2 bytes @ 0x25
   739  0000A5                     	ds	2
   740  0000A7                     _efgtoa$1157:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x27
   744  0000A7                     	ds	2
   745  0000A9                     efgtoa@t:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x29
   749  0000A9                     	ds	2
   750  0000AB                     efgtoa@pp:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x2B
   754  0000AB                     	ds	2
   755  0000AD                     efgtoa@m:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x2D
   759  0000AD                     	ds	2
   760  0000AF                     efgtoa@ne:
   761                           	opt callstack 0
   762                           
   763                           ; 2 bytes @ 0x2F
   764  0000AF                     	ds	2
   765  0000B1                     efgtoa@d:
   766                           	opt callstack 0
   767                           
   768                           ; 2 bytes @ 0x31
   769  0000B1                     	ds	2
   770  0000B3                     efgtoa@sign:
   771                           	opt callstack 0
   772                           
   773                           ; 2 bytes @ 0x33
   774  0000B3                     	ds	2
   775  0000B5                     efgtoa@p:
   776                           	opt callstack 0
   777                           
   778                           ; 2 bytes @ 0x35
   779  0000B5                     	ds	2
   780  0000B7                     efgtoa@nmode:
   781                           	opt callstack 0
   782                           
   783                           ; 1 bytes @ 0x37
   784  0000B7                     	ds	1
   785  0000B8                     efgtoa@w:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x38
   789  0000B8                     	ds	2
   790  0000BA                     efgtoa@mode:
   791                           	opt callstack 0
   792                           
   793                           ; 1 bytes @ 0x3A
   794  0000BA                     	ds	1
   795  0000BB                     efgtoa@h:
   796                           	opt callstack 0
   797                           
   798                           ; 4 bytes @ 0x3B
   799  0000BB                     	ds	4
   800  0000BF                     efgtoa@l:
   801                           	opt callstack 0
   802                           
   803                           ; 4 bytes @ 0x3F
   804  0000BF                     	ds	4
   805  0000C3                     efgtoa@i:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x43
   809  0000C3                     	ds	2
   810  0000C5                     efgtoa@g:
   811                           	opt callstack 0
   812                           
   813                           ; 4 bytes @ 0x45
   814  0000C5                     	ds	4
   815  0000C9                     efgtoa@e:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x49
   819  0000C9                     	ds	2
   820  0000CB                     efgtoa@n:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x4B
   824  0000CB                     	ds	2
   825  0000CD                     efgtoa@u:
   826                           	opt callstack 0
   827                           
   828                           ; 4 bytes @ 0x4D
   829  0000CD                     	ds	4
   830  0000D1                     ?_vfpfcnvrt:
   831                           	opt callstack 0
   832  0000D1                     vfpfcnvrt@fp:
   833                           	opt callstack 0
   834                           
   835                           ; 2 bytes @ 0x51
   836  0000D1                     	ds	2
   837  0000D3                     vfpfcnvrt@fmt:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x53
   841  0000D3                     	ds	2
   842  0000D5                     vfpfcnvrt@ap:
   843                           	opt callstack 0
   844                           
   845                           ; 2 bytes @ 0x55
   846  0000D5                     	ds	2
   847  0000D7                     ??_vfpfcnvrt:
   848                           
   849                           ; 1 bytes @ 0x57
   850  0000D7                     	ds	4
   851  0000DB                     vfpfcnvrt@cp:
   852                           	opt callstack 0
   853                           
   854                           ; 2 bytes @ 0x5B
   855  0000DB                     	ds	2
   856  0000DD                     vfpfcnvrt@done:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x5D
   860  0000DD                     	ds	2
   861  0000DF                     _vfpfcnvrt$1182:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0x5F
   865  0000DF                     	ds	2
   866  0000E1                     _vfpfcnvrt$1183:
   867                           	opt callstack 0
   868                           
   869                           ; 2 bytes @ 0x61
   870  0000E1                     	ds	2
   871  0000E3                     _vfpfcnvrt$1188:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x63
   875  0000E3                     	ds	2
   876  0000E5                     vfpfcnvrt@f:
   877                           	opt callstack 0
   878                           
   879                           ; 4 bytes @ 0x65
   880  0000E5                     	ds	4
   881  0000E9                     vfpfcnvrt@ct:
   882                           	opt callstack 0
   883                           
   884                           ; 3 bytes @ 0x69
   885  0000E9                     	ds	3
   886  0000EC                     vfpfcnvrt@c:
   887                           	opt callstack 0
   888                           
   889                           ; 1 bytes @ 0x6C
   890  0000EC                     	ds	1
   891  0000ED                     ?_vfprintf:
   892                           	opt callstack 0
   893  0000ED                     vfprintf@fp:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x6D
   897  0000ED                     	ds	2
   898  0000EF                     vfprintf@fmt:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x6F
   902  0000EF                     	ds	2
   903  0000F1                     vfprintf@ap:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x71
   907  0000F1                     	ds	2
   908  0000F3                     vfprintf@cfmt:
   909                           	opt callstack 0
   910                           
   911                           ; 2 bytes @ 0x73
   912  0000F3                     	ds	2
   913                           
   914                           	psect	cstackCOMRAM
   915  000001                     __pcstackCOMRAM:
   916                           	opt callstack 0
   917  000001                     ?i2___fladd:
   918                           	opt callstack 0
   919  000001                     i2___fladd@b:
   920                           	opt callstack 0
   921                           
   922                           ; 4 bytes @ 0x0
   923  000001                     	ds	4
   924  000005                     i2___fladd@a:
   925                           	opt callstack 0
   926                           
   927                           ; 4 bytes @ 0x4
   928  000005                     	ds	4
   929  000009                     ??i2___fladd:
   930                           
   931                           ; 1 bytes @ 0x8
   932  000009                     	ds	4
   933  00000D                     i2___fladd@signs:
   934                           	opt callstack 0
   935                           
   936                           ; 1 bytes @ 0xC
   937  00000D                     	ds	1
   938  00000E                     i2___fladd@aexp:
   939                           	opt callstack 0
   940                           
   941                           ; 1 bytes @ 0xD
   942  00000E                     	ds	1
   943  00000F                     i2___fladd@bexp:
   944                           	opt callstack 0
   945                           
   946                           ; 1 bytes @ 0xE
   947  00000F                     	ds	1
   948  000010                     i2___fladd@grs:
   949                           	opt callstack 0
   950                           
   951                           ; 1 bytes @ 0xF
   952  000010                     	ds	1
   953  000011                     ?i2___flsub:
   954                           	opt callstack 0
   955  000011                     i2___flsub@b:
   956                           	opt callstack 0
   957                           
   958                           ; 4 bytes @ 0x10
   959  000011                     	ds	4
   960  000015                     i2___flsub@a:
   961                           	opt callstack 0
   962                           
   963                           ; 4 bytes @ 0x14
   964  000015                     	ds	4
   965  000019                     ??_high_isr:
   966  000019                     
   967                           ; 1 bytes @ 0x18
   968  000019                     	ds	2
   969  00001B                     ?_UART_available:
   970                           	opt callstack 0
   971  00001B                     ?_strlen:
   972                           	opt callstack 0
   973  00001B                     ?___fpclassifyf:
   974                           	opt callstack 0
   975  00001B                     ?_isupper:
   976                           	opt callstack 0
   977  00001B                     ?_isdigit:
   978                           	opt callstack 0
   979  00001B                     ?_strncmp:
   980                           	opt callstack 0
   981  00001B                     ?_isspace:
   982                           	opt callstack 0
   983  00001B                     ?___wmul:
   984                           	opt callstack 0
   985  00001B                     ?___awdiv:
   986                           	opt callstack 0
   987  00001B                     ?___awmod:
   988                           	opt callstack 0
   989  00001B                     ?___fldiv:
   990                           	opt callstack 0
   991  00001B                     ?___lldiv:
   992                           	opt callstack 0
   993  00001B                     ?___aldiv:
   994                           	opt callstack 0
   995  00001B                     ?___flneg:
   996                           	opt callstack 0
   997  00001B                     ?___xxtofl:
   998                           	opt callstack 0
   999  00001B                     pulse_e@interruptState:
  1000                           	opt callstack 0
  1001  00001B                     UART_send_char@c:
  1002                           	opt callstack 0
  1003  00001B                     UART_read@c:
  1004                           	opt callstack 0
  1005  00001B                     ___wmul@multiplier:
  1006                           	opt callstack 0
  1007  00001B                     ___awdiv@dividend:
  1008                           	opt callstack 0
  1009  00001B                     ___awmod@dividend:
  1010                           	opt callstack 0
  1011  00001B                     isdigit@c:
  1012                           	opt callstack 0
  1013  00001B                     isspace@c:
  1014                           	opt callstack 0
  1015  00001B                     isupper@c:
  1016                           	opt callstack 0
  1017  00001B                     strcpy@dest:
  1018                           	opt callstack 0
  1019  00001B                     strlen@s:
  1020                           	opt callstack 0
  1021  00001B                     strncmp@_l:
  1022                           	opt callstack 0
  1023  00001B                     ___lldiv@dividend:
  1024                           	opt callstack 0
  1025  00001B                     ___aldiv@dividend:
  1026                           	opt callstack 0
  1027  00001B                     ___fleq@ff1:
  1028                           	opt callstack 0
  1029  00001B                     ___flneg@f1:
  1030                           	opt callstack 0
  1031  00001B                     ___fldiv@b:
  1032                           	opt callstack 0
  1033  00001B                     ___xxtofl@val:
  1034                           	opt callstack 0
  1035  00001B                     ___fpclassifyf@x:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x1A
  1039  00001B                     	ds	1
  1040  00001C                     send_nibble@data:
  1041                           	opt callstack 0
  1042  00001C                     UART_send_string@message:
  1043                           	opt callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x1B
  1046  00001C                     	ds	1
  1047  00001D                     ??_UART_available:
  1048  00001D                     ??_isupper:
  1049  00001D                     ??_isdigit:
  1050  00001D                     ??_isspace:
  1051  00001D                     send_byte@data:
  1052                           	opt callstack 0
  1053  00001D                     ___wmul@multiplicand:
  1054                           	opt callstack 0
  1055  00001D                     ___awdiv@divisor:
  1056                           	opt callstack 0
  1057  00001D                     ___awmod@divisor:
  1058                           	opt callstack 0
  1059  00001D                     strcpy@src:
  1060                           	opt callstack 0
  1061  00001D                     strlen@a:
  1062                           	opt callstack 0
  1063  00001D                     strncmp@_r:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x1C
  1067  00001D                     	ds	1
  1068  00001E                     ??_UART_send_string:
  1069  00001E                     lcdInst@data:
  1070                           	opt callstack 0
  1071  00001E                     putch@data:
  1072                           	opt callstack 0
  1073  00001E                     LCD_write_str@str:
  1074                           	opt callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1D
  1077  00001E                     	ds	1
  1078  00001F                     ??___fpclassifyf:
  1079  00001F                     ??_strcpy:
  1080  00001F                     ??_initLCD:
  1081  00001F                     ??___xxtofl:
  1082  00001F                     ___awdiv@counter:
  1083                           	opt callstack 0
  1084  00001F                     ___awmod@counter:
  1085                           	opt callstack 0
  1086  00001F                     LCD_set_cursor@row:
  1087                           	opt callstack 0
  1088  00001F                     ___wmul@product:
  1089                           	opt callstack 0
  1090  00001F                     fputc@c:
  1091                           	opt callstack 0
  1092  00001F                     strncmp@n:
  1093                           	opt callstack 0
  1094  00001F                     ___lldiv@divisor:
  1095                           	opt callstack 0
  1096  00001F                     ___aldiv@divisor:
  1097                           	opt callstack 0
  1098  00001F                     ___fleq@ff2:
  1099                           	opt callstack 0
  1100  00001F                     ___fldiv@a:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x1E
  1104  00001F                     	ds	1
  1105  000020                     ___awdiv@sign:
  1106                           	opt callstack 0
  1107  000020                     ___awmod@sign:
  1108                           	opt callstack 0
  1109  000020                     UART_send_string@i:
  1110                           	opt callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x1F
  1113  000020                     	ds	1
  1114  000021                     ??_strncmp:
  1115  000021                     ?_tolower:
  1116                           	opt callstack 0
  1117  000021                     _isspace$1691:
  1118                           	opt callstack 0
  1119  000021                     LCD_set_cursor@column:
  1120                           	opt callstack 0
  1121  000021                     LCD_write_str@i:
  1122                           	opt callstack 0
  1123  000021                     ___awdiv@quotient:
  1124                           	opt callstack 0
  1125  000021                     fputc@fp:
  1126                           	opt callstack 0
  1127  000021                     strcpy@s:
  1128                           	opt callstack 0
  1129  000021                     tolower@c:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x20
  1133  000021                     	ds	1
  1134  000022                     ?_atoi:
  1135                           	opt callstack 0
  1136  000022                     atoi@s:
  1137                           	opt callstack 0
  1138  000022                     strncmp@l:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x21
  1142  000022                     	ds	1
  1143  000023                     ??_fputc:
  1144  000023                     ??_tolower:
  1145  000023                     ??___fldiv:
  1146  000023                     ??___fleq:
  1147  000023                     ___aldiv@counter:
  1148                           	opt callstack 0
  1149  000023                     ___xxtofl@sign:
  1150                           	opt callstack 0
  1151  000023                     ___fpclassifyf@e:
  1152                           	opt callstack 0
  1153  000023                     strcpy@d:
  1154                           	opt callstack 0
  1155  000023                     ___lldiv@quotient:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x22
  1159  000023                     	ds	1
  1160  000024                     ??_atoi:
  1161  000024                     ___aldiv@sign:
  1162                           	opt callstack 0
  1163  000024                     ___xxtofl@exp:
  1164                           	opt callstack 0
  1165  000024                     strncmp@r:
  1166                           	opt callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x23
  1169  000024                     	ds	1
  1170  000025                     ___aldiv@quotient:
  1171                           	opt callstack 0
  1172  000025                     ___xxtofl@arg:
  1173                           	opt callstack 0
  1174  000025                     ___fpclassifyf@u:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x24
  1178  000025                     	ds	2
  1179  000027                     ___lldiv@counter:
  1180                           	opt callstack 0
  1181  000027                     _tolower$1770:
  1182                           	opt callstack 0
  1183  000027                     ___fldiv@rem:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x26
  1187  000027                     	ds	1
  1188  000028                     ?_stoa:
  1189                           	opt callstack 0
  1190  000028                     stoa@fp:
  1191                           	opt callstack 0
  1192  000028                     atoi@neg:
  1193                           	opt callstack 0
  1194  000028                     fputs@s:
  1195                           	opt callstack 0
  1196  000028                     I2C_Master_Init@clockFreq:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x27
  1200  000028                     	ds	1
  1201  000029                     ??_UART_Init:
  1202                           
  1203                           ; 1 bytes @ 0x28
  1204  000029                     	ds	1
  1205  00002A                     stoa@s:
  1206                           	opt callstack 0
  1207  00002A                     _atoi$1660:
  1208                           	opt callstack 0
  1209  00002A                     fputs@fp:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x29
  1213  00002A                     	ds	1
  1214  00002B                     ___fldiv@sign:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x2A
  1218  00002B                     	ds	1
  1219  00002C                     ??_I2C_Master_Init:
  1220  00002C                     ??_stoa:
  1221  00002C                     fputs@c:
  1222                           	opt callstack 0
  1223  00002C                     ___fldiv@new_exp:
  1224                           	opt callstack 0
  1225  00002C                     _atoi$1662:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x2B
  1229  00002C                     	ds	1
  1230  00002D                     fputs@i:
  1231                           	opt callstack 0
  1232  00002D                     UART_Init@baudRate:
  1233                           	opt callstack 0
  1234  00002D                     stoa@nuls:
  1235                           	opt callstack 0
  1236                           
  1237                           ; 7 bytes @ 0x2C
  1238  00002D                     	ds	1
  1239  00002E                     _atoi$1661:
  1240                           	opt callstack 0
  1241  00002E                     ___fldiv@grs:
  1242                           	opt callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x2D
  1245  00002E                     	ds	1
  1246  00002F                     ?_pad:
  1247                           	opt callstack 0
  1248  00002F                     pad@fp:
  1249                           	opt callstack 0
  1250  00002F                     atoi@n:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x2E
  1254  00002F                     	ds	2
  1255  000031                     pad@buf:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x30
  1259  000031                     	ds	1
  1260  000032                     ___fldiv@bexp:
  1261                           	opt callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x31
  1264  000032                     	ds	1
  1265  000033                     ___fldiv@aexp:
  1266                           	opt callstack 0
  1267  000033                     pad@p:
  1268                           	opt callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x32
  1271  000033                     	ds	1
  1272  000034                     ?_floorf:
  1273                           	opt callstack 0
  1274  000034                     ?___fladd:
  1275                           	opt callstack 0
  1276  000034                     ?___flmul:
  1277                           	opt callstack 0
  1278  000034                     stoa@i:
  1279                           	opt callstack 0
  1280  000034                     ___fladd@b:
  1281                           	opt callstack 0
  1282  000034                     ___flmul@b:
  1283                           	opt callstack 0
  1284  000034                     floorf@x:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x33
  1288  000034                     	ds	1
  1289  000035                     ??_pad:
  1290                           
  1291                           ; 1 bytes @ 0x34
  1292  000035                     	ds	1
  1293  000036                     pad@i:
  1294                           	opt callstack 0
  1295  000036                     stoa@w:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x35
  1299  000036                     	ds	2
  1300  000038                     ??_floorf:
  1301  000038                     pad@w:
  1302                           	opt callstack 0
  1303  000038                     stoa@cp:
  1304                           	opt callstack 0
  1305  000038                     ___fladd@a:
  1306                           	opt callstack 0
  1307  000038                     ___flmul@a:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x37
  1311  000038                     	ds	2
  1312  00003A                     ?_ctoa:
  1313                           	opt callstack 0
  1314  00003A                     ctoa@fp:
  1315                           	opt callstack 0
  1316  00003A                     stoa@p:
  1317                           	opt callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x39
  1320  00003A                     	ds	2
  1321  00003C                     ??___fladd:
  1322  00003C                     ??___flmul:
  1323  00003C                     ctoa@c:
  1324                           	opt callstack 0
  1325  00003C                     stoa@l:
  1326                           	opt callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x3B
  1329  00003C                     	ds	1
  1330  00003D                     ctoa@w:
  1331                           	opt callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x3C
  1334  00003D                     	ds	1
  1335  00003E                     floorf@m:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 4 bytes @ 0x3D
  1339  00003E                     	ds	2
  1340  000040                     ?___fltol:
  1341                           	opt callstack 0
  1342  000040                     ___fladd@signs:
  1343                           	opt callstack 0
  1344  000040                     ___flge@ff1:
  1345                           	opt callstack 0
  1346  000040                     ___fltol@f1:
  1347                           	opt callstack 0
  1348                           
  1349                           ; 4 bytes @ 0x3F
  1350  000040                     	ds	1
  1351  000041                     ___fladd@aexp:
  1352                           	opt callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x40
  1355  000041                     	ds	1
  1356  000042                     ___fladd@bexp:
  1357                           	opt callstack 0
  1358  000042                     floorf@e:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x41
  1362  000042                     	ds	1
  1363  000043                     ___fladd@grs:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 1 bytes @ 0x42
  1367  000043                     	ds	1
  1368  000044                     ??___fltol:
  1369  000044                     ?___flsub:
  1370                           	opt callstack 0
  1371  000044                     ___flge@ff2:
  1372                           	opt callstack 0
  1373  000044                     ___flsub@b:
  1374                           	opt callstack 0
  1375  000044                     floorf@u:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x43
  1379  000044                     	ds	4
  1380  000048                     ??___flge:
  1381  000048                     ___fltol@sign1:
  1382                           	opt callstack 0
  1383  000048                     ___flsub@a:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x47
  1387  000048                     	ds	1
  1388  000049                     ___fltol@exp1:
  1389                           	opt callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x48
  1392  000049                     	ds	3
  1393  00004C                     
  1394                           ; 1 bytes @ 0x4B
  1395 ;;
  1396 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1397 ;;
  1398 ;; *************** function _main *****************
  1399 ;; Defined at:
  1400 ;;		line 49 in file "main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  keypress        1  111[BANK1 ] unsigned char 
  1405 ;;  command        25   60[BANK1 ] unsigned char [25]
  1406 ;;  uart_char_to   25   25[BANK1 ] unsigned char [25]
  1407 ;;  lcdDisplay     16   85[BANK1 ] unsigned char [16]
  1408 ;;  buffer         10   50[BANK1 ] unsigned char [10]
  1409 ;;  k               8  103[BANK1 ] long long 
  1410 ;;  index           2  113[BANK1 ] int 
  1411 ;;  commandLengt    2    0        int 
  1412 ;;  commandRecei    1  112[BANK1 ] _Bool 
  1413 ;;  toPrint         1    0        unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Locals:         0       0      90       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Totals:         0       0      95       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;Total ram usage:       95 bytes
  1428 ;; Hardware stack levels required when called:   14
  1429 ;; This function calls:
  1430 ;;		_DCMotorAllOff
  1431 ;;		_DCMotorCenterLeft
  1432 ;;		_DCMotorCenterRight
  1433 ;;		_DCMotorLeftBkwd
  1434 ;;		_DCMotorLeftFwd
  1435 ;;		_DCMotorLeftRightBkwdON
  1436 ;;		_DCMotorLeftRightFwdON
  1437 ;;		_DCMotorRightBkwd
  1438 ;;		_DCMotorRightFwd
  1439 ;;		_I2C_Master_Init
  1440 ;;		_LCD_set_cursor
  1441 ;;		_LCD_write_str
  1442 ;;		_PWMSetup
  1443 ;;		_UART_Init
  1444 ;;		_UART_available
  1445 ;;		_UART_read
  1446 ;;		_UART_send_string
  1447 ;;		___fldiv
  1448 ;;		___flmul
  1449 ;;		_drive
  1450 ;;		_initLCD
  1451 ;;		_portSetup
  1452 ;;		_sprintf
  1453 ;; This function is called by:
  1454 ;;		Startup code after reset
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text0
  1459  001FB4                     __ptext0:
  1460                           	opt callstack 0
  1461  001FB4                     _main:
  1462                           	opt callstack 17
  1463                           
  1464                           ;main.c: 51:     portSetup();
  1465                           
  1466                           ;incstack = 0
  1467  001FB4  EC26  F023         	call	_portSetup	;wreg free
  1468                           
  1469                           ;main.c: 52:     PWMSetup();
  1470  001FB8  ECDA  F024         	call	_PWMSetup	;wreg free
  1471                           
  1472                           ;main.c: 53:     initLCD();
  1473  001FBC  EC41  F022         	call	_initLCD	;wreg free
  1474                           
  1475                           ;main.c: 54:     I2C_Master_Init(100000);
  1476  001FC0  0EA0               	movlw	160
  1477  001FC2  6E28               	movwf	I2C_Master_Init@clockFreq,c
  1478  001FC4  0E86               	movlw	134
  1479  001FC6  6E29               	movwf	I2C_Master_Init@clockFreq+1,c
  1480  001FC8  0E01               	movlw	1
  1481  001FCA  6E2A               	movwf	I2C_Master_Init@clockFreq+2,c
  1482  001FCC  0E00               	movlw	0
  1483  001FCE  6E2B               	movwf	I2C_Master_Init@clockFreq+3,c
  1484  001FD0  EC79  F022         	call	_I2C_Master_Init	;wreg free
  1485                           
  1486                           ;main.c: 56:     UART_Init();
  1487  001FD4  ECFA  F020         	call	_UART_Init	;wreg free
  1488                           
  1489                           ;main.c: 58:     LCD_set_cursor(0,0);
  1490  001FD8  0E00               	movlw	0
  1491  001FDA  6E20               	movwf	LCD_set_cursor@row+1,c
  1492  001FDC  0E00               	movlw	0
  1493  001FDE  6E1F               	movwf	LCD_set_cursor@row,c
  1494  001FE0  0E00               	movlw	0
  1495  001FE2  6E22               	movwf	LCD_set_cursor@column+1,c
  1496  001FE4  0E00               	movlw	0
  1497  001FE6  6E21               	movwf	LCD_set_cursor@column,c
  1498  001FE8  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1499                           
  1500                           ;main.c: 62:     UART_send_string("Init complete\n");
  1501  001FEC  0E21               	movlw	low STR_1
  1502  001FEE  6E1C               	movwf	UART_send_string@message,c
  1503  001FF0  0E10               	movlw	high STR_1
  1504  001FF2  6E1D               	movwf	UART_send_string@message+1,c
  1505  001FF4  EC6B  F01F         	call	_UART_send_string	;wreg free
  1506                           
  1507                           ;main.c: 65:     _Bool commandReceived = 0;
  1508  001FF8  0E00               	movlw	0
  1509  001FFA  0101               	movlb	1	; () banked
  1510  001FFC  6F70               	movwf	main@commandReceived& (0+255),b
  1511                           
  1512                           ; BSR set to: 1
  1513                           ;main.c: 67:     unsigned char command [25];;main.c: 68:     unsigned char lcdDisplay [1
      +                          6];;main.c: 69:     unsigned char uart_char_to_send[25];;main.c: 70:     char buffer[10]
      +                          ;;main.c: 71:     int index = 0;
  1514                           
  1515                           ; BSR set to: 1
  1516  001FFE  0E00               	movlw	0
  1517  002000  6F72               	movwf	(main@index+1)& (0+255),b
  1518  002002  0E00               	movlw	0
  1519  002004  6F71               	movwf	main@index& (0+255),b
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;main.c: 72:     unsigned char toPrint;;main.c: 73:     long long int k = 0;
  1523  002006  EE21  F067         	lfsr	2,main@k
  1524  00200A  0E07               	movlw	7
  1525  00200C                     u9771:
  1526  00200C  6ADE               	clrf	postinc2,c
  1527  00200E  06E8               	decf	wreg,f,c
  1528  002010  E2FD               	bc	u9771
  1529  002012                     l8158:
  1530                           
  1531                           ;main.c: 78:         distanceL = (tickL/960)*200;
  1532  002012  0E00               	movlw	0
  1533  002014  6E1F               	movwf	___fldiv@a,c
  1534  002016  0E00               	movlw	0
  1535  002018  6E20               	movwf	___fldiv@a+1,c
  1536  00201A  0E70               	movlw	112
  1537  00201C  6E21               	movwf	___fldiv@a+2,c
  1538  00201E  0E44               	movlw	68
  1539  002020  6E22               	movwf	___fldiv@a+3,c
  1540  002022  C187  F01B         	movff	_tickL,___fldiv@b	;volatile
  1541  002026  C188  F01C         	movff	_tickL+1,___fldiv@b+1	;volatile
  1542  00202A  C189  F01D         	movff	_tickL+2,___fldiv@b+2	;volatile
  1543  00202E  C18A  F01E         	movff	_tickL+3,___fldiv@b+3	;volatile
  1544  002032  EC38  F017         	call	___fldiv	;wreg free
  1545  002036  C01B  F034         	movff	?___fldiv,___flmul@b
  1546  00203A  C01C  F035         	movff	?___fldiv+1,___flmul@b+1
  1547  00203E  C01D  F036         	movff	?___fldiv+2,___flmul@b+2
  1548  002042  C01E  F037         	movff	?___fldiv+3,___flmul@b+3
  1549  002046  0E00               	movlw	0
  1550  002048  6E38               	movwf	___flmul@a,c
  1551  00204A  0E00               	movlw	0
  1552  00204C  6E39               	movwf	___flmul@a+1,c
  1553  00204E  0E48               	movlw	72
  1554  002050  6E3A               	movwf	___flmul@a+2,c
  1555  002052  0E43               	movlw	67
  1556  002054  6E3B               	movwf	___flmul@a+3,c
  1557  002056  EC82  F012         	call	___flmul	;wreg free
  1558  00205A  C034  F17F         	movff	?___flmul,_distanceL	;volatile
  1559  00205E  C035  F180         	movff	?___flmul+1,_distanceL+1	;volatile
  1560  002062  C036  F181         	movff	?___flmul+2,_distanceL+2	;volatile
  1561  002066  C037  F182         	movff	?___flmul+3,_distanceL+3	;volatile
  1562                           
  1563                           ;main.c: 79:         distanceR = (tickR/960)*200;
  1564  00206A  0E00               	movlw	0
  1565  00206C  6E1F               	movwf	___fldiv@a,c
  1566  00206E  0E00               	movlw	0
  1567  002070  6E20               	movwf	___fldiv@a+1,c
  1568  002072  0E70               	movlw	112
  1569  002074  6E21               	movwf	___fldiv@a+2,c
  1570  002076  0E44               	movlw	68
  1571  002078  6E22               	movwf	___fldiv@a+3,c
  1572  00207A  C183  F01B         	movff	_tickR,___fldiv@b	;volatile
  1573  00207E  C184  F01C         	movff	_tickR+1,___fldiv@b+1	;volatile
  1574  002082  C185  F01D         	movff	_tickR+2,___fldiv@b+2	;volatile
  1575  002086  C186  F01E         	movff	_tickR+3,___fldiv@b+3	;volatile
  1576  00208A  EC38  F017         	call	___fldiv	;wreg free
  1577  00208E  C01B  F034         	movff	?___fldiv,___flmul@b
  1578  002092  C01C  F035         	movff	?___fldiv+1,___flmul@b+1
  1579  002096  C01D  F036         	movff	?___fldiv+2,___flmul@b+2
  1580  00209A  C01E  F037         	movff	?___fldiv+3,___flmul@b+3
  1581  00209E  0E00               	movlw	0
  1582  0020A0  6E38               	movwf	___flmul@a,c
  1583  0020A2  0E00               	movlw	0
  1584  0020A4  6E39               	movwf	___flmul@a+1,c
  1585  0020A6  0E48               	movlw	72
  1586  0020A8  6E3A               	movwf	___flmul@a+2,c
  1587  0020AA  0E43               	movlw	67
  1588  0020AC  6E3B               	movwf	___flmul@a+3,c
  1589  0020AE  EC82  F012         	call	___flmul	;wreg free
  1590  0020B2  C034  F17B         	movff	?___flmul,_distanceR	;volatile
  1591  0020B6  C035  F17C         	movff	?___flmul+1,_distanceR+1	;volatile
  1592  0020BA  C036  F17D         	movff	?___flmul+2,_distanceR+2	;volatile
  1593  0020BE  C037  F17E         	movff	?___flmul+3,_distanceR+3	;volatile
  1594                           
  1595                           ;main.c: 80:         if(moving){
  1596  0020C2  0101               	movlb	1	; () banked
  1597  0020C4  518B               	movf	_moving& (0+255),w,b
  1598  0020C6  B4D8               	btfsc	status,2,c
  1599  0020C8  D008               	goto	l8168
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;main.c: 81:             drive();
  1603  0020CA  EC57  F019         	call	_drive	;wreg free
  1604                           
  1605                           ;main.c: 82:             k=0;
  1606  0020CE  EE21  F067         	lfsr	2,main@k
  1607  0020D2  0E07               	movlw	7
  1608  0020D4                     u9791:
  1609  0020D4  6ADE               	clrf	postinc2,c
  1610  0020D6  06E8               	decf	wreg,f,c
  1611  0020D8  E2FD               	bc	u9791
  1612  0020DA                     l8168:
  1613                           
  1614                           ;main.c: 84:         k+=1;
  1615  0020DA  0E01               	movlw	1
  1616  0020DC  0101               	movlb	1	; () banked
  1617  0020DE  2767               	addwf	main@k& (0+255),f,b
  1618  0020E0  0E00               	movlw	0
  1619  0020E2  2368               	addwfc	(main@k+1)& (0+255),f,b
  1620  0020E4  2369               	addwfc	(main@k+2)& (0+255),f,b
  1621  0020E6  236A               	addwfc	(main@k+3)& (0+255),f,b
  1622  0020E8  236B               	addwfc	(main@k+4)& (0+255),f,b
  1623  0020EA  236C               	addwfc	(main@k+5)& (0+255),f,b
  1624  0020EC  236D               	addwfc	(main@k+6)& (0+255),f,b
  1625  0020EE  236E               	addwfc	(main@k+7)& (0+255),f,b
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;main.c: 103:         if(UART_available()>0){
  1629  0020F0  EC14  F025         	call	_UART_available	;wreg free
  1630  0020F4  BE1C               	btfsc	?_UART_available+1,7,c
  1631  0020F6  D013               	goto	l8176
  1632  0020F8  501C               	movf	?_UART_available+1,w,c
  1633  0020FA  E103               	bnz	u9800
  1634  0020FC  041B               	decf	?_UART_available,w,c
  1635  0020FE  A0D8               	btfss	status,0,c
  1636  002100  D00E               	goto	l8176
  1637  002102                     u9800:
  1638                           
  1639                           ;main.c: 104:             command[index] = UART_read();
  1640  002102  EC01  F025         	call	_UART_read	;wreg free
  1641  002106  0101               	movlb	1	; () banked
  1642  002108  6F14               	movwf	??_main& (0+255),b
  1643  00210A  0E3C               	movlw	low main@command
  1644  00210C  2571               	addwf	main@index& (0+255),w,b
  1645  00210E  6ED9               	movwf	fsr2l,c
  1646  002110  0E01               	movlw	high main@command
  1647  002112  2172               	addwfc	(main@index+1)& (0+255),w,b
  1648  002114  6EDA               	movwf	fsr2h,c
  1649  002116  C114  FFDF         	movff	??_main,indf2
  1650                           
  1651                           ; BSR set to: 1
  1652                           ;main.c: 105:             index++;
  1653  00211A  4B71               	infsnz	main@index& (0+255),f,b
  1654  00211C  2B72               	incf	(main@index+1)& (0+255),f,b
  1655  00211E                     l8176:
  1656                           
  1657                           ;main.c: 112:         if(index>0 && command[index-1] == '\n'){
  1658  00211E  0101               	movlb	1	; () banked
  1659  002120  BF72               	btfsc	(main@index+1)& (0+255),7,b
  1660  002122  D021               	goto	l291
  1661  002124  5172               	movf	(main@index+1)& (0+255),w,b
  1662  002126  E103               	bnz	u9810
  1663  002128  0571               	decf	main@index& (0+255),w,b
  1664  00212A  A0D8               	btfss	status,0,c
  1665  00212C  D01C               	goto	l291
  1666  00212E                     u9810:
  1667                           
  1668                           ; BSR set to: 1
  1669  00212E  0EFF               	movlw	255
  1670  002130  6F14               	movwf	??_main& (0+255),b
  1671  002132  0EFF               	movlw	255
  1672  002134  6F15               	movwf	(??_main+1)& (0+255),b
  1673  002136  C171  F116         	movff	main@index,??_main+2
  1674  00213A  C172  F117         	movff	main@index+1,??_main+3
  1675  00213E  5114               	movf	??_main& (0+255),w,b
  1676  002140  2716               	addwf	(??_main+2)& (0+255),f,b
  1677  002142  5115               	movf	(??_main+1)& (0+255),w,b
  1678  002144  2317               	addwfc	(??_main+3)& (0+255),f,b
  1679  002146  0E3C               	movlw	low main@command
  1680  002148  2516               	addwf	(??_main+2)& (0+255),w,b
  1681  00214A  6ED9               	movwf	fsr2l,c
  1682  00214C  0E01               	movlw	high main@command
  1683  00214E  2117               	addwfc	(??_main+3)& (0+255),w,b
  1684  002150  6EDA               	movwf	fsr2h,c
  1685  002152  0E0A               	movlw	10
  1686  002154  18DE               	xorwf	postinc2,w,c
  1687  002156  A4D8               	btfss	status,2,c
  1688  002158  D006               	goto	l291
  1689                           
  1690                           ; BSR set to: 1
  1691                           ;main.c: 114:             commandReceived = 1;
  1692  00215A  0E01               	movlw	1
  1693  00215C  6F70               	movwf	main@commandReceived& (0+255),b
  1694                           
  1695                           ; BSR set to: 1
  1696                           ;main.c: 116:             index = 0;
  1697  00215E  0E00               	movlw	0
  1698  002160  6F72               	movwf	(main@index+1)& (0+255),b
  1699  002162  0E00               	movlw	0
  1700  002164  6F71               	movwf	main@index& (0+255),b
  1701  002166                     l291:
  1702                           
  1703                           ; BSR set to: 1
  1704                           ;main.c: 119:         if(commandReceived){
  1705  002166  5170               	movf	main@commandReceived& (0+255),w,b
  1706  002168  B4D8               	btfsc	status,2,c
  1707  00216A  D1A3               	goto	l321
  1708                           
  1709                           ; BSR set to: 1
  1710                           ;main.c: 121:             commandReceived = 0;
  1711  00216C  0E00               	movlw	0
  1712  00216E  6F70               	movwf	main@commandReceived& (0+255),b
  1713                           
  1714                           ;main.c: 122:             switch(command[0]){
  1715  002170  D18F               	goto	l8292
  1716  002172                     l8186:
  1717                           
  1718                           ; BSR set to: 1
  1719                           ;main.c: 129:                                     LCD_set_cursor(0,0);
  1720  002172  0E00               	movlw	0
  1721  002174  6E20               	movwf	LCD_set_cursor@row+1,c
  1722  002176  0E00               	movlw	0
  1723  002178  6E1F               	movwf	LCD_set_cursor@row,c
  1724  00217A  0E00               	movlw	0
  1725  00217C  6E22               	movwf	LCD_set_cursor@column+1,c
  1726  00217E  0E00               	movlw	0
  1727  002180  6E21               	movwf	LCD_set_cursor@column,c
  1728  002182  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1729                           
  1730                           ;main.c: 131:                                     travelDirection = 1;
  1731  002186  0E00               	movlw	0
  1732  002188  6E5B               	movwf	_travelDirection+1,c	;volatile
  1733  00218A  0E01               	movlw	1
  1734  00218C  6E5A               	movwf	_travelDirection,c	;volatile
  1735                           
  1736                           ;main.c: 132:                                     moving = 1;
  1737  00218E  0E01               	movlw	1
  1738  002190  0101               	movlb	1	; () banked
  1739  002192  6F8B               	movwf	_moving& (0+255),b
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;main.c: 133:                                     DCMotorLeftRightFwdON();
  1743  002194  EC59  F025         	call	_DCMotorLeftRightFwdON	;wreg free
  1744                           
  1745                           ;main.c: 134:                                     break;
  1746  002198  D18C               	goto	l321
  1747  00219A                     l8194:
  1748                           
  1749                           ; BSR set to: 1
  1750                           ;main.c: 136:                                     LCD_set_cursor(0,0);
  1751  00219A  0E00               	movlw	0
  1752  00219C  6E20               	movwf	LCD_set_cursor@row+1,c
  1753  00219E  0E00               	movlw	0
  1754  0021A0  6E1F               	movwf	LCD_set_cursor@row,c
  1755  0021A2  0E00               	movlw	0
  1756  0021A4  6E22               	movwf	LCD_set_cursor@column+1,c
  1757  0021A6  0E00               	movlw	0
  1758  0021A8  6E21               	movwf	LCD_set_cursor@column,c
  1759  0021AA  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1760                           
  1761                           ;main.c: 138:                                     DCMotorLeftFwd();
  1762  0021AE  EC67  F025         	call	_DCMotorLeftFwd	;wreg free
  1763                           
  1764                           ;main.c: 139:                                     break;
  1765  0021B2  D17F               	goto	l321
  1766  0021B4                     l8198:
  1767                           
  1768                           ; BSR set to: 1
  1769                           ;main.c: 141:                                     LCD_set_cursor(0,0);
  1770  0021B4  0E00               	movlw	0
  1771  0021B6  6E20               	movwf	LCD_set_cursor@row+1,c
  1772  0021B8  0E00               	movlw	0
  1773  0021BA  6E1F               	movwf	LCD_set_cursor@row,c
  1774  0021BC  0E00               	movlw	0
  1775  0021BE  6E22               	movwf	LCD_set_cursor@column+1,c
  1776  0021C0  0E00               	movlw	0
  1777  0021C2  6E21               	movwf	LCD_set_cursor@column,c
  1778  0021C4  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1779                           
  1780                           ;main.c: 143:                                     DCMotorRightFwd();
  1781  0021C8  EC63  F025         	call	_DCMotorRightFwd	;wreg free
  1782                           
  1783                           ;main.c: 144:                                     break;
  1784  0021CC  D172               	goto	l321
  1785  0021CE                     l8202:
  1786                           
  1787                           ; BSR set to: 1
  1788                           ;main.c: 146:                                     LCD_set_cursor(0,0);
  1789  0021CE  0E00               	movlw	0
  1790  0021D0  6E20               	movwf	LCD_set_cursor@row+1,c
  1791  0021D2  0E00               	movlw	0
  1792  0021D4  6E1F               	movwf	LCD_set_cursor@row,c
  1793  0021D6  0E00               	movlw	0
  1794  0021D8  6E22               	movwf	LCD_set_cursor@column+1,c
  1795  0021DA  0E00               	movlw	0
  1796  0021DC  6E21               	movwf	LCD_set_cursor@column,c
  1797  0021DE  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1798                           
  1799                           ;main.c: 148:                                     moving = 0;
  1800  0021E2  0E00               	movlw	0
  1801  0021E4  0101               	movlb	1	; () banked
  1802  0021E6  6F8B               	movwf	_moving& (0+255),b
  1803  0021E8                     l8206:
  1804                           
  1805                           ;main.c: 149:                                     DCMotorAllOff();
  1806  0021E8  EC46  F025         	call	_DCMotorAllOff	;wreg free
  1807                           
  1808                           ;main.c: 150:                                     break;
  1809  0021EC  D162               	goto	l321
  1810  0021EE                     l8210:
  1811                           
  1812                           ; BSR set to: 1
  1813  0021EE  513E               	movf	(main@command+2)& (0+255),w,b
  1814  0021F0  6F14               	movwf	??_main& (0+255),b
  1815  0021F2  6B15               	clrf	(??_main+1)& (0+255),b
  1816                           
  1817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1818                           ; Switch size 1, requested type "simple"
  1819                           ; Number of cases is 1, Range of values is 0 to 0
  1820                           ; switch strategies available:
  1821                           ; Name         Instructions Cycles
  1822                           ; simple_byte            4     3 (average)
  1823                           ;	Chosen strategy is simple_byte
  1824  0021F4  5115               	movf	(??_main+1)& (0+255),w,b
  1825  0021F6  0A00               	xorlw	0	; case 0
  1826  0021F8  A4D8               	btfss	status,2,c
  1827  0021FA  D15B               	goto	l321
  1828                           
  1829                           ; BSR set to: 1
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 4, Range of values is 66 to 82
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte           13     7 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836  0021FC  5114               	movf	??_main& (0+255),w,b
  1837  0021FE  0A42               	xorlw	66	; case 66
  1838  002200  B4D8               	btfsc	status,2,c
  1839  002202  D7B7               	goto	l8186
  1840  002204  0A04               	xorlw	4	; case 70
  1841  002206  B4D8               	btfsc	status,2,c
  1842  002208  D7E2               	goto	l8202
  1843  00220A  0A0A               	xorlw	10	; case 76
  1844  00220C  B4D8               	btfsc	status,2,c
  1845  00220E  D7C5               	goto	l8194
  1846  002210  0A1E               	xorlw	30	; case 82
  1847  002212  B4D8               	btfsc	status,2,c
  1848  002214  D7CF               	goto	l8198
  1849  002216  D14D               	goto	l321
  1850  002218                     l8212:
  1851                           
  1852                           ; BSR set to: 1
  1853                           ;main.c: 158:                                     LCD_set_cursor(0,0);
  1854  002218  0E00               	movlw	0
  1855  00221A  6E20               	movwf	LCD_set_cursor@row+1,c
  1856  00221C  0E00               	movlw	0
  1857  00221E  6E1F               	movwf	LCD_set_cursor@row,c
  1858  002220  0E00               	movlw	0
  1859  002222  6E22               	movwf	LCD_set_cursor@column+1,c
  1860  002224  0E00               	movlw	0
  1861  002226  6E21               	movwf	LCD_set_cursor@column,c
  1862  002228  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1863                           
  1864                           ;main.c: 160:                                     travelDirection = 2;
  1865  00222C  0E00               	movlw	0
  1866  00222E  6E5B               	movwf	_travelDirection+1,c	;volatile
  1867  002230  0E02               	movlw	2
  1868  002232  6E5A               	movwf	_travelDirection,c	;volatile
  1869                           
  1870                           ;main.c: 161:                                     moving = 1;
  1871  002234  0E01               	movlw	1
  1872  002236  0101               	movlb	1	; () banked
  1873  002238  6F8B               	movwf	_moving& (0+255),b
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;main.c: 162:                                     DCMotorLeftRightBkwdON();
  1877  00223A  EC5E  F025         	call	_DCMotorLeftRightBkwdON	;wreg free
  1878                           
  1879                           ;main.c: 163:                                     break;
  1880  00223E  D139               	goto	l321
  1881  002240                     l8220:
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main.c: 165:                                     LCD_set_cursor(0,0);
  1885  002240  0E00               	movlw	0
  1886  002242  6E20               	movwf	LCD_set_cursor@row+1,c
  1887  002244  0E00               	movlw	0
  1888  002246  6E1F               	movwf	LCD_set_cursor@row,c
  1889  002248  0E00               	movlw	0
  1890  00224A  6E22               	movwf	LCD_set_cursor@column+1,c
  1891  00224C  0E00               	movlw	0
  1892  00224E  6E21               	movwf	LCD_set_cursor@column,c
  1893  002250  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1894                           
  1895                           ;main.c: 167:                                     DCMotorLeftBkwd();
  1896  002254  EC6F  F025         	call	_DCMotorLeftBkwd	;wreg free
  1897                           
  1898                           ;main.c: 168:                                     break;
  1899  002258  D12C               	goto	l321
  1900  00225A                     l8224:
  1901                           
  1902                           ; BSR set to: 1
  1903                           ;main.c: 170:                                     LCD_set_cursor(0,0);
  1904  00225A  0E00               	movlw	0
  1905  00225C  6E20               	movwf	LCD_set_cursor@row+1,c
  1906  00225E  0E00               	movlw	0
  1907  002260  6E1F               	movwf	LCD_set_cursor@row,c
  1908  002262  0E00               	movlw	0
  1909  002264  6E22               	movwf	LCD_set_cursor@column+1,c
  1910  002266  0E00               	movlw	0
  1911  002268  6E21               	movwf	LCD_set_cursor@column,c
  1912  00226A  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1913                           
  1914                           ;main.c: 172:                                     DCMotorRightBkwd();
  1915  00226E  EC6B  F025         	call	_DCMotorRightBkwd	;wreg free
  1916                           
  1917                           ;main.c: 173:                                     break;
  1918  002272  D11F               	goto	l321
  1919  002274                     l8236:
  1920                           
  1921                           ; BSR set to: 1
  1922  002274  513E               	movf	(main@command+2)& (0+255),w,b
  1923  002276  6F14               	movwf	??_main& (0+255),b
  1924  002278  6B15               	clrf	(??_main+1)& (0+255),b
  1925                           
  1926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 1, Range of values is 0 to 0
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte            4     3 (average)
  1932                           ;	Chosen strategy is simple_byte
  1933  00227A  5115               	movf	(??_main+1)& (0+255),w,b
  1934  00227C  0A00               	xorlw	0	; case 0
  1935  00227E  A4D8               	btfss	status,2,c
  1936  002280  D118               	goto	l321
  1937                           
  1938                           ; BSR set to: 1
  1939                           ; Switch size 1, requested type "simple"
  1940                           ; Number of cases is 4, Range of values is 66 to 82
  1941                           ; switch strategies available:
  1942                           ; Name         Instructions Cycles
  1943                           ; simple_byte           13     7 (average)
  1944                           ;	Chosen strategy is simple_byte
  1945  002282  5114               	movf	??_main& (0+255),w,b
  1946  002284  0A42               	xorlw	66	; case 66
  1947  002286  B4D8               	btfsc	status,2,c
  1948  002288  D7C7               	goto	l8212
  1949  00228A  0A04               	xorlw	4	; case 70
  1950  00228C  B4D8               	btfsc	status,2,c
  1951  00228E  D79F               	goto	l8202
  1952  002290  0A0A               	xorlw	10	; case 76
  1953  002292  B4D8               	btfsc	status,2,c
  1954  002294  D7D5               	goto	l8220
  1955  002296  0A1E               	xorlw	30	; case 82
  1956  002298  B4D8               	btfsc	status,2,c
  1957  00229A  D7DF               	goto	l8224
  1958  00229C  D10A               	goto	l321
  1959  00229E                     l8238:
  1960                           
  1961                           ; BSR set to: 1
  1962                           ;main.c: 187:                                     LCD_set_cursor(0,0);
  1963  00229E  0E00               	movlw	0
  1964  0022A0  6E20               	movwf	LCD_set_cursor@row+1,c
  1965  0022A2  0E00               	movlw	0
  1966  0022A4  6E1F               	movwf	LCD_set_cursor@row,c
  1967  0022A6  0E00               	movlw	0
  1968  0022A8  6E22               	movwf	LCD_set_cursor@column+1,c
  1969  0022AA  0E00               	movlw	0
  1970  0022AC  6E21               	movwf	LCD_set_cursor@column,c
  1971  0022AE  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1972                           
  1973                           ;main.c: 189:                                     DCMotorCenterLeft();
  1974  0022B2  EC7A  F025         	call	_DCMotorCenterLeft	;wreg free
  1975                           
  1976                           ;main.c: 190:                                     break;
  1977  0022B6  D0FD               	goto	l321
  1978  0022B8                     l8242:
  1979                           
  1980                           ; BSR set to: 1
  1981                           ;main.c: 192:                                     LCD_set_cursor(0,0);
  1982  0022B8  0E00               	movlw	0
  1983  0022BA  6E20               	movwf	LCD_set_cursor@row+1,c
  1984  0022BC  0E00               	movlw	0
  1985  0022BE  6E1F               	movwf	LCD_set_cursor@row,c
  1986  0022C0  0E00               	movlw	0
  1987  0022C2  6E22               	movwf	LCD_set_cursor@column+1,c
  1988  0022C4  0E00               	movlw	0
  1989  0022C6  6E21               	movwf	LCD_set_cursor@column,c
  1990  0022C8  EC76  F023         	call	_LCD_set_cursor	;wreg free
  1991                           
  1992                           ;main.c: 194:                                     DCMotorCenterRight();
  1993  0022CC  EC77  F025         	call	_DCMotorCenterRight	;wreg free
  1994                           
  1995                           ;main.c: 195:                                     break;
  1996  0022D0  D0F0               	goto	l321
  1997  0022D2                     l8246:
  1998                           
  1999                           ; BSR set to: 1
  2000                           ;main.c: 197:                                     LCD_set_cursor(0,0);
  2001  0022D2  0E00               	movlw	0
  2002  0022D4  6E20               	movwf	LCD_set_cursor@row+1,c
  2003  0022D6  0E00               	movlw	0
  2004  0022D8  6E1F               	movwf	LCD_set_cursor@row,c
  2005  0022DA  0E00               	movlw	0
  2006  0022DC  6E22               	movwf	LCD_set_cursor@column+1,c
  2007  0022DE  0E00               	movlw	0
  2008  0022E0  6E21               	movwf	LCD_set_cursor@column,c
  2009  0022E2  EC76  F023         	call	_LCD_set_cursor	;wreg free
  2010  0022E6  D780               	goto	l8206
  2011  0022E8                     l8252:
  2012                           
  2013                           ; BSR set to: 1
  2014  0022E8  513E               	movf	(main@command+2)& (0+255),w,b
  2015  0022EA  6F14               	movwf	??_main& (0+255),b
  2016  0022EC  6B15               	clrf	(??_main+1)& (0+255),b
  2017                           
  2018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2019                           ; Switch size 1, requested type "simple"
  2020                           ; Number of cases is 1, Range of values is 0 to 0
  2021                           ; switch strategies available:
  2022                           ; Name         Instructions Cycles
  2023                           ; simple_byte            4     3 (average)
  2024                           ;	Chosen strategy is simple_byte
  2025  0022EE  5115               	movf	(??_main+1)& (0+255),w,b
  2026  0022F0  0A00               	xorlw	0	; case 0
  2027  0022F2  A4D8               	btfss	status,2,c
  2028  0022F4  D0DE               	goto	l321
  2029                           
  2030                           ; BSR set to: 1
  2031                           ; Switch size 1, requested type "simple"
  2032                           ; Number of cases is 3, Range of values is 70 to 82
  2033                           ; switch strategies available:
  2034                           ; Name         Instructions Cycles
  2035                           ; simple_byte           10     6 (average)
  2036                           ;	Chosen strategy is simple_byte
  2037  0022F6  5114               	movf	??_main& (0+255),w,b
  2038  0022F8  0A46               	xorlw	70	; case 70
  2039  0022FA  B4D8               	btfsc	status,2,c
  2040  0022FC  D7EA               	goto	l8246
  2041  0022FE  0A0A               	xorlw	10	; case 76
  2042  002300  B4D8               	btfsc	status,2,c
  2043  002302  D7CD               	goto	l8238
  2044  002304  0A1E               	xorlw	30	; case 82
  2045  002306  B4D8               	btfsc	status,2,c
  2046  002308  D7D7               	goto	l8242
  2047  00230A  D0D3               	goto	l321
  2048  00230C                     l8256:
  2049                           
  2050                           ; BSR set to: 1
  2051  00230C  513D               	movf	(main@command+1)& (0+255),w,b
  2052  00230E  6F14               	movwf	??_main& (0+255),b
  2053  002310  6B15               	clrf	(??_main+1)& (0+255),b
  2054                           
  2055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2056                           ; Switch size 1, requested type "simple"
  2057                           ; Number of cases is 1, Range of values is 0 to 0
  2058                           ; switch strategies available:
  2059                           ; Name         Instructions Cycles
  2060                           ; simple_byte            4     3 (average)
  2061                           ;	Chosen strategy is simple_byte
  2062  002312  5115               	movf	(??_main+1)& (0+255),w,b
  2063  002314  0A00               	xorlw	0	; case 0
  2064  002316  A4D8               	btfss	status,2,c
  2065  002318  D0CC               	goto	l321
  2066                           
  2067                           ; BSR set to: 1
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 3, Range of values is 66 to 83
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte           10     6 (average)
  2073                           ;	Chosen strategy is simple_byte
  2074  00231A  5114               	movf	??_main& (0+255),w,b
  2075  00231C  0A42               	xorlw	66	; case 66
  2076  00231E  B4D8               	btfsc	status,2,c
  2077  002320  D7A9               	goto	l8236
  2078  002322  0A04               	xorlw	4	; case 70
  2079  002324  B4D8               	btfsc	status,2,c
  2080  002326  D763               	goto	l8210
  2081  002328  0A15               	xorlw	21	; case 83
  2082  00232A  B4D8               	btfsc	status,2,c
  2083  00232C  D7DD               	goto	l8252
  2084  00232E  D0C1               	goto	l321
  2085  002330                     l8258:
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;main.c: 214:                             LCD_set_cursor(0,0);
  2089  002330  0E00               	movlw	0
  2090  002332  6E20               	movwf	LCD_set_cursor@row+1,c
  2091  002334  0E00               	movlw	0
  2092  002336  6E1F               	movwf	LCD_set_cursor@row,c
  2093  002338  0E00               	movlw	0
  2094  00233A  6E22               	movwf	LCD_set_cursor@column+1,c
  2095  00233C  0E00               	movlw	0
  2096  00233E  6E21               	movwf	LCD_set_cursor@column,c
  2097  002340  EC76  F023         	call	_LCD_set_cursor	;wreg free
  2098                           
  2099                           ;main.c: 215:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2100  002344  0E55               	movlw	low main@lcdDisplay
  2101  002346  0101               	movlb	1	; () banked
  2102  002348  6F00               	movwf	sprintf@s& (0+255),b
  2103  00234A  0E01               	movlw	high main@lcdDisplay
  2104  00234C  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2105  00234E  0E40               	movlw	low STR_2
  2106  002350  6F02               	movwf	sprintf@fmt& (0+255),b
  2107  002352  0E10               	movlw	high STR_2
  2108  002354  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2109  002356  0E00               	movlw	0
  2110  002358  6F05               	movwf	(?_sprintf+5)& (0+255),b
  2111  00235A  0E10               	movlw	16
  2112  00235C  6F04               	movwf	(?_sprintf+4)& (0+255),b
  2113  00235E  0E3E               	movlw	low (main@command+2)
  2114  002360  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2115  002362  0E01               	movlw	high (main@command+2)
  2116  002364  6F07               	movwf	(?_sprintf+7)& (0+255),b
  2117  002366  ECD2  F022         	call	_sprintf	;wreg free
  2118  00236A                     l8262:
  2119                           
  2120                           ;main.c: 216:                             LCD_write_str(lcdDisplay);
  2121  00236A  0E55               	movlw	low main@lcdDisplay
  2122  00236C  6E1E               	movwf	LCD_write_str@str,c
  2123  00236E  0E01               	movlw	high main@lcdDisplay
  2124  002370  6E1F               	movwf	LCD_write_str@str+1,c
  2125  002372  ECC3  F023         	call	_LCD_write_str	;wreg free
  2126                           
  2127                           ;main.c: 217:                             break;
  2128  002376  D09D               	goto	l321
  2129  002378                     l8264:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 219:                             LCD_set_cursor(1,0);
  2133  002378  0E00               	movlw	0
  2134  00237A  6E20               	movwf	LCD_set_cursor@row+1,c
  2135  00237C  0E01               	movlw	1
  2136  00237E  6E1F               	movwf	LCD_set_cursor@row,c
  2137  002380  0E00               	movlw	0
  2138  002382  6E22               	movwf	LCD_set_cursor@column+1,c
  2139  002384  0E00               	movlw	0
  2140  002386  6E21               	movwf	LCD_set_cursor@column,c
  2141  002388  EC76  F023         	call	_LCD_set_cursor	;wreg free
  2142                           
  2143                           ;main.c: 220:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2144  00238C  0E55               	movlw	low main@lcdDisplay
  2145  00238E  0101               	movlb	1	; () banked
  2146  002390  6F00               	movwf	sprintf@s& (0+255),b
  2147  002392  0E01               	movlw	high main@lcdDisplay
  2148  002394  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2149  002396  0E40               	movlw	low STR_2
  2150  002398  6F02               	movwf	sprintf@fmt& (0+255),b
  2151  00239A  0E10               	movlw	high STR_2
  2152  00239C  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2153  00239E  0E00               	movlw	0
  2154  0023A0  6F05               	movwf	(?_sprintf+5)& (0+255),b
  2155  0023A2  0E10               	movlw	16
  2156  0023A4  6F04               	movwf	(?_sprintf+4)& (0+255),b
  2157  0023A6  0E3E               	movlw	low (main@command+2)
  2158  0023A8  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2159  0023AA  0E01               	movlw	high (main@command+2)
  2160  0023AC  6F07               	movwf	(?_sprintf+7)& (0+255),b
  2161  0023AE  ECD2  F022         	call	_sprintf	;wreg free
  2162  0023B2  D7DB               	goto	l8262
  2163  0023B4                     l8270:
  2164                           
  2165                           ; BSR set to: 1
  2166                           ;main.c: 224:                             LCD_set_cursor(2,0);
  2167  0023B4  0E00               	movlw	0
  2168  0023B6  6E20               	movwf	LCD_set_cursor@row+1,c
  2169  0023B8  0E02               	movlw	2
  2170  0023BA  6E1F               	movwf	LCD_set_cursor@row,c
  2171  0023BC  0E00               	movlw	0
  2172  0023BE  6E22               	movwf	LCD_set_cursor@column+1,c
  2173  0023C0  0E00               	movlw	0
  2174  0023C2  6E21               	movwf	LCD_set_cursor@column,c
  2175  0023C4  EC76  F023         	call	_LCD_set_cursor	;wreg free
  2176                           
  2177                           ;main.c: 225:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2178  0023C8  0E55               	movlw	low main@lcdDisplay
  2179  0023CA  0101               	movlb	1	; () banked
  2180  0023CC  6F00               	movwf	sprintf@s& (0+255),b
  2181  0023CE  0E01               	movlw	high main@lcdDisplay
  2182  0023D0  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2183  0023D2  0E40               	movlw	low STR_2
  2184  0023D4  6F02               	movwf	sprintf@fmt& (0+255),b
  2185  0023D6  0E10               	movlw	high STR_2
  2186  0023D8  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2187  0023DA  0E00               	movlw	0
  2188  0023DC  6F05               	movwf	(?_sprintf+5)& (0+255),b
  2189  0023DE  0E10               	movlw	16
  2190  0023E0  6F04               	movwf	(?_sprintf+4)& (0+255),b
  2191  0023E2  0E3E               	movlw	low (main@command+2)
  2192  0023E4  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2193  0023E6  0E01               	movlw	high (main@command+2)
  2194  0023E8  6F07               	movwf	(?_sprintf+7)& (0+255),b
  2195  0023EA  ECD2  F022         	call	_sprintf	;wreg free
  2196  0023EE  D7BD               	goto	l8262
  2197  0023F0                     l8276:
  2198                           
  2199                           ; BSR set to: 1
  2200                           ;main.c: 229:                             LCD_set_cursor(3,0);
  2201  0023F0  0E00               	movlw	0
  2202  0023F2  6E20               	movwf	LCD_set_cursor@row+1,c
  2203  0023F4  0E03               	movlw	3
  2204  0023F6  6E1F               	movwf	LCD_set_cursor@row,c
  2205  0023F8  0E00               	movlw	0
  2206  0023FA  6E22               	movwf	LCD_set_cursor@column+1,c
  2207  0023FC  0E00               	movlw	0
  2208  0023FE  6E21               	movwf	LCD_set_cursor@column,c
  2209  002400  EC76  F023         	call	_LCD_set_cursor	;wreg free
  2210                           
  2211                           ;main.c: 230:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2212  002404  0E55               	movlw	low main@lcdDisplay
  2213  002406  0101               	movlb	1	; () banked
  2214  002408  6F00               	movwf	sprintf@s& (0+255),b
  2215  00240A  0E01               	movlw	high main@lcdDisplay
  2216  00240C  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2217  00240E  0E40               	movlw	low STR_2
  2218  002410  6F02               	movwf	sprintf@fmt& (0+255),b
  2219  002412  0E10               	movlw	high STR_2
  2220  002414  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2221  002416  0E00               	movlw	0
  2222  002418  6F05               	movwf	(?_sprintf+5)& (0+255),b
  2223  00241A  0E10               	movlw	16
  2224  00241C  6F04               	movwf	(?_sprintf+4)& (0+255),b
  2225  00241E  0E3E               	movlw	low (main@command+2)
  2226  002420  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2227  002422  0E01               	movlw	high (main@command+2)
  2228  002424  6F07               	movwf	(?_sprintf+7)& (0+255),b
  2229  002426  ECD2  F022         	call	_sprintf	;wreg free
  2230  00242A  D79F               	goto	l8262
  2231  00242C                     l8284:
  2232                           
  2233                           ; BSR set to: 1
  2234  00242C  513D               	movf	(main@command+1)& (0+255),w,b
  2235  00242E  6F14               	movwf	??_main& (0+255),b
  2236  002430  6B15               	clrf	(??_main+1)& (0+255),b
  2237                           
  2238                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 1, Range of values is 0 to 0
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte            4     3 (average)
  2244                           ;	Chosen strategy is simple_byte
  2245  002432  5115               	movf	(??_main+1)& (0+255),w,b
  2246  002434  0A00               	xorlw	0	; case 0
  2247  002436  A4D8               	btfss	status,2,c
  2248  002438  D03C               	goto	l321
  2249                           
  2250                           ; BSR set to: 1
  2251                           ; Switch size 1, requested type "simple"
  2252                           ; Number of cases is 4, Range of values is 49 to 52
  2253                           ; switch strategies available:
  2254                           ; Name         Instructions Cycles
  2255                           ; simple_byte           13     7 (average)
  2256                           ;	Chosen strategy is simple_byte
  2257  00243A  5114               	movf	??_main& (0+255),w,b
  2258  00243C  0A31               	xorlw	49	; case 49
  2259  00243E  B4D8               	btfsc	status,2,c
  2260  002440  D777               	goto	l8258
  2261  002442  0A03               	xorlw	3	; case 50
  2262  002444  B4D8               	btfsc	status,2,c
  2263  002446  D798               	goto	l8264
  2264  002448  0A01               	xorlw	1	; case 51
  2265  00244A  B4D8               	btfsc	status,2,c
  2266  00244C  D7B3               	goto	l8270
  2267  00244E  0A07               	xorlw	7	; case 52
  2268  002450  B4D8               	btfsc	status,2,c
  2269  002452  D7CE               	goto	l8276
  2270  002454  D02E               	goto	l321
  2271  002456                     l8286:
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;main.c: 241:                     sprintf(buffer,"%c%-4.0f\n",'L', distanceL);
  2275  002456  0E32               	movlw	low main@buffer
  2276  002458  6F00               	movwf	sprintf@s& (0+255),b
  2277  00245A  0E01               	movlw	high main@buffer
  2278  00245C  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2279  00245E  0E30               	movlw	low STR_6
  2280  002460  6F02               	movwf	sprintf@fmt& (0+255),b
  2281  002462  0E10               	movlw	high STR_6
  2282  002464  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2283  002466  0E00               	movlw	0
  2284  002468  6F05               	movwf	(?_sprintf+5)& (0+255),b
  2285  00246A  0E4C               	movlw	76
  2286  00246C  6F04               	movwf	(?_sprintf+4)& (0+255),b
  2287  00246E  C17F  F106         	movff	_distanceL,?_sprintf+6	;volatile
  2288  002472  C180  F107         	movff	_distanceL+1,?_sprintf+7	;volatile
  2289  002476  C181  F108         	movff	_distanceL+2,?_sprintf+8	;volatile
  2290  00247A  C182  F109         	movff	_distanceL+3,?_sprintf+9	;volatile
  2291  00247E  ECD2  F022         	call	_sprintf	;wreg free
  2292                           
  2293                           ;main.c: 242:                     UART_send_string(buffer);
  2294  002482  0E32               	movlw	low main@buffer
  2295  002484  6E1C               	movwf	UART_send_string@message,c
  2296  002486  0E01               	movlw	high main@buffer
  2297  002488  6E1D               	movwf	UART_send_string@message+1,c
  2298  00248A  EC6B  F01F         	call	_UART_send_string	;wreg free
  2299                           
  2300                           ;main.c: 243:                     break;
  2301  00248E  D011               	goto	l321
  2302  002490                     l8292:
  2303                           
  2304                           ; BSR set to: 1
  2305  002490  513C               	movf	main@command& (0+255),w,b
  2306  002492  6F14               	movwf	??_main& (0+255),b
  2307  002494  6B15               	clrf	(??_main+1)& (0+255),b
  2308                           
  2309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2310                           ; Switch size 1, requested type "simple"
  2311                           ; Number of cases is 1, Range of values is 0 to 0
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte            4     3 (average)
  2315                           ;	Chosen strategy is simple_byte
  2316  002496  5115               	movf	(??_main+1)& (0+255),w,b
  2317  002498  0A00               	xorlw	0	; case 0
  2318  00249A  A4D8               	btfss	status,2,c
  2319  00249C  D00A               	goto	l321
  2320                           
  2321                           ; BSR set to: 1
  2322                           ; Switch size 1, requested type "simple"
  2323                           ; Number of cases is 3, Range of values is 68 to 81
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte           10     6 (average)
  2327                           ;	Chosen strategy is simple_byte
  2328  00249E  5114               	movf	??_main& (0+255),w,b
  2329  0024A0  0A44               	xorlw	68	; case 68
  2330  0024A2  B4D8               	btfsc	status,2,c
  2331  0024A4  D7C3               	goto	l8284
  2332  0024A6  0A09               	xorlw	9	; case 77
  2333  0024A8  B4D8               	btfsc	status,2,c
  2334  0024AA  D730               	goto	l8256
  2335  0024AC  0A1C               	xorlw	28	; case 81
  2336  0024AE  B4D8               	btfsc	status,2,c
  2337  0024B0  D7D2               	goto	l8286
  2338  0024B2                     l321:
  2339                           
  2340                           ;main.c: 250:         if(key_was_pressed){
  2341                           
  2342                           ; BSR set to: 1
  2343  0024B2  0101               	movlb	1	; () banked
  2344  0024B4  518C               	movf	_key_was_pressed& (0+255),w,b	;volatile
  2345  0024B6  B4D8               	btfsc	status,2,c
  2346  0024B8  D5AC               	goto	l8158
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 251:             key_was_pressed = 0;
  2350  0024BA  0E00               	movlw	0
  2351  0024BC  6F8C               	movwf	_key_was_pressed& (0+255),b	;volatile
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;main.c: 252:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2355  0024BE  3881               	swapf	3969,w,c	;volatile
  2356  0024C0  0B0F               	andlw	15
  2357  0024C2  0B0F               	andlw	15
  2358  0024C4  6F6F               	movwf	main@keypress& (0+255),b
  2359                           
  2360                           ; BSR set to: 1
  2361                           ;main.c: 253:             sprintf(uart_char_to_send, "%c%c\n", 'K', keys[keypress]);
  2362  0024C6  0E19               	movlw	low main@uart_char_to_send
  2363  0024C8  6F00               	movwf	sprintf@s& (0+255),b
  2364  0024CA  0E01               	movlw	high main@uart_char_to_send
  2365  0024CC  6F01               	movwf	(sprintf@s+1)& (0+255),b
  2366  0024CE  0E3A               	movlw	low STR_7
  2367  0024D0  6F02               	movwf	sprintf@fmt& (0+255),b
  2368  0024D2  0E10               	movlw	high STR_7
  2369  0024D4  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2370  0024D6  0E00               	movlw	0
  2371  0024D8  6F05               	movwf	(?_sprintf+5)& (0+255),b
  2372  0024DA  0E4B               	movlw	75
  2373  0024DC  6F04               	movwf	(?_sprintf+4)& (0+255),b
  2374  0024DE  0E01               	movlw	low _keys
  2375  0024E0  256F               	addwf	main@keypress& (0+255),w,b
  2376  0024E2  6EF6               	movwf	tblptrl,c
  2377  0024E4  6AF7               	clrf	tblptrh,c
  2378  0024E6  0E10               	movlw	high _keys
  2379  0024E8  22F7               	addwfc	tblptrh,f,c
  2380  0024EA                     	if	0	;There are less than 3 active tblptr bytes
  2381  0024EA                     	endif
  2382  0024EA  0008               	tblrd		*
  2383  0024EC  50F5               	movf	tablat,w,c
  2384  0024EE  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2385  0024F0  6B07               	clrf	(?_sprintf+7)& (0+255),b
  2386  0024F2  ECD2  F022         	call	_sprintf	;wreg free
  2387                           
  2388                           ;main.c: 254:             UART_send_string(uart_char_to_send);
  2389  0024F6  0E19               	movlw	low main@uart_char_to_send
  2390  0024F8  6E1C               	movwf	UART_send_string@message,c
  2391  0024FA  0E01               	movlw	high main@uart_char_to_send
  2392  0024FC  6E1D               	movwf	UART_send_string@message+1,c
  2393  0024FE  EC6B  F01F         	call	_UART_send_string	;wreg free
  2394  002502  D587               	goto	l8158
  2395  002504                     __end_of_main:
  2396                           	opt callstack 0
  2397                           
  2398 ;; *************** function _sprintf *****************
  2399 ;; Defined at:
  2400 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  s               2    0[BANK1 ] PTR unsigned char 
  2403 ;;		 -> main@uart_char_to_send(25), main@buffer(10), main@lcdDisplay(16), 
  2404 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2405 ;;		 -> STR_7(6), STR_6(10), STR_5(5), STR_4(5), 
  2406 ;;		 -> STR_3(5), STR_2(5), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  f               6   14[BANK1 ] struct _IO_FILE
  2409 ;;  ap              2   12[BANK1 ] PTR void [1]
  2410 ;;		 -> ?_sprintf(2), 
  2411 ;;  ret             2    0        int 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    0[BANK1 ] int 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:       20 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:   13
  2428 ;; This function calls:
  2429 ;;		_vfprintf
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text1
  2436  0045A4                     __ptext1:
  2437                           	opt callstack 0
  2438  0045A4                     _sprintf:
  2439                           	opt callstack 17
  2440                           
  2441                           ;incstack = 0
  2442  0045A4  0E04               	movlw	low (?_sprintf+4)
  2443  0045A6  0101               	movlb	1	; () banked
  2444  0045A8  6F0C               	movwf	sprintf@ap& (0+255),b
  2445  0045AA  0E01               	movlw	high (?_sprintf+4)
  2446  0045AC  6F0D               	movwf	(sprintf@ap+1)& (0+255),b
  2447  0045AE  C100  F10E         	movff	sprintf@s,sprintf@f
  2448  0045B2  C101  F10F         	movff	sprintf@s+1,sprintf@f+1
  2449                           
  2450                           ; BSR set to: 1
  2451  0045B6  0E00               	movlw	0
  2452  0045B8  6F11               	movwf	(sprintf@f+3)& (0+255),b
  2453  0045BA  0E00               	movlw	0
  2454  0045BC  6F10               	movwf	(sprintf@f+2)& (0+255),b
  2455                           
  2456                           ; BSR set to: 1
  2457  0045BE  0E00               	movlw	0
  2458  0045C0  6F13               	movwf	(sprintf@f+5)& (0+255),b
  2459  0045C2  0E00               	movlw	0
  2460  0045C4  6F12               	movwf	(sprintf@f+4)& (0+255),b
  2461                           
  2462                           ; BSR set to: 1
  2463  0045C6  0E0E               	movlw	low sprintf@f
  2464  0045C8  0100               	movlb	0	; () banked
  2465  0045CA  6FED               	movwf	vfprintf@fp& (0+255),b
  2466  0045CC  0E01               	movlw	high sprintf@f
  2467  0045CE  6FEE               	movwf	(vfprintf@fp+1)& (0+255),b
  2468  0045D0  C102  F0EF         	movff	sprintf@fmt,vfprintf@fmt
  2469  0045D4  C103  F0F0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2470  0045D8  0E0C               	movlw	low sprintf@ap
  2471  0045DA  6FF1               	movwf	vfprintf@ap& (0+255),b
  2472  0045DC  0E01               	movlw	high sprintf@ap
  2473  0045DE  6FF2               	movwf	(vfprintf@ap+1)& (0+255),b
  2474  0045E0  ECA7  F022         	call	_vfprintf	;wreg free
  2475  0045E4  0101               	movlb	1	; () banked
  2476  0045E6  5110               	movf	(sprintf@f+2)& (0+255),w,b
  2477  0045E8  2500               	addwf	sprintf@s& (0+255),w,b
  2478  0045EA  6ED9               	movwf	fsr2l,c
  2479  0045EC  5111               	movf	(sprintf@f+3)& (0+255),w,b
  2480  0045EE  2101               	addwfc	(sprintf@s+1)& (0+255),w,b
  2481  0045F0  6EDA               	movwf	fsr2h,c
  2482  0045F2  0E00               	movlw	0
  2483  0045F4  6EDF               	movwf	indf2,c
  2484                           
  2485                           ; BSR set to: 1
  2486  0045F6  0012               	return		;funcret
  2487  0045F8                     __end_of_sprintf:
  2488                           	opt callstack 0
  2489                           
  2490 ;; *************** function _vfprintf *****************
  2491 ;; Defined at:
  2492 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  fp              2  109[BANK0 ] PTR struct _IO_FILE
  2495 ;;		 -> sprintf@f(6), 
  2496 ;;  fmt             2  111[BANK0 ] PTR const unsigned char 
  2497 ;;		 -> STR_7(6), STR_6(10), STR_5(5), STR_4(5), 
  2498 ;;		 -> STR_3(5), STR_2(5), 
  2499 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2500 ;;		 -> sprintf@ap(2), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  cfmt            2  115[BANK0 ] PTR unsigned char 
  2503 ;;		 -> STR_7(6), STR_6(10), STR_5(5), STR_4(5), 
  2504 ;;		 -> STR_3(5), STR_2(5), 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  2  109[BANK0 ] int 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2514 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        8 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:   12
  2521 ;; This function calls:
  2522 ;;		_vfpfcnvrt
  2523 ;; This function is called by:
  2524 ;;		_sprintf
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text2
  2529  00454E                     __ptext2:
  2530                           	opt callstack 0
  2531  00454E                     _vfprintf:
  2532                           	opt callstack 17
  2533                           
  2534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;incstack = 0
  2538  00454E  C0EF  F0F3         	movff	vfprintf@fmt,vfprintf@cfmt
  2539  004552  C0F0  F0F4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2540                           
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2542  004556  0E00               	movlw	0
  2543  004558  0100               	movlb	0	; () banked
  2544  00455A  6FF6               	movwf	(_nout+1)& (0+255),b
  2545  00455C  0E00               	movlw	0
  2546  00455E  6FF5               	movwf	_nout& (0+255),b
  2547                           
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2549  004560  D013               	goto	l8030
  2550  004562                     l8028:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2554  004562  C0ED  F0D1         	movff	vfprintf@fp,vfpfcnvrt@fp
  2555  004566  C0EE  F0D2         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2556  00456A  0EF3               	movlw	low vfprintf@cfmt
  2557  00456C  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  2558  00456E  0E00               	movlw	high vfprintf@cfmt
  2559  004570  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2560  004572  C0F1  F0D5         	movff	vfprintf@ap,vfpfcnvrt@ap
  2561  004576  C0F2  F0D6         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2562  00457A  ECEC  F00C         	call	_vfpfcnvrt	;wreg free
  2563  00457E  0100               	movlb	0	; () banked
  2564  004580  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  2565  004582  27F5               	addwf	_nout& (0+255),f,b
  2566  004584  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2567  004586  23F6               	addwfc	(_nout+1)& (0+255),f,b
  2568  004588                     l8030:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2572  004588  C0F3  FFF6         	movff	vfprintf@cfmt,tblptrl
  2573  00458C  C0F4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2574  004590                     	if	0	;tblptru may be non-zero
  2575  004590                     	endif
  2576  004590                     	if	0	;tblptru may be non-zero
  2577  004590                     	endif
  2578  004590  0008               	tblrd		*
  2579  004592  50F5               	movf	tablat,w,c
  2580  004594  0900               	iorlw	0
  2581  004596  A4D8               	btfss	status,2,c
  2582  004598  D7E4               	goto	l8028
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2586  00459A  C0F5  F0ED         	movff	_nout,?_vfprintf
  2587  00459E  C0F6  F0EE         	movff	_nout+1,?_vfprintf+1
  2588                           
  2589                           ; BSR set to: 0
  2590  0045A2  0012               	return		;funcret
  2591  0045A4                     __end_of_vfprintf:
  2592                           	opt callstack 0
  2593                           
  2594 ;; *************** function _vfpfcnvrt *****************
  2595 ;; Defined at:
  2596 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  fp              2   81[BANK0 ] PTR struct _IO_FILE
  2599 ;;		 -> sprintf@f(6), 
  2600 ;;  fmt             2   83[BANK0 ] PTR PTR unsigned char 
  2601 ;;		 -> vfprintf@cfmt(2), 
  2602 ;;  ap              2   85[BANK0 ] PTR PTR void 
  2603 ;;		 -> sprintf@ap(2), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  llu             8    0        unsigned long long 
  2606 ;;  ll              8    0        long long 
  2607 ;;  f               4  101[BANK0 ] long long 
  2608 ;;  ct              3  105[BANK0 ] unsigned char [3]
  2609 ;;  vp              3    0        PTR void 
  2610 ;;  done            2   93[BANK0 ] int 
  2611 ;;  cp              2   91[BANK0 ] PTR unsigned char 
  2612 ;;		 -> ?_sprintf(2), main@command(25), 
  2613 ;;  i               2    0        int 
  2614 ;;  c               1  108[BANK0 ] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2   81[BANK0 ] int 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2624 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;Total ram usage:       28 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:   11
  2631 ;; This function calls:
  2632 ;;		_atoi
  2633 ;;		_ctoa
  2634 ;;		_efgtoa
  2635 ;;		_fputc
  2636 ;;		_isdigit
  2637 ;;		_isupper
  2638 ;;		_stoa
  2639 ;;		_strncmp
  2640 ;;		_tolower
  2641 ;; This function is called by:
  2642 ;;		_vfprintf
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text3
  2647  0019D8                     __ptext3:
  2648                           	opt callstack 0
  2649  0019D8                     _vfpfcnvrt:
  2650                           	opt callstack 17
  2651                           
  2652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;incstack = 0
  2656  0019D8  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2657  0019DC  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2658  0019E0  CFDE FFF6          	movff	postinc2,tblptrl
  2659  0019E4  CFDD FFF7          	movff	postdec2,tblptrh
  2660  0019E8                     	if	0	;tblptru may be non-zero
  2661  0019E8                     	endif
  2662  0019E8                     	if	0	;tblptru may be non-zero
  2663  0019E8                     	endif
  2664  0019E8  0008               	tblrd		*
  2665  0019EA  50F5               	movf	tablat,w,c
  2666  0019EC  0A25               	xorlw	37
  2667  0019EE  A4D8               	btfss	status,2,c
  2668  0019F0  D2C7               	goto	l7930
  2669                           
  2670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2671  0019F2  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2672  0019F6  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2673  0019FA  2ADE               	incf	postinc2,f,c
  2674  0019FC  0E00               	movlw	0
  2675  0019FE  22DD               	addwfc	postdec2,f,c
  2676                           
  2677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2678  001A00  0E00               	movlw	0
  2679  001A02  6E55               	movwf	_width+1,c
  2680  001A04  0E00               	movlw	0
  2681  001A06  6E54               	movwf	_width,c
  2682  001A08  C054  F058         	movff	_width,_flags
  2683  001A0C  C055  F059         	movff	_width+1,_flags+1
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2686  001A10  6856               	setf	_prec,c
  2687  001A12  6857               	setf	_prec+1,c
  2688                           
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  2690  001A14  0E00               	movlw	0
  2691  001A16  0100               	movlb	0	; () banked
  2692  001A18  6FDE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2693  001A1A  0E00               	movlw	0
  2694  001A1C  D014               	goto	L1
  2695  001A1E                     l7792:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  2699  001A1E  8058               	bsf	_flags,0,c
  2700  001A20                     l7794:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  2704  001A20  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2705  001A24  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2706  001A28  2ADE               	incf	postinc2,f,c
  2707  001A2A  0E00               	movlw	0
  2708  001A2C  22DD               	addwfc	postdec2,f,c
  2709                           
  2710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  2711  001A2E  D02E               	goto	l7818
  2712  001A30                     l7796:
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  2716  001A30  8258               	bsf	_flags,1,c
  2717  001A32  D7F6               	goto	l7794
  2718  001A34                     l7800:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  2722  001A34  8458               	bsf	_flags,2,c
  2723  001A36  D7F4               	goto	l7794
  2724  001A38                     l7804:
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  2728  001A38  8658               	bsf	_flags,3,c
  2729  001A3A  D7F2               	goto	l7794
  2730  001A3C                     l7808:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  2734  001A3C  8858               	bsf	_flags,4,c
  2735  001A3E  D7F0               	goto	l7794
  2736  001A40                     l7812:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  2740  001A40  0E00               	movlw	0
  2741  001A42  6FDE               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2742  001A44  0E01               	movlw	1
  2743  001A46                     L1:
  2744  001A46  6FDD               	movwf	vfpfcnvrt@done& (0+255),b
  2745                           
  2746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  2747  001A48  D021               	goto	l7818
  2748  001A4A                     l7816:
  2749                           
  2750                           ; BSR set to: 0
  2751  001A4A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2752  001A4E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2753  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  2754  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  2755  001A5A                     	if	0	;tblptru may be non-zero
  2756  001A5A                     	endif
  2757  001A5A                     	if	0	;tblptru may be non-zero
  2758  001A5A                     	endif
  2759  001A5A  0008               	tblrd		*
  2760  001A5C  50F5               	movf	tablat,w,c
  2761  001A5E  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  2762  001A60  6BD8               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2763                           
  2764                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2765                           ; Switch size 1, requested type "simple"
  2766                           ; Number of cases is 1, Range of values is 0 to 0
  2767                           ; switch strategies available:
  2768                           ; Name         Instructions Cycles
  2769                           ; simple_byte            4     3 (average)
  2770                           ;	Chosen strategy is simple_byte
  2771  001A62  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2772  001A64  0A00               	xorlw	0	; case 0
  2773  001A66  A4D8               	btfss	status,2,c
  2774  001A68  D7EB               	goto	l7812
  2775                           
  2776                           ; BSR set to: 0
  2777                           ; Switch size 1, requested type "simple"
  2778                           ; Number of cases is 5, Range of values is 32 to 48
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte           16     9 (average)
  2782                           ;	Chosen strategy is simple_byte
  2783  001A6A  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  2784  001A6C  0A20               	xorlw	32	; case 32
  2785  001A6E  B4D8               	btfsc	status,2,c
  2786  001A70  D7E3               	goto	l7804
  2787  001A72  0A03               	xorlw	3	; case 35
  2788  001A74  B4D8               	btfsc	status,2,c
  2789  001A76  D7E2               	goto	l7808
  2790  001A78  0A08               	xorlw	8	; case 43
  2791  001A7A  B4D8               	btfsc	status,2,c
  2792  001A7C  D7DB               	goto	l7800
  2793  001A7E  0A06               	xorlw	6	; case 45
  2794  001A80  B4D8               	btfsc	status,2,c
  2795  001A82  D7CD               	goto	l7792
  2796  001A84  0A1D               	xorlw	29	; case 48
  2797  001A86  B4D8               	btfsc	status,2,c
  2798  001A88  D7D3               	goto	l7796
  2799  001A8A  D7DA               	goto	l7812
  2800  001A8C                     l7818:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  2804  001A8C  51DD               	movf	vfpfcnvrt@done& (0+255),w,b
  2805  001A8E  11DE               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2806  001A90  B4D8               	btfsc	status,2,c
  2807  001A92  D7DB               	goto	l7816
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  2811  001A94  B058               	btfsc	_flags,0,c
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  2815  001A96  9258               	bcf	_flags,1,c
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2819  001A98  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2820  001A9C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2821  001AA0  CFDE FFF6          	movff	postinc2,tblptrl
  2822  001AA4  CFDD FFF7          	movff	postdec2,tblptrh
  2823  001AA8                     	if	0	;tblptru may be non-zero
  2824  001AA8                     	endif
  2825  001AA8                     	if	0	;tblptru may be non-zero
  2826  001AA8                     	endif
  2827  001AA8  0008               	tblrd		*
  2828  001AAA  50F5               	movf	tablat,w,c
  2829  001AAC  0A2A               	xorlw	42
  2830  001AAE  A4D8               	btfss	status,2,c
  2831  001AB0  D023               	goto	l7830
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2835  001AB2  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836  001AB6  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837  001ABA  2ADE               	incf	postinc2,f,c
  2838  001ABC  0E00               	movlw	0
  2839  001ABE  22DD               	addwfc	postdec2,f,c
  2840                           
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2842  001AC0  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2843  001AC4  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2844  001AC8  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  2845  001ACC  0E02               	movlw	2
  2846  001ACE  26DE               	addwf	postinc2,f,c
  2847  001AD0  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  2848  001AD4  0E00               	movlw	0
  2849  001AD6  22DD               	addwfc	postdec2,f,c
  2850  001AD8  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2851  001ADC  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2852  001AE0  CFDE F054          	movff	postinc2,_width
  2853  001AE4  CFDD F055          	movff	postdec2,_width+1
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2857  001AE8  AE55               	btfss	_width+1,7,c
  2858  001AEA  D040               	goto	u9330
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2862  001AEC  8058               	bsf	_flags,0,c
  2863                           
  2864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2865  001AEE  6C54               	negf	_width,c
  2866  001AF0  1E55               	comf	_width+1,f,c
  2867  001AF2  B0D8               	btfsc	status,0,c
  2868  001AF4  2A55               	incf	_width+1,f,c
  2869  001AF6  D03A               	goto	u9330
  2870  001AF8                     l7830:
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2874  001AF8  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  001AFC  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  001B00  CFDE F022          	movff	postinc2,atoi@s
  2877  001B04  CFDD F023          	movff	postdec2,atoi@s+1
  2878  001B08  ECF6  F01A         	call	_atoi	;wreg free
  2879  001B0C  C022  F054         	movff	?_atoi,_width
  2880  001B10  C023  F055         	movff	?_atoi+1,_width+1
  2881                           
  2882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2883  001B14  D007               	goto	l7834
  2884  001B16                     l7832:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2888  001B16  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2889  001B1A  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2890  001B1E  2ADE               	incf	postinc2,f,c
  2891  001B20  0E00               	movlw	0
  2892  001B22  22DD               	addwfc	postdec2,f,c
  2893  001B24                     l7834:
  2894  001B24  0ED0               	movlw	208
  2895  001B26  0100               	movlb	0	; () banked
  2896  001B28  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  2897  001B2A  0EFF               	movlw	255
  2898  001B2C  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2899  001B2E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2900  001B32  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2901  001B36  CFDE FFF6          	movff	postinc2,tblptrl
  2902  001B3A  CFDD FFF7          	movff	postdec2,tblptrh
  2903  001B3E                     	if	0	;tblptru may be non-zero
  2904  001B3E                     	endif
  2905  001B3E                     	if	0	;tblptru may be non-zero
  2906  001B3E                     	endif
  2907  001B3E  0008               	tblrd		*
  2908  001B40  50F5               	movf	tablat,w,c
  2909  001B42  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2910  001B44  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2911  001B46  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  2912  001B48  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2913  001B4A  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2914  001B4C  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2915  001B4E  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2916  001B50  E106               	bnz	u9310
  2917  001B52  0E0A               	movlw	10
  2918  001B54  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2919  001B56  B0D8               	btfsc	status,0,c
  2920  001B58  D002               	goto	u9310
  2921  001B5A  0E01               	movlw	1
  2922  001B5C  D001               	goto	u9320
  2923  001B5E                     u9310:
  2924  001B5E  0E00               	movlw	0
  2925  001B60                     u9320:
  2926  001B60  6FDF               	movwf	_vfpfcnvrt$1182& (0+255),b
  2927  001B62  6BE0               	clrf	(_vfpfcnvrt$1182+1)& (0+255),b
  2928                           
  2929                           ; BSR set to: 0
  2930  001B64  51DF               	movf	_vfpfcnvrt$1182& (0+255),w,b
  2931  001B66  11E0               	iorwf	(_vfpfcnvrt$1182+1)& (0+255),w,b
  2932  001B68  A4D8               	btfss	status,2,c
  2933  001B6A  D7D5               	goto	l7832
  2934  001B6C                     u9330:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2938  001B6C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2939  001B70  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2940  001B74  CFDE FFF6          	movff	postinc2,tblptrl
  2941  001B78  CFDD FFF7          	movff	postdec2,tblptrh
  2942  001B7C                     	if	0	;tblptru may be non-zero
  2943  001B7C                     	endif
  2944  001B7C                     	if	0	;tblptru may be non-zero
  2945  001B7C                     	endif
  2946  001B7C  0008               	tblrd		*
  2947  001B7E  50F5               	movf	tablat,w,c
  2948  001B80  0A2E               	xorlw	46
  2949  001B82  A4D8               	btfss	status,2,c
  2950  001B84  D06E               	goto	u9380
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2954  001B86  0E00               	movlw	0
  2955  001B88  6E57               	movwf	_prec+1,c
  2956  001B8A  0E00               	movlw	0
  2957  001B8C  6E56               	movwf	_prec,c
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2961  001B8E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2962  001B92  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2963  001B96  2ADE               	incf	postinc2,f,c
  2964  001B98  0E00               	movlw	0
  2965  001B9A  22DD               	addwfc	postdec2,f,c
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2969  001B9C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2970  001BA0  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2971  001BA4  CFDE FFF6          	movff	postinc2,tblptrl
  2972  001BA8  CFDD FFF7          	movff	postdec2,tblptrh
  2973  001BAC                     	if	0	;tblptru may be non-zero
  2974  001BAC                     	endif
  2975  001BAC                     	if	0	;tblptru may be non-zero
  2976  001BAC                     	endif
  2977  001BAC  0008               	tblrd		*
  2978  001BAE  50F5               	movf	tablat,w,c
  2979  001BB0  0A2A               	xorlw	42
  2980  001BB2  A4D8               	btfss	status,2,c
  2981  001BB4  D01C               	goto	l7850
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2985  001BB6  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2986  001BBA  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2987  001BBE  2ADE               	incf	postinc2,f,c
  2988  001BC0  0E00               	movlw	0
  2989  001BC2  22DD               	addwfc	postdec2,f,c
  2990                           
  2991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2992  001BC4  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2993  001BC8  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2994  001BCC  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  2995  001BD0  0E02               	movlw	2
  2996  001BD2  26DE               	addwf	postinc2,f,c
  2997  001BD4  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  2998  001BD8  0E00               	movlw	0
  2999  001BDA  22DD               	addwfc	postdec2,f,c
  3000  001BDC  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3001  001BE0  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3002  001BE4  CFDE F056          	movff	postinc2,_prec
  3003  001BE8  CFDD F057          	movff	postdec2,_prec+1
  3004                           
  3005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  3006  001BEC  D03A               	goto	u9380
  3007  001BEE                     l7850:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  3011  001BEE  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3012  001BF2  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3013  001BF6  CFDE F022          	movff	postinc2,atoi@s
  3014  001BFA  CFDD F023          	movff	postdec2,atoi@s+1
  3015  001BFE  ECF6  F01A         	call	_atoi	;wreg free
  3016  001C02  C022  F056         	movff	?_atoi,_prec
  3017  001C06  C023  F057         	movff	?_atoi+1,_prec+1
  3018                           
  3019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3020  001C0A  D007               	goto	l7854
  3021  001C0C                     l7852:
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  3025  001C0C  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3026  001C10  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3027  001C14  2ADE               	incf	postinc2,f,c
  3028  001C16  0E00               	movlw	0
  3029  001C18  22DD               	addwfc	postdec2,f,c
  3030  001C1A                     l7854:
  3031  001C1A  0ED0               	movlw	208
  3032  001C1C  0100               	movlb	0	; () banked
  3033  001C1E  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  3034  001C20  0EFF               	movlw	255
  3035  001C22  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3036  001C24  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3037  001C28  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3038  001C2C  CFDE FFF6          	movff	postinc2,tblptrl
  3039  001C30  CFDD FFF7          	movff	postdec2,tblptrh
  3040  001C34                     	if	0	;tblptru may be non-zero
  3041  001C34                     	endif
  3042  001C34                     	if	0	;tblptru may be non-zero
  3043  001C34                     	endif
  3044  001C34  0008               	tblrd		*
  3045  001C36  50F5               	movf	tablat,w,c
  3046  001C38  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3047  001C3A  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3048  001C3C  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  3049  001C3E  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3050  001C40  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3051  001C42  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3052  001C44  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3053  001C46  E106               	bnz	u9360
  3054  001C48  0E0A               	movlw	10
  3055  001C4A  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3056  001C4C  B0D8               	btfsc	status,0,c
  3057  001C4E  D002               	goto	u9360
  3058  001C50  0E01               	movlw	1
  3059  001C52  D001               	goto	u9370
  3060  001C54                     u9360:
  3061  001C54  0E00               	movlw	0
  3062  001C56                     u9370:
  3063  001C56  6FE1               	movwf	_vfpfcnvrt$1183& (0+255),b
  3064  001C58  6BE2               	clrf	(_vfpfcnvrt$1183+1)& (0+255),b
  3065                           
  3066                           ; BSR set to: 0
  3067  001C5A  51E1               	movf	_vfpfcnvrt$1183& (0+255),w,b
  3068  001C5C  11E2               	iorwf	(_vfpfcnvrt$1183+1)& (0+255),w,b
  3069  001C5E  A4D8               	btfss	status,2,c
  3070  001C60  D7D5               	goto	l7852
  3071  001C62                     u9380:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  3075  001C62  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3076  001C66  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3077  001C6A  CFDE FFF6          	movff	postinc2,tblptrl
  3078  001C6E  CFDD FFF7          	movff	postdec2,tblptrh
  3079  001C72                     	if	0	;tblptru may be non-zero
  3080  001C72                     	endif
  3081  001C72                     	if	0	;tblptru may be non-zero
  3082  001C72                     	endif
  3083  001C72  0008               	tblrd		*
  3084  001C74  50F5               	movf	tablat,w,c
  3085  001C76  6E21               	movwf	tolower@c,c
  3086  001C78  6A22               	clrf	tolower@c+1,c
  3087  001C7A  EC9D  F023         	call	_tolower	;wreg free
  3088  001C7E  5021               	movf	?_tolower,w,c
  3089  001C80  0100               	movlb	0	; () banked
  3090  001C82  6FE9               	movwf	vfpfcnvrt@ct& (0+255),b
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  3094  001C84  51E9               	movf	vfpfcnvrt@ct& (0+255),w,b
  3095  001C86  B4D8               	btfsc	status,2,c
  3096  001C88  D035               	goto	l7870
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  3100  001C8A  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3101  001C8E  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3102  001C92  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  3103  001C96  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  3104  001C9A  0E01               	movlw	1
  3105  001C9C  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  3106  001C9E  0E00               	movlw	0
  3107  001CA0  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3108  001CA2  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3109  001CA6  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3110  001CAA                     	if	0	;tblptru may be non-zero
  3111  001CAA                     	endif
  3112  001CAA                     	if	0	;tblptru may be non-zero
  3113  001CAA                     	endif
  3114  001CAA  0008               	tblrd		*
  3115  001CAC  50F5               	movf	tablat,w,c
  3116  001CAE  6E21               	movwf	tolower@c,c
  3117  001CB0  6A22               	clrf	tolower@c+1,c
  3118  001CB2  EC9D  F023         	call	_tolower	;wreg free
  3119  001CB6  5021               	movf	?_tolower,w,c
  3120  001CB8  0100               	movlb	0	; () banked
  3121  001CBA  6FEA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  3125  001CBC  51EA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3126  001CBE  B4D8               	btfsc	status,2,c
  3127  001CC0  D019               	goto	l7870
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  3131  001CC2  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3132  001CC6  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3133  001CCA  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  3134  001CCE  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  3135  001CD2  0E02               	movlw	2
  3136  001CD4  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  3137  001CD6  0E00               	movlw	0
  3138  001CD8  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3139  001CDA  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3140  001CDE  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3141  001CE2                     	if	0	;tblptru may be non-zero
  3142  001CE2                     	endif
  3143  001CE2                     	if	0	;tblptru may be non-zero
  3144  001CE2                     	endif
  3145  001CE2  0008               	tblrd		*
  3146  001CE4  50F5               	movf	tablat,w,c
  3147  001CE6  6E21               	movwf	tolower@c,c
  3148  001CE8  6A22               	clrf	tolower@c+1,c
  3149  001CEA  EC9D  F023         	call	_tolower	;wreg free
  3150  001CEE  5021               	movf	?_tolower,w,c
  3151  001CF0  0100               	movlb	0	; () banked
  3152  001CF2  6FEB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3153  001CF4                     l7870:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3157  001CF4  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3158  001CF8  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3159  001CFC  CFDE FFF6          	movff	postinc2,tblptrl
  3160  001D00  CFDD FFF7          	movff	postdec2,tblptrh
  3161  001D04                     	if	0	;tblptru may be non-zero
  3162  001D04                     	endif
  3163  001D04                     	if	0	;tblptru may be non-zero
  3164  001D04                     	endif
  3165  001D04  0008               	tblrd		*
  3166  001D06  50F5               	movf	tablat,w,c
  3167  001D08  0A63               	xorlw	99
  3168  001D0A  A4D8               	btfss	status,2,c
  3169  001D0C  D026               	goto	l7878
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3173  001D0E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3174  001D12  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3175  001D16  2ADE               	incf	postinc2,f,c
  3176  001D18  0E00               	movlw	0
  3177  001D1A  22DD               	addwfc	postdec2,f,c
  3178                           
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3180  001D1C  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3181  001D20  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3182  001D24  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  3183  001D28  0E02               	movlw	2
  3184  001D2A  26DE               	addwf	postinc2,f,c
  3185  001D2C  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  3186  001D30  0E00               	movlw	0
  3187  001D32  22DD               	addwfc	postdec2,f,c
  3188  001D34  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3189  001D38  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3190  001D3C  50DF               	movf	indf2,w,c
  3191  001D3E  6FEC               	movwf	vfpfcnvrt@c& (0+255),b
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  3195  001D40  C0D1  F03A         	movff	vfpfcnvrt@fp,ctoa@fp
  3196  001D44  C0D2  F03B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3197  001D48  C0EC  F03C         	movff	vfpfcnvrt@c,ctoa@c
  3198  001D4C  EC4F  F023         	call	_ctoa	;wreg free
  3199  001D50  C03A  F0D1         	movff	?_ctoa,?_vfpfcnvrt
  3200  001D54  C03B  F0D2         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3201  001D58  0012               	return	
  3202  001D5A                     l7878:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  3206  001D5A  0E66               	movlw	102
  3207  001D5C  19E9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3208  001D5E  A4D8               	btfss	status,2,c
  3209  001D60  D03F               	goto	l7890
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  3213  001D62  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3214  001D66  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3215  001D6A  CFDE FFF6          	movff	postinc2,tblptrl
  3216  001D6E  CFDD FFF7          	movff	postdec2,tblptrh
  3217  001D72                     	if	0	;tblptru may be non-zero
  3218  001D72                     	endif
  3219  001D72                     	if	0	;tblptru may be non-zero
  3220  001D72                     	endif
  3221  001D72  0008               	tblrd		*
  3222  001D74  CFF5 F0EC          	movff	tablat,vfpfcnvrt@c
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  3226  001D78  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3227  001D7C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3228  001D80  2ADE               	incf	postinc2,f,c
  3229  001D82  0E00               	movlw	0
  3230  001D84  22DD               	addwfc	postdec2,f,c
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3234  001D86  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3235  001D8A  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3236  001D8E  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  3237  001D92  0E04               	movlw	4
  3238  001D94  26DE               	addwf	postinc2,f,c
  3239  001D96  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  3240  001D9A  0E00               	movlw	0
  3241  001D9C  22DD               	addwfc	postdec2,f,c
  3242  001D9E  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3243  001DA2  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3244  001DA6  CFDE F0E5          	movff	postinc2,vfpfcnvrt@f
  3245  001DAA  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f+1
  3246  001DAE  CFDE F0E7          	movff	postinc2,vfpfcnvrt@f+2
  3247  001DB2  CFDE F0E8          	movff	postinc2,vfpfcnvrt@f+3
  3248  001DB6                     l7886:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  3252  001DB6  C0D1  F08D         	movff	vfpfcnvrt@fp,efgtoa@fp
  3253  001DBA  C0D2  F08E         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3254  001DBE  C0E5  F08F         	movff	vfpfcnvrt@f,efgtoa@f
  3255  001DC2  C0E6  F090         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3256  001DC6  C0E7  F091         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3257  001DCA  C0E8  F092         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3258  001DCE  C0EC  F093         	movff	vfpfcnvrt@c,efgtoa@c
  3259  001DD2  EC2D  F008         	call	_efgtoa	;wreg free
  3260  001DD6  C08D  F0D1         	movff	?_efgtoa,?_vfpfcnvrt
  3261  001DDA  C08E  F0D2         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3262  001DDE  0012               	return	
  3263  001DE0                     l7890:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3267  001DE0  0EE9               	movlw	low vfpfcnvrt@ct
  3268  001DE2  6E1B               	movwf	strncmp@_l,c
  3269  001DE4  0E00               	movlw	high vfpfcnvrt@ct
  3270  001DE6  6E1C               	movwf	strncmp@_l+1,c
  3271  001DE8  0E55               	movlw	low STR_16
  3272  001DEA  6E1D               	movwf	strncmp@_r,c
  3273  001DEC  0E10               	movlw	high STR_16
  3274  001DEE  6E1E               	movwf	strncmp@_r+1,c
  3275  001DF0  0E00               	movlw	0
  3276  001DF2  6E20               	movwf	strncmp@n+1,c
  3277  001DF4  0E02               	movlw	2
  3278  001DF6  6E1F               	movwf	strncmp@n,c
  3279  001DF8  ECC0  F01F         	call	_strncmp	;wreg free
  3280  001DFC  501B               	movf	?_strncmp,w,c
  3281  001DFE  101C               	iorwf	?_strncmp+1,w,c
  3282  001E00  A4D8               	btfss	status,2,c
  3283  001E02  D056               	goto	l7906
  3284                           
  3285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3286  001E04  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3287  001E08  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3288  001E0C  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt
  3289  001E10  CFDD F0D8          	movff	postdec2,??_vfpfcnvrt+1
  3290  001E14  0E01               	movlw	1
  3291  001E16  0100               	movlb	0	; () banked
  3292  001E18  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  3293  001E1A  0E00               	movlw	0
  3294  001E1C  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3295  001E1E  C0D7  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3296  001E22  C0D8  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3297  001E26                     	if	0	;tblptru may be non-zero
  3298  001E26                     	endif
  3299  001E26                     	if	0	;tblptru may be non-zero
  3300  001E26                     	endif
  3301  001E26  0008               	tblrd		*
  3302  001E28  CFF5 F0EC          	movff	tablat,vfpfcnvrt@c
  3303  001E2C  0EBF               	movlw	191
  3304  001E2E  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  3305  001E30  0EFF               	movlw	255
  3306  001E32  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3307  001E34  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3308  001E38  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3309  001E3C  CFDE FFF6          	movff	postinc2,tblptrl
  3310  001E40  CFDD FFF7          	movff	postdec2,tblptrh
  3311  001E44                     	if	0	;tblptru may be non-zero
  3312  001E44                     	endif
  3313  001E44                     	if	0	;tblptru may be non-zero
  3314  001E44                     	endif
  3315  001E44  0008               	tblrd		*
  3316  001E46  50F5               	movf	tablat,w,c
  3317  001E48  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3318  001E4A  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3319  001E4C  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  3320  001E4E  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3321  001E50  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3322  001E52  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3323  001E54  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3324  001E56  E106               	bnz	u9440
  3325  001E58  0E1A               	movlw	26
  3326  001E5A  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3327  001E5C  B0D8               	btfsc	status,0,c
  3328  001E5E  D002               	goto	u9440
  3329  001E60  0E01               	movlw	1
  3330  001E62  D001               	goto	u9450
  3331  001E64                     u9440:
  3332  001E64  0E00               	movlw	0
  3333  001E66                     u9450:
  3334  001E66  6FE3               	movwf	_vfpfcnvrt$1188& (0+255),b
  3335  001E68  6BE4               	clrf	(_vfpfcnvrt$1188+1)& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338  001E6A  51E3               	movf	_vfpfcnvrt$1188& (0+255),w,b
  3339  001E6C  11E4               	iorwf	(_vfpfcnvrt$1188+1)& (0+255),w,b
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3343                           
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3348  001E6E  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3349  001E72  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3350  001E76  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  3351  001E7A  0E04               	movlw	4
  3352  001E7C  26DE               	addwf	postinc2,f,c
  3353  001E7E  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  3354  001E82  0E00               	movlw	0
  3355  001E84  22DD               	addwfc	postdec2,f,c
  3356  001E86  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3357  001E8A  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3358  001E8E  CFDE F0E5          	movff	postinc2,vfpfcnvrt@f
  3359  001E92  CFDE F0E6          	movff	postinc2,vfpfcnvrt@f+1
  3360  001E96  CFDE F0E7          	movff	postinc2,vfpfcnvrt@f+2
  3361  001E9A  CFDE F0E8          	movff	postinc2,vfpfcnvrt@f+3
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3365                           
  3366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  3367  001E9E  0E02               	movlw	2
  3368  001EA0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3369  001EA4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3370  001EA8  26DE               	addwf	postinc2,f,c
  3371  001EAA  0E00               	movlw	0
  3372  001EAC  22DD               	addwfc	postdec2,f,c
  3373  001EAE  D783               	goto	l7886
  3374  001EB0                     l7906:
  3375                           
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  3377  001EB0  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3378  001EB4  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3379  001EB8  CFDE FFF6          	movff	postinc2,tblptrl
  3380  001EBC  CFDD FFF7          	movff	postdec2,tblptrh
  3381  001EC0                     	if	0	;tblptru may be non-zero
  3382  001EC0                     	endif
  3383  001EC0                     	if	0	;tblptru may be non-zero
  3384  001EC0                     	endif
  3385  001EC0  0008               	tblrd		*
  3386  001EC2  50F5               	movf	tablat,w,c
  3387  001EC4  0A73               	xorlw	115
  3388  001EC6  A4D8               	btfss	status,2,c
  3389  001EC8  D02A               	goto	l7914
  3390                           
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  3392  001ECA  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3393  001ECE  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3394  001ED2  2ADE               	incf	postinc2,f,c
  3395  001ED4  0E00               	movlw	0
  3396  001ED6  22DD               	addwfc	postdec2,f,c
  3397                           
  3398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3399  001ED8  C0D5  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3400  001EDC  C0D6  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3401  001EE0  CFDF F0D7          	movff	indf2,??_vfpfcnvrt
  3402  001EE4  0E02               	movlw	2
  3403  001EE6  26DE               	addwf	postinc2,f,c
  3404  001EE8  CFDF F0D8          	movff	indf2,??_vfpfcnvrt+1
  3405  001EEC  0E00               	movlw	0
  3406  001EEE  22DD               	addwfc	postdec2,f,c
  3407  001EF0  C0D7  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3408  001EF4  C0D8  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3409  001EF8  CFDE F0DB          	movff	postinc2,vfpfcnvrt@cp
  3410  001EFC  CFDD F0DC          	movff	postdec2,vfpfcnvrt@cp+1
  3411                           
  3412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  3413  001F00  C0D1  F028         	movff	vfpfcnvrt@fp,stoa@fp
  3414  001F04  C0D2  F029         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3415  001F08  C0DB  F02A         	movff	vfpfcnvrt@cp,stoa@s
  3416  001F0C  C0DC  F02B         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3417  001F10  EC36  F01C         	call	_stoa	;wreg free
  3418  001F14  C028  F0D1         	movff	?_stoa,?_vfpfcnvrt
  3419  001F18  C029  F0D2         	movff	?_stoa+1,?_vfpfcnvrt+1
  3420  001F1C  0012               	return	
  3421  001F1E                     l7914:
  3422                           
  3423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  3424  001F1E  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3425  001F22  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3426  001F26  CFDE FFF6          	movff	postinc2,tblptrl
  3427  001F2A  CFDD FFF7          	movff	postdec2,tblptrh
  3428  001F2E                     	if	0	;tblptru may be non-zero
  3429  001F2E                     	endif
  3430  001F2E                     	if	0	;tblptru may be non-zero
  3431  001F2E                     	endif
  3432  001F2E  0008               	tblrd		*
  3433  001F30  50F5               	movf	tablat,w,c
  3434  001F32  0A25               	xorlw	37
  3435  001F34  A4D8               	btfss	status,2,c
  3436  001F36  D017               	goto	l7924
  3437                           
  3438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  3439  001F38  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3440  001F3C  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3441  001F40  2ADE               	incf	postinc2,f,c
  3442  001F42  0E00               	movlw	0
  3443  001F44  22DD               	addwfc	postdec2,f,c
  3444                           
  3445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  3446  001F46  0E00               	movlw	0
  3447  001F48  6E20               	movwf	fputc@c+1,c
  3448  001F4A  0E25               	movlw	37
  3449  001F4C  6E1F               	movwf	fputc@c,c
  3450  001F4E  C0D1  F021         	movff	vfpfcnvrt@fp,fputc@fp
  3451  001F52  C0D2  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3452  001F56  EC11  F020         	call	_fputc	;wreg free
  3453  001F5A                     l7920:
  3454                           
  3455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  3456  001F5A  0E00               	movlw	0
  3457  001F5C  0100               	movlb	0	; () banked
  3458  001F5E  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3459  001F60  0E01               	movlw	1
  3460  001F62  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  3461  001F64  0012               	return	
  3462  001F66                     l7924:
  3463                           
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  3465  001F66  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3466  001F6A  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3467  001F6E  2ADE               	incf	postinc2,f,c
  3468  001F70  0E00               	movlw	0
  3469  001F72  22DD               	addwfc	postdec2,f,c
  3470                           
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  3472  001F74  0E00               	movlw	0
  3473  001F76  0100               	movlb	0	; () banked
  3474  001F78  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3475  001F7A  0E00               	movlw	0
  3476  001F7C  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  3477  001F7E  0012               	return	
  3478  001F80                     l7930:
  3479                           
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  3481  001F80  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3482  001F84  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3483  001F88  CFDE FFF6          	movff	postinc2,tblptrl
  3484  001F8C  CFDD FFF7          	movff	postdec2,tblptrh
  3485  001F90                     	if	0	;tblptru may be non-zero
  3486  001F90                     	endif
  3487  001F90                     	if	0	;tblptru may be non-zero
  3488  001F90                     	endif
  3489  001F90  0008               	tblrd		*
  3490  001F92  50F5               	movf	tablat,w,c
  3491  001F94  6E1F               	movwf	fputc@c,c
  3492  001F96  6A20               	clrf	fputc@c+1,c
  3493  001F98  C0D1  F021         	movff	vfpfcnvrt@fp,fputc@fp
  3494  001F9C  C0D2  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3495  001FA0  EC11  F020         	call	_fputc	;wreg free
  3496                           
  3497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  3498  001FA4  C0D3  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3499  001FA8  C0D4  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3500  001FAC  2ADE               	incf	postinc2,f,c
  3501  001FAE  0E00               	movlw	0
  3502  001FB0  22DD               	addwfc	postdec2,f,c
  3503  001FB2  D7D3               	goto	l7920
  3504  001FB4                     __end_of_vfpfcnvrt:
  3505                           	opt callstack 0
  3506                           
  3507 ;; *************** function _strncmp *****************
  3508 ;; Defined at:
  3509 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  _l              2   26[COMRAM] PTR const unsigned char 
  3512 ;;		 -> vfpfcnvrt@ct(3), 
  3513 ;;  _r              2   28[COMRAM] PTR const unsigned char 
  3514 ;;		 -> STR_18(3), 
  3515 ;;  n               2   30[COMRAM] unsigned int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  r               2   35[COMRAM] PTR const unsigned char 
  3518 ;;		 -> STR_18(3), 
  3519 ;;  l               2   33[COMRAM] PTR const unsigned char 
  3520 ;;		 -> vfpfcnvrt@ct(3), 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  2   26[COMRAM] int 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3530 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;Total ram usage:       11 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    3
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_vfpfcnvrt
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text4
  3545  003F80                     __ptext4:
  3546                           	opt callstack 0
  3547  003F80                     _strncmp:
  3548                           	opt callstack 24
  3549                           
  3550                           ;incstack = 0
  3551  003F80  C01B  F022         	movff	strncmp@_l,strncmp@l
  3552  003F84  C01C  F023         	movff	strncmp@_l+1,strncmp@l+1
  3553  003F88  C01D  F024         	movff	strncmp@_r,strncmp@r
  3554  003F8C  C01E  F025         	movff	strncmp@_r+1,strncmp@r+1
  3555  003F90  061F               	decf	strncmp@n,f,c
  3556  003F92  A0D8               	btfss	status,0,c
  3557  003F94  0620               	decf	strncmp@n+1,f,c
  3558  003F96  281F               	incf	strncmp@n,w,c
  3559  003F98  E10F               	bnz	l7770
  3560  003F9A  2820               	incf	strncmp@n+1,w,c
  3561  003F9C  A4D8               	btfss	status,2,c
  3562  003F9E  D00C               	goto	l7770
  3563  003FA0  0E00               	movlw	0
  3564  003FA2  6E1C               	movwf	?_strncmp+1,c
  3565  003FA4  0E00               	movlw	0
  3566  003FA6  6E1B               	movwf	?_strncmp,c
  3567  003FA8  0012               	return	
  3568  003FAA                     l7768:
  3569  003FAA  4A22               	infsnz	strncmp@l,f,c
  3570  003FAC  2A23               	incf	strncmp@l+1,f,c
  3571  003FAE  4A24               	infsnz	strncmp@r,f,c
  3572  003FB0  2A25               	incf	strncmp@r+1,f,c
  3573  003FB2  061F               	decf	strncmp@n,f,c
  3574  003FB4  A0D8               	btfss	status,0,c
  3575  003FB6  0620               	decf	strncmp@n+1,f,c
  3576  003FB8                     l7770:
  3577  003FB8  C022  FFD9         	movff	strncmp@l,fsr2l
  3578  003FBC  C023  FFDA         	movff	strncmp@l+1,fsr2h
  3579  003FC0  50DF               	movf	indf2,w,c
  3580  003FC2  B4D8               	btfsc	status,2,c
  3581  003FC4  D01C               	goto	u9250
  3582  003FC6  C024  FFF6         	movff	strncmp@r,tblptrl
  3583  003FCA  C025  FFF7         	movff	strncmp@r+1,tblptrh
  3584  003FCE                     	if	0	;tblptru may be non-zero
  3585  003FCE                     	endif
  3586  003FCE                     	if	0	;tblptru may be non-zero
  3587  003FCE                     	endif
  3588  003FCE  0008               	tblrd		*
  3589  003FD0  50F5               	movf	tablat,w,c
  3590  003FD2  0900               	iorlw	0
  3591  003FD4  B4D8               	btfsc	status,2,c
  3592  003FD6  D013               	goto	u9250
  3593  003FD8  501F               	movf	strncmp@n,w,c
  3594  003FDA  1020               	iorwf	strncmp@n+1,w,c
  3595  003FDC  B4D8               	btfsc	status,2,c
  3596  003FDE  D00F               	goto	u9250
  3597  003FE0  C022  FFD9         	movff	strncmp@l,fsr2l
  3598  003FE4  C023  FFDA         	movff	strncmp@l+1,fsr2h
  3599  003FE8  50DF               	movf	indf2,w,c
  3600  003FEA  6E21               	movwf	??_strncmp& (0+255),c
  3601  003FEC  C024  FFF6         	movff	strncmp@r,tblptrl
  3602  003FF0  C025  FFF7         	movff	strncmp@r+1,tblptrh
  3603  003FF4                     	if	0	;tblptru may be non-zero
  3604  003FF4                     	endif
  3605  003FF4                     	if	0	;tblptru may be non-zero
  3606  003FF4                     	endif
  3607  003FF4  0008               	tblrd		*
  3608  003FF6  50F5               	movf	tablat,w,c
  3609  003FF8  1821               	xorwf	??_strncmp,w,c
  3610  003FFA  B4D8               	btfsc	status,2,c
  3611  003FFC  D7D6               	goto	l7768
  3612  003FFE                     u9250:
  3613  003FFE  C022  FFD9         	movff	strncmp@l,fsr2l
  3614  004002  C023  FFDA         	movff	strncmp@l+1,fsr2h
  3615  004006  50DF               	movf	indf2,w,c
  3616  004008  6E21               	movwf	??_strncmp& (0+255),c
  3617  00400A  C024  FFF6         	movff	strncmp@r,tblptrl
  3618  00400E  C025  FFF7         	movff	strncmp@r+1,tblptrh
  3619  004012                     	if	0	;tblptru may be non-zero
  3620  004012                     	endif
  3621  004012                     	if	0	;tblptru may be non-zero
  3622  004012                     	endif
  3623  004012  0008               	tblrd		*
  3624  004014  50F5               	movf	tablat,w,c
  3625  004016  5C21               	subwf	??_strncmp,w,c
  3626  004018  6E1B               	movwf	?_strncmp,c
  3627  00401A  6A1C               	clrf	?_strncmp+1,c
  3628  00401C  A0D8               	btfss	status,0,c
  3629  00401E  061C               	decf	?_strncmp+1,f,c
  3630  004020  0012               	return		;funcret
  3631  004022                     __end_of_strncmp:
  3632                           	opt callstack 0
  3633                           
  3634 ;; *************** function _stoa *****************
  3635 ;; Defined at:
  3636 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  3639 ;;		 -> sprintf@f(6), 
  3640 ;;  s               2   41[COMRAM] PTR unsigned char 
  3641 ;;		 -> ?_sprintf(2), main@command(25), 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  nuls            7   44[COMRAM] unsigned char [7]
  3644 ;;  l               2   59[COMRAM] int 
  3645 ;;  p               2   57[COMRAM] int 
  3646 ;;  cp              2   55[COMRAM] PTR unsigned char 
  3647 ;;		 -> ?_sprintf(2), stoa@nuls(7), main@command(25), 
  3648 ;;  w               2   53[COMRAM] int 
  3649 ;;  i               2   51[COMRAM] int 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2   39[COMRAM] int 
  3652 ;; Registers used:
  3653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:       22 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    8
  3666 ;; This function calls:
  3667 ;;		_fputc
  3668 ;;		_strlen
  3669 ;; This function is called by:
  3670 ;;		_vfpfcnvrt
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text5
  3675  00386C                     __ptext5:
  3676                           	opt callstack 0
  3677  00386C                     _stoa:
  3678                           	opt callstack 19
  3679                           
  3680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  3681                           
  3682                           ;incstack = 0
  3683  00386C  EE21  F0DD         	lfsr	2,stoa@F1158
  3684  003870  EE10  F02D         	lfsr	1,stoa@nuls
  3685  003874  0E06               	movlw	6
  3686  003876                     u9051:
  3687  003876  CFDB FFE3          	movff	plusw2,plusw1
  3688  00387A  06E8               	decf	wreg,f,c
  3689  00387C  E2FC               	bc	u9051
  3690                           
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  3692  00387E  C02A  F038         	movff	stoa@s,stoa@cp
  3693  003882  C02B  F039         	movff	stoa@s+1,stoa@cp+1
  3694                           
  3695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  3696  003886  5038               	movf	stoa@cp,w,c
  3697  003888  1039               	iorwf	stoa@cp+1,w,c
  3698  00388A  A4D8               	btfss	status,2,c
  3699  00388C  D004               	goto	l7686
  3700                           
  3701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  3702  00388E  0E2D               	movlw	low stoa@nuls
  3703  003890  6E38               	movwf	stoa@cp,c
  3704  003892  0E00               	movlw	high stoa@nuls
  3705  003894  6E39               	movwf	stoa@cp+1,c
  3706  003896                     l7686:
  3707                           
  3708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  3709  003896  C038  F01B         	movff	stoa@cp,strlen@s
  3710  00389A  C039  F01C         	movff	stoa@cp+1,strlen@s+1
  3711  00389E  ECB0  F024         	call	_strlen	;wreg free
  3712  0038A2  C01B  F03C         	movff	?_strlen,stoa@l
  3713  0038A6  C01C  F03D         	movff	?_strlen+1,stoa@l+1
  3714                           
  3715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  3716  0038AA  C056  F03A         	movff	_prec,stoa@p
  3717  0038AE  C057  F03B         	movff	_prec+1,stoa@p+1
  3718                           
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  3720  0038B2  BE3B               	btfsc	stoa@p+1,7,c
  3721  0038B4  D00E               	goto	l661
  3722  0038B6  503C               	movf	stoa@l,w,c
  3723  0038B8  5C3A               	subwf	stoa@p,w,c
  3724  0038BA  503B               	movf	stoa@p+1,w,c
  3725  0038BC  0A80               	xorlw	128
  3726  0038BE  6E2C               	movwf	??_stoa& (0+255),c
  3727  0038C0  503D               	movf	stoa@l+1,w,c
  3728  0038C2  0A80               	xorlw	128
  3729  0038C4  582C               	subwfb	??_stoa& (0+255),w,c
  3730  0038C6  B0D8               	btfsc	status,0,c
  3731  0038C8  D004               	goto	l661
  3732  0038CA  C03A  F03C         	movff	stoa@p,stoa@l
  3733  0038CE  C03B  F03D         	movff	stoa@p+1,stoa@l+1
  3734  0038D2                     l661:
  3735                           
  3736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  3737  0038D2  C03C  F03A         	movff	stoa@l,stoa@p
  3738  0038D6  C03D  F03B         	movff	stoa@l+1,stoa@p+1
  3739                           
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  3741  0038DA  C054  F036         	movff	_width,stoa@w
  3742  0038DE  C055  F037         	movff	_width+1,stoa@w+1
  3743                           
  3744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  3745  0038E2  A058               	btfss	_flags,0,c
  3746  0038E4  D00D               	goto	l7700
  3747  0038E6  D016               	goto	u9100
  3748  0038E8                     l7696:
  3749                           
  3750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  3751  0038E8  0E00               	movlw	0
  3752  0038EA  6E20               	movwf	fputc@c+1,c
  3753  0038EC  0E20               	movlw	32
  3754  0038EE  6E1F               	movwf	fputc@c,c
  3755  0038F0  C028  F021         	movff	stoa@fp,fputc@fp
  3756  0038F4  C029  F022         	movff	stoa@fp+1,fputc@fp+1
  3757  0038F8  EC11  F020         	call	_fputc	;wreg free
  3758                           
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  3760  0038FC  4A3C               	infsnz	stoa@l,f,c
  3761  0038FE  2A3D               	incf	stoa@l+1,f,c
  3762  003900                     l7700:
  3763                           
  3764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  3765  003900  5036               	movf	stoa@w,w,c
  3766  003902  5C3C               	subwf	stoa@l,w,c
  3767  003904  503D               	movf	stoa@l+1,w,c
  3768  003906  0A80               	xorlw	128
  3769  003908  6E2C               	movwf	??_stoa& (0+255),c
  3770  00390A  5037               	movf	stoa@w+1,w,c
  3771  00390C  0A80               	xorlw	128
  3772  00390E  582C               	subwfb	??_stoa& (0+255),w,c
  3773  003910  A0D8               	btfss	status,0,c
  3774  003912  D7EA               	goto	l7696
  3775  003914                     u9100:
  3776                           
  3777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  3778  003914  0E00               	movlw	0
  3779  003916  6E35               	movwf	stoa@i+1,c
  3780  003918  0E00               	movlw	0
  3781  00391A  6E34               	movwf	stoa@i,c
  3782                           
  3783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3784  00391C  D013               	goto	l7710
  3785  00391E                     l7704:
  3786                           
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  3788  00391E  C038  FFD9         	movff	stoa@cp,fsr2l
  3789  003922  C039  FFDA         	movff	stoa@cp+1,fsr2h
  3790  003926  50DF               	movf	indf2,w,c
  3791  003928  6E2C               	movwf	??_stoa& (0+255),c
  3792  00392A  502C               	movf	??_stoa,w,c
  3793  00392C  6E1F               	movwf	fputc@c,c
  3794  00392E  6A20               	clrf	fputc@c+1,c
  3795  003930  C028  F021         	movff	stoa@fp,fputc@fp
  3796  003934  C029  F022         	movff	stoa@fp+1,fputc@fp+1
  3797  003938  EC11  F020         	call	_fputc	;wreg free
  3798                           
  3799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  3800  00393C  4A38               	infsnz	stoa@cp,f,c
  3801  00393E  2A39               	incf	stoa@cp+1,f,c
  3802                           
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  3804  003940  4A34               	infsnz	stoa@i,f,c
  3805  003942  2A35               	incf	stoa@i+1,f,c
  3806  003944                     l7710:
  3807                           
  3808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3809  003944  503A               	movf	stoa@p,w,c
  3810  003946  5C34               	subwf	stoa@i,w,c
  3811  003948  5035               	movf	stoa@i+1,w,c
  3812  00394A  0A80               	xorlw	128
  3813  00394C  6E2C               	movwf	??_stoa& (0+255),c
  3814  00394E  503B               	movf	stoa@p+1,w,c
  3815  003950  0A80               	xorlw	128
  3816  003952  582C               	subwfb	??_stoa& (0+255),w,c
  3817  003954  A0D8               	btfss	status,0,c
  3818  003956  D7E3               	goto	l7704
  3819                           
  3820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  3821  003958  B058               	btfsc	_flags,0,c
  3822  00395A  D00D               	goto	l7718
  3823  00395C  D016               	goto	u9130
  3824  00395E                     l7714:
  3825                           
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  3827  00395E  0E00               	movlw	0
  3828  003960  6E20               	movwf	fputc@c+1,c
  3829  003962  0E20               	movlw	32
  3830  003964  6E1F               	movwf	fputc@c,c
  3831  003966  C028  F021         	movff	stoa@fp,fputc@fp
  3832  00396A  C029  F022         	movff	stoa@fp+1,fputc@fp+1
  3833  00396E  EC11  F020         	call	_fputc	;wreg free
  3834                           
  3835                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  3836  003972  4A3C               	infsnz	stoa@l,f,c
  3837  003974  2A3D               	incf	stoa@l+1,f,c
  3838  003976                     l7718:
  3839                           
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  3841  003976  5036               	movf	stoa@w,w,c
  3842  003978  5C3C               	subwf	stoa@l,w,c
  3843  00397A  503D               	movf	stoa@l+1,w,c
  3844  00397C  0A80               	xorlw	128
  3845  00397E  6E2C               	movwf	??_stoa& (0+255),c
  3846  003980  5037               	movf	stoa@w+1,w,c
  3847  003982  0A80               	xorlw	128
  3848  003984  582C               	subwfb	??_stoa& (0+255),w,c
  3849  003986  A0D8               	btfss	status,0,c
  3850  003988  D7EA               	goto	l7714
  3851  00398A                     u9130:
  3852                           
  3853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  3854                           
  3855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  3856  00398A  C03C  F028         	movff	stoa@l,?_stoa
  3857  00398E  C03D  F029         	movff	stoa@l+1,?_stoa+1
  3858  003992  0012               	return		;funcret
  3859  003994                     __end_of_stoa:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _efgtoa *****************
  3863 ;; Defined at:
  3864 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  3867 ;;		 -> sprintf@f(6), 
  3868 ;;  f               4   15[BANK0 ] PTR struct _IO_FILE
  3869 ;;  c               1   19[BANK0 ] unsigned char 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  u               4   77[BANK0 ] unsigned char 
  3872 ;;  g               4   69[BANK0 ] unsigned char 
  3873 ;;  l               4   63[BANK0 ] unsigned char 
  3874 ;;  h               4   59[BANK0 ] unsigned char 
  3875 ;;  ou              4   25[BANK0 ] unsigned char 
  3876 ;;  n               2   75[BANK0 ] int 
  3877 ;;  e               2   73[BANK0 ] int 
  3878 ;;  i               2   67[BANK0 ] int 
  3879 ;;  w               2   56[BANK0 ] int 
  3880 ;;  p               2   53[BANK0 ] int 
  3881 ;;  sign            2   51[BANK0 ] int 
  3882 ;;  d               2   49[BANK0 ] int 
  3883 ;;  ne              2   47[BANK0 ] int 
  3884 ;;  m               2   45[BANK0 ] int 
  3885 ;;  pp              2   43[BANK0 ] int 
  3886 ;;  t               2   41[BANK0 ] int 
  3887 ;;  mode            1   58[BANK0 ] unsigned char 
  3888 ;;  nmode           1   55[BANK0 ] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  2   13[BANK0 ] int 
  3891 ;; Registers used:
  3892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3898 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;Total ram usage:       68 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:   10
  3905 ;; This function calls:
  3906 ;;		___awdiv
  3907 ;;		___awmod
  3908 ;;		___fladd
  3909 ;;		___fldiv
  3910 ;;		___fleq
  3911 ;;		___flge
  3912 ;;		___flmul
  3913 ;;		___flneg
  3914 ;;		___flsub
  3915 ;;		___fltol
  3916 ;;		___fpclassifyf
  3917 ;;		_floorf
  3918 ;;		_isupper
  3919 ;;		_pad
  3920 ;;		_strcpy
  3921 ;;		_tolower
  3922 ;; This function is called by:
  3923 ;;		_vfpfcnvrt
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927                           	psect	text6
  3928  00105A                     __ptext6:
  3929                           	opt callstack 0
  3930  00105A                     _efgtoa:
  3931                           	opt callstack 17
  3932                           
  3933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3934                           
  3935                           ;incstack = 0
  3936  00105A  0E00               	movlw	0
  3937  00105C  0100               	movlb	0	; () banked
  3938  00105E  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3939  001060  0E00               	movlw	0
  3940  001062  6FB3               	movwf	efgtoa@sign& (0+255),b
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3944  001064  C08F  F0C5         	movff	efgtoa@f,efgtoa@g
  3945  001068  C090  F0C6         	movff	efgtoa@f+1,efgtoa@g+1
  3946  00106C  C091  F0C7         	movff	efgtoa@f+2,efgtoa@g+2
  3947  001070  C092  F0C8         	movff	efgtoa@f+3,efgtoa@g+3
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3951  001074  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  3952  001076  D016               	goto	l7390
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3956  001078  0E00               	movlw	0
  3957  00107A  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  3958  00107C  0E01               	movlw	1
  3959  00107E  6FB3               	movwf	efgtoa@sign& (0+255),b
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3963  001080  C0C5  F01B         	movff	efgtoa@g,___flneg@f1
  3964  001084  C0C6  F01C         	movff	efgtoa@g+1,___flneg@f1+1
  3965  001088  C0C7  F01D         	movff	efgtoa@g+2,___flneg@f1+2
  3966  00108C  C0C8  F01E         	movff	efgtoa@g+3,___flneg@f1+3
  3967  001090  EC99  F024         	call	___flneg	;wreg free
  3968  001094  C01B  F0C5         	movff	?___flneg,efgtoa@g
  3969  001098  C01C  F0C6         	movff	?___flneg+1,efgtoa@g+1
  3970  00109C  C01D  F0C7         	movff	?___flneg+2,efgtoa@g+2
  3971  0010A0  C01E  F0C8         	movff	?___flneg+3,efgtoa@g+3
  3972  0010A4                     l7390:
  3973                           
  3974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3975  0010A4  0E00               	movlw	0
  3976  0010A6  0100               	movlb	0	; () banked
  3977  0010A8  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  3978  0010AA  0E00               	movlw	0
  3979  0010AC  6FCB               	movwf	efgtoa@n& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3983  0010AE  C054  F0B8         	movff	_width,efgtoa@w
  3984  0010B2  C055  F0B9         	movff	_width+1,efgtoa@w+1
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3988  0010B6  51B3               	movf	efgtoa@sign& (0+255),w,b
  3989  0010B8  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3990  0010BA  A4D8               	btfss	status,2,c
  3991  0010BC  D002               	goto	u8550
  3992                           
  3993                           ; BSR set to: 0
  3994  0010BE  A458               	btfss	_flags,2,c
  3995  0010C0  D013               	goto	l7410
  3996  0010C2                     u8550:
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  4000  0010C2  51B3               	movf	efgtoa@sign& (0+255),w,b
  4001  0010C4  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4002  0010C6  A4D8               	btfss	status,2,c
  4003  0010C8  D004               	goto	l7402
  4004                           
  4005                           ; BSR set to: 0
  4006  0010CA  0E00               	movlw	0
  4007  0010CC  6F9E               	movwf	(_efgtoa$1146+1)& (0+255),b
  4008  0010CE  0E2B               	movlw	43
  4009  0010D0  D003               	goto	L2
  4010  0010D2                     l7402:
  4011                           
  4012                           ; BSR set to: 0
  4013  0010D2  0E00               	movlw	0
  4014  0010D4  6F9E               	movwf	(_efgtoa$1146+1)& (0+255),b
  4015  0010D6  0E2D               	movlw	45
  4016  0010D8                     L2:
  4017  0010D8  6F9D               	movwf	_efgtoa$1146& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020  0010DA  C09D  F18D         	movff	_efgtoa$1146,_dbuf
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  4024  0010DE  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  4025  0010E0  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  4029  0010E2  07B8               	decf	efgtoa@w& (0+255),f,b
  4030  0010E4  A0D8               	btfss	status,0,c
  4031  0010E6  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4032  0010E8                     l7410:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4036  0010E8  C0C5  F01B         	movff	efgtoa@g,___fpclassifyf@x
  4037  0010EC  C0C6  F01C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4038  0010F0  C0C7  F01D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4039  0010F4  C0C8  F01E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4040  0010F8  EC42  F01E         	call	___fpclassifyf	;wreg free
  4041  0010FC  041B               	decf	?___fpclassifyf,w,c
  4042  0010FE  101C               	iorwf	?___fpclassifyf+1,w,c
  4043  001100  A4D8               	btfss	status,2,c
  4044  001102  D04C               	goto	l7428
  4045  001104  0EBF               	movlw	191
  4046  001106  0100               	movlb	0	; () banked
  4047  001108  6F94               	movwf	??_efgtoa& (0+255),b
  4048  00110A  0EFF               	movlw	255
  4049  00110C  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  4050  00110E  5193               	movf	efgtoa@c& (0+255),w,b
  4051  001110  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  4052  001112  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  4053  001114  5194               	movf	??_efgtoa& (0+255),w,b
  4054  001116  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  4055  001118  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  4056  00111A  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4057  00111C  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  4058  00111E  E106               	bnz	u8580
  4059  001120  0E1A               	movlw	26
  4060  001122  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  4061  001124  B0D8               	btfsc	status,0,c
  4062  001126  D002               	goto	u8580
  4063  001128  0E01               	movlw	1
  4064  00112A  D001               	goto	u8590
  4065  00112C                     u8580:
  4066  00112C  0E00               	movlw	0
  4067  00112E                     u8590:
  4068  00112E  6F9F               	movwf	_efgtoa$1147& (0+255),b
  4069  001130  6BA0               	clrf	(_efgtoa$1147+1)& (0+255),b
  4070                           
  4071                           ; BSR set to: 0
  4072  001132  519F               	movf	_efgtoa$1147& (0+255),w,b
  4073  001134  11A0               	iorwf	(_efgtoa$1147+1)& (0+255),w,b
  4074  001136  B4D8               	btfsc	status,2,c
  4075  001138  D00D               	goto	l7420
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  4079  00113A  0E8D               	movlw	low _dbuf
  4080  00113C  25CB               	addwf	efgtoa@n& (0+255),w,b
  4081  00113E  6E1B               	movwf	strcpy@dest,c
  4082  001140  0E01               	movlw	high _dbuf
  4083  001142  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4084  001144  6E1C               	movwf	strcpy@dest+1,c
  4085  001146  0E45               	movlw	low STR_8
  4086  001148  6E1D               	movwf	strcpy@src,c
  4087  00114A  0E10               	movlw	high STR_8
  4088  00114C  6E1E               	movwf	strcpy@src+1,c
  4089  00114E  ECFC  F022         	call	_strcpy	;wreg free
  4090                           
  4091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  4092  001152  D00C               	goto	l7422
  4093  001154                     l7420:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  4097  001154  0E8D               	movlw	low _dbuf
  4098  001156  25CB               	addwf	efgtoa@n& (0+255),w,b
  4099  001158  6E1B               	movwf	strcpy@dest,c
  4100  00115A  0E01               	movlw	high _dbuf
  4101  00115C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4102  00115E  6E1C               	movwf	strcpy@dest+1,c
  4103  001160  0E4D               	movlw	low STR_9
  4104  001162  6E1D               	movwf	strcpy@src,c
  4105  001164  0E10               	movlw	high STR_9
  4106  001166  6E1E               	movwf	strcpy@src+1,c
  4107  001168  ECFC  F022         	call	_strcpy	;wreg free
  4108  00116C                     l7422:
  4109                           
  4110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  4111  00116C  0100               	movlb	0	; () banked
  4112  00116E  0EFD               	movlw	253
  4113  001170  27B8               	addwf	efgtoa@w& (0+255),f,b
  4114  001172  0EFF               	movlw	255
  4115  001174  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4116  001176                     l7424:
  4117                           
  4118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  4119  001176  C08D  F02F         	movff	efgtoa@fp,pad@fp
  4120  00117A  C08E  F030         	movff	efgtoa@fp+1,pad@fp+1
  4121  00117E  0E8D               	movlw	low _dbuf
  4122  001180  6E31               	movwf	pad@buf,c
  4123  001182  0E01               	movlw	high _dbuf
  4124  001184  6E32               	movwf	pad@buf+1,c
  4125  001186  C0B8  F033         	movff	efgtoa@w,pad@p
  4126  00118A  C0B9  F034         	movff	efgtoa@w+1,pad@p+1
  4127  00118E  ECAF  F020         	call	_pad	;wreg free
  4128  001192  C02F  F08D         	movff	?_pad,?_efgtoa
  4129  001196  C030  F08E         	movff	?_pad+1,?_efgtoa+1
  4130  00119A  0012               	return	
  4131  00119C                     l7428:
  4132                           
  4133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4134  00119C  C0C5  F01B         	movff	efgtoa@g,___fpclassifyf@x
  4135  0011A0  C0C6  F01C         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4136  0011A4  C0C7  F01D         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4137  0011A8  C0C8  F01E         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4138  0011AC  EC42  F01E         	call	___fpclassifyf	;wreg free
  4139  0011B0  501B               	movf	?___fpclassifyf,w,c
  4140  0011B2  101C               	iorwf	?___fpclassifyf+1,w,c
  4141  0011B4  A4D8               	btfss	status,2,c
  4142  0011B6  D035               	goto	l7446
  4143  0011B8  0EBF               	movlw	191
  4144  0011BA  0100               	movlb	0	; () banked
  4145  0011BC  6F94               	movwf	??_efgtoa& (0+255),b
  4146  0011BE  0EFF               	movlw	255
  4147  0011C0  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  4148  0011C2  5193               	movf	efgtoa@c& (0+255),w,b
  4149  0011C4  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  4150  0011C6  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  4151  0011C8  5194               	movf	??_efgtoa& (0+255),w,b
  4152  0011CA  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  4153  0011CC  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  4154  0011CE  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4155  0011D0  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  4156  0011D2  E106               	bnz	u8620
  4157  0011D4  0E1A               	movlw	26
  4158  0011D6  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  4159  0011D8  B0D8               	btfsc	status,0,c
  4160  0011DA  D002               	goto	u8620
  4161  0011DC  0E01               	movlw	1
  4162  0011DE  D001               	goto	u8630
  4163  0011E0                     u8620:
  4164  0011E0  0E00               	movlw	0
  4165  0011E2                     u8630:
  4166  0011E2  6FA1               	movwf	_efgtoa$1151& (0+255),b
  4167  0011E4  6BA2               	clrf	(_efgtoa$1151+1)& (0+255),b
  4168                           
  4169                           ; BSR set to: 0
  4170  0011E6  51A1               	movf	_efgtoa$1151& (0+255),w,b
  4171  0011E8  11A2               	iorwf	(_efgtoa$1151+1)& (0+255),w,b
  4172  0011EA  B4D8               	btfsc	status,2,c
  4173  0011EC  D00D               	goto	l7438
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  4177  0011EE  0E8D               	movlw	low _dbuf
  4178  0011F0  25CB               	addwf	efgtoa@n& (0+255),w,b
  4179  0011F2  6E1B               	movwf	strcpy@dest,c
  4180  0011F4  0E01               	movlw	high _dbuf
  4181  0011F6  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4182  0011F8  6E1C               	movwf	strcpy@dest+1,c
  4183  0011FA  0E49               	movlw	low STR_12
  4184  0011FC  6E1D               	movwf	strcpy@src,c
  4185  0011FE  0E10               	movlw	high STR_12
  4186  001200  6E1E               	movwf	strcpy@src+1,c
  4187  001202  ECFC  F022         	call	_strcpy	;wreg free
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  4190  001206  D7B2               	goto	l7422
  4191  001208                     l7438:
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  4195  001208  0E8D               	movlw	low _dbuf
  4196  00120A  25CB               	addwf	efgtoa@n& (0+255),w,b
  4197  00120C  6E1B               	movwf	strcpy@dest,c
  4198  00120E  0E01               	movlw	high _dbuf
  4199  001210  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4200  001212  6E1C               	movwf	strcpy@dest+1,c
  4201  001214  0E51               	movlw	low STR_13
  4202  001216  6E1D               	movwf	strcpy@src,c
  4203  001218  0E10               	movlw	high STR_13
  4204  00121A  6E1E               	movwf	strcpy@src+1,c
  4205  00121C  ECFC  F022         	call	_strcpy	;wreg free
  4206  001220  D7A5               	goto	l7422
  4207  001222                     l7446:
  4208                           
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  4210  001222  0E00               	movlw	0
  4211  001224  0100               	movlb	0	; () banked
  4212  001226  6FCD               	movwf	efgtoa@u& (0+255),b
  4213  001228  0E00               	movlw	0
  4214  00122A  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  4215  00122C  0E80               	movlw	128
  4216  00122E  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  4217  001230  0E3F               	movlw	63
  4218  001232  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  4219                           
  4220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  4221  001234  0E00               	movlw	0
  4222  001236  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  4223  001238  0E00               	movlw	0
  4224  00123A  6FC9               	movwf	efgtoa@e& (0+255),b
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  4228  00123C  C0C5  F01B         	movff	efgtoa@g,___fleq@ff1
  4229  001240  C0C6  F01C         	movff	efgtoa@g+1,___fleq@ff1+1
  4230  001244  C0C7  F01D         	movff	efgtoa@g+2,___fleq@ff1+2
  4231  001248  C0C8  F01E         	movff	efgtoa@g+3,___fleq@ff1+3
  4232  00124C  0E00               	movlw	0
  4233  00124E  6E1F               	movwf	___fleq@ff2,c
  4234  001250  0E00               	movlw	0
  4235  001252  6E20               	movwf	___fleq@ff2+1,c
  4236  001254  0E00               	movlw	0
  4237  001256  6E21               	movwf	___fleq@ff2+2,c
  4238  001258  0E00               	movlw	0
  4239  00125A  6E22               	movwf	___fleq@ff2+3,c
  4240  00125C  EC41  F021         	call	___fleq	;wreg free
  4241  001260  A0D8               	btfss	status,0,c
  4242  001262  D01E               	goto	l7456
  4243  001264  D076               	goto	u8670
  4244  001266                     l7452:
  4245                           
  4246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  4247  001266  C0CD  F034         	movff	efgtoa@u,___flmul@b
  4248  00126A  C0CE  F035         	movff	efgtoa@u+1,___flmul@b+1
  4249  00126E  C0CF  F036         	movff	efgtoa@u+2,___flmul@b+2
  4250  001272  C0D0  F037         	movff	efgtoa@u+3,___flmul@b+3
  4251  001276  0E00               	movlw	0
  4252  001278  6E38               	movwf	___flmul@a,c
  4253  00127A  0E00               	movlw	0
  4254  00127C  6E39               	movwf	___flmul@a+1,c
  4255  00127E  0E20               	movlw	32
  4256  001280  6E3A               	movwf	___flmul@a+2,c
  4257  001282  0E41               	movlw	65
  4258  001284  6E3B               	movwf	___flmul@a+3,c
  4259  001286  EC82  F012         	call	___flmul	;wreg free
  4260  00128A  C034  F0CD         	movff	?___flmul,efgtoa@u
  4261  00128E  C035  F0CE         	movff	?___flmul+1,efgtoa@u+1
  4262  001292  C036  F0CF         	movff	?___flmul+2,efgtoa@u+2
  4263  001296  C037  F0D0         	movff	?___flmul+3,efgtoa@u+3
  4264                           
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  4266  00129A  0100               	movlb	0	; () banked
  4267  00129C  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  4268  00129E  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  4269  0012A0                     l7456:
  4270                           
  4271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  4272  0012A0  C0C5  F040         	movff	efgtoa@g,___flge@ff1
  4273  0012A4  C0C6  F041         	movff	efgtoa@g+1,___flge@ff1+1
  4274  0012A8  C0C7  F042         	movff	efgtoa@g+2,___flge@ff1+2
  4275  0012AC  C0C8  F043         	movff	efgtoa@g+3,___flge@ff1+3
  4276  0012B0  0E00               	movlw	0
  4277  0012B2  6E38               	movwf	___flmul@a,c
  4278  0012B4  0E00               	movlw	0
  4279  0012B6  6E39               	movwf	___flmul@a+1,c
  4280  0012B8  0E20               	movlw	32
  4281  0012BA  6E3A               	movwf	___flmul@a+2,c
  4282  0012BC  0E41               	movlw	65
  4283  0012BE  6E3B               	movwf	___flmul@a+3,c
  4284  0012C0  C0CD  F034         	movff	efgtoa@u,___flmul@b
  4285  0012C4  C0CE  F035         	movff	efgtoa@u+1,___flmul@b+1
  4286  0012C8  C0CF  F036         	movff	efgtoa@u+2,___flmul@b+2
  4287  0012CC  C0D0  F037         	movff	efgtoa@u+3,___flmul@b+3
  4288  0012D0  EC82  F012         	call	___flmul	;wreg free
  4289  0012D4  C034  F044         	movff	?___flmul,___flge@ff2
  4290  0012D8  C035  F045         	movff	?___flmul+1,___flge@ff2+1
  4291  0012DC  C036  F046         	movff	?___flmul+2,___flge@ff2+2
  4292  0012E0  C037  F047         	movff	?___flmul+3,___flge@ff2+3
  4293  0012E4  ECDA  F01D         	call	___flge	;wreg free
  4294  0012E8  A0D8               	btfss	status,0,c
  4295  0012EA  D01F               	goto	l7462
  4296  0012EC  D7BC               	goto	l7452
  4297  0012EE                     l7458:
  4298                           
  4299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  4300  0012EE  C0CD  F01B         	movff	efgtoa@u,___fldiv@b
  4301  0012F2  C0CE  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  4302  0012F6  C0CF  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  4303  0012FA  C0D0  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  4304  0012FE  0E00               	movlw	0
  4305  001300  6E1F               	movwf	___fldiv@a,c
  4306  001302  0E00               	movlw	0
  4307  001304  6E20               	movwf	___fldiv@a+1,c
  4308  001306  0E20               	movlw	32
  4309  001308  6E21               	movwf	___fldiv@a+2,c
  4310  00130A  0E41               	movlw	65
  4311  00130C  6E22               	movwf	___fldiv@a+3,c
  4312  00130E  EC38  F017         	call	___fldiv	;wreg free
  4313  001312  C01B  F0CD         	movff	?___fldiv,efgtoa@u
  4314  001316  C01C  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  4315  00131A  C01D  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  4316  00131E  C01E  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  4317                           
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  4319  001322  0100               	movlb	0	; () banked
  4320  001324  07C9               	decf	efgtoa@e& (0+255),f,b
  4321  001326  A0D8               	btfss	status,0,c
  4322  001328  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  4323  00132A                     l7462:
  4324                           
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  4326  00132A  C0C5  F040         	movff	efgtoa@g,___flge@ff1
  4327  00132E  C0C6  F041         	movff	efgtoa@g+1,___flge@ff1+1
  4328  001332  C0C7  F042         	movff	efgtoa@g+2,___flge@ff1+2
  4329  001336  C0C8  F043         	movff	efgtoa@g+3,___flge@ff1+3
  4330  00133A  C0CD  F044         	movff	efgtoa@u,___flge@ff2
  4331  00133E  C0CE  F045         	movff	efgtoa@u+1,___flge@ff2+1
  4332  001342  C0CF  F046         	movff	efgtoa@u+2,___flge@ff2+2
  4333  001346  C0D0  F047         	movff	efgtoa@u+3,___flge@ff2+3
  4334  00134A  ECDA  F01D         	call	___flge	;wreg free
  4335  00134E  A0D8               	btfss	status,0,c
  4336  001350  D7CE               	goto	l7458
  4337  001352                     u8670:
  4338                           
  4339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  4340  001352  C093  F021         	movff	efgtoa@c,tolower@c
  4341  001356  6A22               	clrf	tolower@c+1,c
  4342  001358  EC9D  F023         	call	_tolower	;wreg free
  4343  00135C  5021               	movf	?_tolower,w,c
  4344  00135E  0100               	movlb	0	; () banked
  4345  001360  6FBA               	movwf	efgtoa@mode& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  4349  001362  C0BA  F0B7         	movff	efgtoa@mode,efgtoa@nmode
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  4353  001366  0E67               	movlw	103
  4354  001368  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  4355  00136A  A4D8               	btfss	status,2,c
  4356  00136C  D019               	goto	l7478
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  4360  00136E  5056               	movf	_prec,w,c
  4361  001370  1057               	iorwf	_prec+1,w,c
  4362  001372  A4D8               	btfss	status,2,c
  4363  001374  D004               	goto	l7474
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  4367  001376  0E00               	movlw	0
  4368  001378  6E57               	movwf	_prec+1,c
  4369  00137A  0E01               	movlw	1
  4370  00137C  6E56               	movwf	_prec,c
  4371  00137E                     l7474:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  4375  00137E  BE57               	btfsc	_prec+1,7,c
  4376  001380  D005               	goto	u8700
  4377  001382  5057               	movf	_prec+1,w,c
  4378  001384  E108               	bnz	l597
  4379  001386  0456               	decf	_prec,w,c
  4380  001388  B0D8               	btfsc	status,0,c
  4381  00138A  D005               	goto	l597
  4382  00138C                     u8700:
  4383                           
  4384                           ; BSR set to: 0
  4385  00138C  0E00               	movlw	0
  4386  00138E  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  4387  001390  0E06               	movlw	6
  4388  001392  6FB5               	movwf	efgtoa@p& (0+255),b
  4389  001394  D008               	goto	l7484
  4390  001396                     l597:
  4391                           
  4392                           ; BSR set to: 0
  4393  001396  C056  F0B5         	movff	_prec,efgtoa@p
  4394  00139A  C057  F0B6         	movff	_prec+1,efgtoa@p+1
  4395  00139E  D003               	goto	l7484
  4396  0013A0                     l7478:
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  4400  0013A0  AE57               	btfss	_prec+1,7,c
  4401  0013A2  D7F9               	goto	l597
  4402  0013A4  D7F3               	goto	u8700
  4403  0013A6                     l7484:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  4407  0013A6  0E67               	movlw	103
  4408  0013A8  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  4409  0013AA  A4D8               	btfss	status,2,c
  4410  0013AC  D022               	goto	l7494
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  4414  0013AE  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  4415  0013B0  D006               	goto	u8730
  4416  0013B2  0EFC               	movlw	252
  4417  0013B4  5DC9               	subwf	efgtoa@e& (0+255),w,b
  4418  0013B6  0EFF               	movlw	255
  4419  0013B8  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4420  0013BA  A0D8               	btfss	status,0,c
  4421  0013BC  D018               	goto	l7492
  4422  0013BE                     u8730:
  4423                           
  4424                           ; BSR set to: 0
  4425  0013BE  0EFF               	movlw	255
  4426  0013C0  6F94               	movwf	??_efgtoa& (0+255),b
  4427  0013C2  0EFF               	movlw	255
  4428  0013C4  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  4429  0013C6  C0B5  F096         	movff	efgtoa@p,??_efgtoa+2
  4430  0013CA  C0B6  F097         	movff	efgtoa@p+1,??_efgtoa+3
  4431  0013CE  5194               	movf	??_efgtoa& (0+255),w,b
  4432  0013D0  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  4433  0013D2  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  4434  0013D4  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4435  0013D6  51C9               	movf	efgtoa@e& (0+255),w,b
  4436  0013D8  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  4437  0013DA  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  4438  0013DC  0A80               	xorlw	128
  4439  0013DE  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  4440  0013E0  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  4441  0013E2  0A80               	xorlw	128
  4442  0013E4  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4443  0013E6  A0D8               	btfss	status,0,c
  4444  0013E8  D002               	goto	l7492
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  4448  0013EA  0E66               	movlw	102
  4449  0013EC  D001               	goto	L3
  4450  0013EE                     l7492:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  4454  0013EE  0E65               	movlw	101
  4455  0013F0                     L3:
  4456  0013F0  6FB7               	movwf	efgtoa@nmode& (0+255),b
  4457  0013F2                     l7494:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  4461  0013F2  C0B5  F0AD         	movff	efgtoa@p,efgtoa@m
  4462  0013F6  C0B6  F0AE         	movff	efgtoa@p+1,efgtoa@m+1
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  4466  0013FA  0E67               	movlw	103
  4467  0013FC  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  4468  0013FE  A4D8               	btfss	status,2,c
  4469  001400  D005               	goto	u8770
  4470                           
  4471                           ; BSR set to: 0
  4472  001402  0E66               	movlw	102
  4473  001404  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  4474  001406  B4D8               	btfsc	status,2,c
  4475                           
  4476                           ; BSR set to: 0
  4477  001408  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  4478  00140A  D002               	goto	l7504
  4479  00140C                     u8770:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  4483  00140C  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  4484  00140E  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  4485  001410                     l7504:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  4489  001410  0E66               	movlw	102
  4490  001412  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  4491  001414  A4D8               	btfss	status,2,c
  4492  001416  D016               	goto	l7514
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  4496  001418  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  4497  00141A  D00C               	goto	l7510
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  4501  00141C  0E00               	movlw	0
  4502  00141E  6FCD               	movwf	efgtoa@u& (0+255),b
  4503  001420  0E00               	movlw	0
  4504  001422  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  4505  001424  0E80               	movlw	128
  4506  001426  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  4507  001428  0E3F               	movlw	63
  4508  00142A  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  4509                           
  4510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  4511  00142C  0E00               	movlw	0
  4512  00142E  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  4513  001430  0E00               	movlw	0
  4514  001432  6FC9               	movwf	efgtoa@e& (0+255),b
  4515  001434                     l7510:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  4519  001434  0E67               	movlw	103
  4520  001436  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  4521  001438  B4D8               	btfsc	status,2,c
  4522  00143A  D004               	goto	l7514
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  4526  00143C  51C9               	movf	efgtoa@e& (0+255),w,b
  4527  00143E  27AD               	addwf	efgtoa@m& (0+255),f,b
  4528  001440  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  4529  001442  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4530  001444                     l7514:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  4534  001444  0E00               	movlw	0
  4535  001446  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  4536  001448  0E00               	movlw	0
  4537  00144A  6FC3               	movwf	efgtoa@i& (0+255),b
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  4541  00144C  C0C5  F0BB         	movff	efgtoa@g,efgtoa@h
  4542  001450  C0C6  F0BC         	movff	efgtoa@g+1,efgtoa@h+1
  4543  001454  C0C7  F0BD         	movff	efgtoa@g+2,efgtoa@h+2
  4544  001458  C0C8  F0BE         	movff	efgtoa@g+3,efgtoa@h+3
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  4548  00145C  C0CD  F099         	movff	efgtoa@u,efgtoa@ou
  4549  001460  C0CE  F09A         	movff	efgtoa@u+1,efgtoa@ou+1
  4550  001464  C0CF  F09B         	movff	efgtoa@u+2,efgtoa@ou+2
  4551  001468  C0D0  F09C         	movff	efgtoa@u+3,efgtoa@ou+3
  4552                           
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4554  00146C  D07B               	goto	l7528
  4555  00146E                     l7520:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  4559  00146E  C0BB  F01B         	movff	efgtoa@h,___fldiv@b
  4560  001472  C0BC  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  4561  001476  C0BD  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  4562  00147A  C0BE  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  4563  00147E  C0CD  F01F         	movff	efgtoa@u,___fldiv@a
  4564  001482  C0CE  F020         	movff	efgtoa@u+1,___fldiv@a+1
  4565  001486  C0CF  F021         	movff	efgtoa@u+2,___fldiv@a+2
  4566  00148A  C0D0  F022         	movff	efgtoa@u+3,___fldiv@a+3
  4567  00148E  EC38  F017         	call	___fldiv	;wreg free
  4568  001492  C01B  F034         	movff	?___fldiv,floorf@x
  4569  001496  C01C  F035         	movff	?___fldiv+1,floorf@x+1
  4570  00149A  C01D  F036         	movff	?___fldiv+2,floorf@x+2
  4571  00149E  C01E  F037         	movff	?___fldiv+3,floorf@x+3
  4572  0014A2  EC7C  F018         	call	_floorf	;wreg free
  4573  0014A6  C034  F0BF         	movff	?_floorf,efgtoa@l
  4574  0014AA  C035  F0C0         	movff	?_floorf+1,efgtoa@l+1
  4575  0014AE  C036  F0C1         	movff	?_floorf+2,efgtoa@l+2
  4576  0014B2  C037  F0C2         	movff	?_floorf+3,efgtoa@l+3
  4577                           
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  4579  0014B6  C0BF  F040         	movff	efgtoa@l,___fltol@f1
  4580  0014BA  C0C0  F041         	movff	efgtoa@l+1,___fltol@f1+1
  4581  0014BE  C0C1  F042         	movff	efgtoa@l+2,___fltol@f1+2
  4582  0014C2  C0C2  F043         	movff	efgtoa@l+3,___fltol@f1+3
  4583  0014C6  EC0E  F01F         	call	___fltol	;wreg free
  4584  0014CA  C040  F0B1         	movff	?___fltol,efgtoa@d
  4585  0014CE  C041  F0B2         	movff	?___fltol+1,efgtoa@d+1
  4586                           
  4587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  4588  0014D2  C0BB  F044         	movff	efgtoa@h,___flsub@b
  4589  0014D6  C0BC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4590  0014DA  C0BD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4591  0014DE  C0BE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4592  0014E2  C0CD  F038         	movff	efgtoa@u,___flmul@a
  4593  0014E6  C0CE  F039         	movff	efgtoa@u+1,___flmul@a+1
  4594  0014EA  C0CF  F03A         	movff	efgtoa@u+2,___flmul@a+2
  4595  0014EE  C0D0  F03B         	movff	efgtoa@u+3,___flmul@a+3
  4596  0014F2  C0BF  F034         	movff	efgtoa@l,___flmul@b
  4597  0014F6  C0C0  F035         	movff	efgtoa@l+1,___flmul@b+1
  4598  0014FA  C0C1  F036         	movff	efgtoa@l+2,___flmul@b+2
  4599  0014FE  C0C2  F037         	movff	efgtoa@l+3,___flmul@b+3
  4600  001502  EC82  F012         	call	___flmul	;wreg free
  4601  001506  C034  F048         	movff	?___flmul,___flsub@a
  4602  00150A  C035  F049         	movff	?___flmul+1,___flsub@a+1
  4603  00150E  C036  F04A         	movff	?___flmul+2,___flsub@a+2
  4604  001512  C037  F04B         	movff	?___flmul+3,___flsub@a+3
  4605  001516  ECE8  F023         	call	___flsub	;wreg free
  4606  00151A  C044  F0BB         	movff	?___flsub,efgtoa@h
  4607  00151E  C045  F0BC         	movff	?___flsub+1,efgtoa@h+1
  4608  001522  C046  F0BD         	movff	?___flsub+2,efgtoa@h+2
  4609  001526  C047  F0BE         	movff	?___flsub+3,efgtoa@h+3
  4610                           
  4611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4612  00152A  C0CD  F01B         	movff	efgtoa@u,___fldiv@b
  4613  00152E  C0CE  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  4614  001532  C0CF  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  4615  001536  C0D0  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  4616  00153A  0E00               	movlw	0
  4617  00153C  6E1F               	movwf	___fldiv@a,c
  4618  00153E  0E00               	movlw	0
  4619  001540  6E20               	movwf	___fldiv@a+1,c
  4620  001542  0E20               	movlw	32
  4621  001544  6E21               	movwf	___fldiv@a+2,c
  4622  001546  0E41               	movlw	65
  4623  001548  6E22               	movwf	___fldiv@a+3,c
  4624  00154A  EC38  F017         	call	___fldiv	;wreg free
  4625  00154E  C01B  F0CD         	movff	?___fldiv,efgtoa@u
  4626  001552  C01C  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  4627  001556  C01D  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  4628  00155A  C01E  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  4629                           
  4630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4631  00155E  0100               	movlb	0	; () banked
  4632  001560  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  4633  001562  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  4634  001564                     l7528:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4638  001564  51AD               	movf	efgtoa@m& (0+255),w,b
  4639  001566  5DC3               	subwf	efgtoa@i& (0+255),w,b
  4640  001568  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  4641  00156A  0A80               	xorlw	128
  4642  00156C  6F94               	movwf	??_efgtoa& (0+255),b
  4643  00156E  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  4644  001570  0A80               	xorlw	128
  4645  001572  5994               	subwfb	??_efgtoa& (0+255),w,b
  4646  001574  A0D8               	btfss	status,0,c
  4647  001576  D77B               	goto	l7520
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4651  001578  C0CD  F034         	movff	efgtoa@u,___flmul@b
  4652  00157C  C0CE  F035         	movff	efgtoa@u+1,___flmul@b+1
  4653  001580  C0CF  F036         	movff	efgtoa@u+2,___flmul@b+2
  4654  001584  C0D0  F037         	movff	efgtoa@u+3,___flmul@b+3
  4655  001588  0E00               	movlw	0
  4656  00158A  6E38               	movwf	___flmul@a,c
  4657  00158C  0E00               	movlw	0
  4658  00158E  6E39               	movwf	___flmul@a+1,c
  4659  001590  0EA0               	movlw	160
  4660  001592  6E3A               	movwf	___flmul@a+2,c
  4661  001594  0E40               	movlw	64
  4662  001596  6E3B               	movwf	___flmul@a+3,c
  4663  001598  EC82  F012         	call	___flmul	;wreg free
  4664  00159C  C034  F0BF         	movff	?___flmul,efgtoa@l
  4665  0015A0  C035  F0C0         	movff	?___flmul+1,efgtoa@l+1
  4666  0015A4  C036  F0C1         	movff	?___flmul+2,efgtoa@l+2
  4667  0015A8  C037  F0C2         	movff	?___flmul+3,efgtoa@l+3
  4668                           
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4670  0015AC  C0BB  F040         	movff	efgtoa@h,___flge@ff1
  4671  0015B0  C0BC  F041         	movff	efgtoa@h+1,___flge@ff1+1
  4672  0015B4  C0BD  F042         	movff	efgtoa@h+2,___flge@ff1+2
  4673  0015B8  C0BE  F043         	movff	efgtoa@h+3,___flge@ff1+3
  4674  0015BC  C0BF  F044         	movff	efgtoa@l,___flge@ff2
  4675  0015C0  C0C0  F045         	movff	efgtoa@l+1,___flge@ff2+1
  4676  0015C4  C0C1  F046         	movff	efgtoa@l+2,___flge@ff2+2
  4677  0015C8  C0C2  F047         	movff	efgtoa@l+3,___flge@ff2+3
  4678  0015CC  ECDA  F01D         	call	___flge	;wreg free
  4679  0015D0  B0D8               	btfsc	status,0,c
  4680  0015D2  D003               	goto	l7536
  4681                           
  4682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4683  0015D4  0E00               	movlw	0
  4684  0015D6  0100               	movlb	0	; () banked
  4685  0015D8  D018               	goto	L4
  4686  0015DA                     l7536:
  4687                           
  4688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4689  0015DA  C0BB  F01B         	movff	efgtoa@h,___fleq@ff1
  4690  0015DE  C0BC  F01C         	movff	efgtoa@h+1,___fleq@ff1+1
  4691  0015E2  C0BD  F01D         	movff	efgtoa@h+2,___fleq@ff1+2
  4692  0015E6  C0BE  F01E         	movff	efgtoa@h+3,___fleq@ff1+3
  4693  0015EA  C0BF  F01F         	movff	efgtoa@l,___fleq@ff2
  4694  0015EE  C0C0  F020         	movff	efgtoa@l+1,___fleq@ff2+1
  4695  0015F2  C0C1  F021         	movff	efgtoa@l+2,___fleq@ff2+2
  4696  0015F6  C0C2  F022         	movff	efgtoa@l+3,___fleq@ff2+3
  4697  0015FA  EC41  F021         	call	___fleq	;wreg free
  4698  0015FE  A0D8               	btfss	status,0,c
  4699  001600  D00B               	goto	l7542
  4700  001602  0100               	movlb	0	; () banked
  4701  001604  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  4702  001606  D008               	goto	l7542
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4706  001608  0E00               	movlw	0
  4707  00160A                     L4:
  4708  00160A  6FBF               	movwf	efgtoa@l& (0+255),b
  4709  00160C  0E00               	movlw	0
  4710  00160E  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  4711  001610  0E00               	movlw	0
  4712  001612  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  4713  001614  0E00               	movlw	0
  4714  001616  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  4715  001618                     l7542:
  4716                           
  4717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4718  001618  C0C5  F034         	movff	efgtoa@g,___fladd@b
  4719  00161C  C0C6  F035         	movff	efgtoa@g+1,___fladd@b+1
  4720  001620  C0C7  F036         	movff	efgtoa@g+2,___fladd@b+2
  4721  001624  C0C8  F037         	movff	efgtoa@g+3,___fladd@b+3
  4722  001628  C0BF  F038         	movff	efgtoa@l,___fladd@a
  4723  00162C  C0C0  F039         	movff	efgtoa@l+1,___fladd@a+1
  4724  001630  C0C1  F03A         	movff	efgtoa@l+2,___fladd@a+2
  4725  001634  C0C2  F03B         	movff	efgtoa@l+3,___fladd@a+3
  4726  001638  EC2C  F014         	call	___fladd	;wreg free
  4727  00163C  C034  F0BB         	movff	?___fladd,efgtoa@h
  4728  001640  C035  F0BC         	movff	?___fladd+1,efgtoa@h+1
  4729  001644  C036  F0BD         	movff	?___fladd+2,efgtoa@h+2
  4730  001648  C037  F0BE         	movff	?___fladd+3,efgtoa@h+3
  4731                           
  4732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4733  00164C  C099  F0CD         	movff	efgtoa@ou,efgtoa@u
  4734  001650  C09A  F0CE         	movff	efgtoa@ou+1,efgtoa@u+1
  4735  001654  C09B  F0CF         	movff	efgtoa@ou+2,efgtoa@u+2
  4736  001658  C09C  F0D0         	movff	efgtoa@ou+3,efgtoa@u+3
  4737                           
  4738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4739  00165C  0E65               	movlw	101
  4740  00165E  0100               	movlb	0	; () banked
  4741  001660  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  4742  001662  B4D8               	btfsc	status,2,c
  4743  001664  D005               	goto	l7550
  4744                           
  4745                           ; BSR set to: 0
  4746  001666  C0C9  F0AF         	movff	efgtoa@e,efgtoa@ne
  4747  00166A  C0CA  F0B0         	movff	efgtoa@e+1,efgtoa@ne+1
  4748  00166E  D004               	goto	l623
  4749  001670                     l7550:
  4750                           
  4751                           ; BSR set to: 0
  4752  001670  0E00               	movlw	0
  4753  001672  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  4754  001674  0E00               	movlw	0
  4755  001676  6FAF               	movwf	efgtoa@ne& (0+255),b
  4756  001678                     l623:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4760  001678  0E00               	movlw	0
  4761  00167A  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  4762  00167C  0E00               	movlw	0
  4763  00167E  6FAB               	movwf	efgtoa@pp& (0+255),b
  4764                           
  4765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4766  001680  0E00               	movlw	0
  4767  001682  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  4768  001684  0E00               	movlw	0
  4769  001686  6FA9               	movwf	efgtoa@t& (0+255),b
  4770                           
  4771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4772  001688  0E00               	movlw	0
  4773  00168A  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  4774  00168C  0E00               	movlw	0
  4775  00168E  6FC3               	movwf	efgtoa@i& (0+255),b
  4776                           
  4777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4778  001690  D0C7               	goto	l7600
  4779  001692                     l7552:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4783  001692  C0BB  F01B         	movff	efgtoa@h,___fldiv@b
  4784  001696  C0BC  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  4785  00169A  C0BD  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  4786  00169E  C0BE  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  4787  0016A2  C0CD  F01F         	movff	efgtoa@u,___fldiv@a
  4788  0016A6  C0CE  F020         	movff	efgtoa@u+1,___fldiv@a+1
  4789  0016AA  C0CF  F021         	movff	efgtoa@u+2,___fldiv@a+2
  4790  0016AE  C0D0  F022         	movff	efgtoa@u+3,___fldiv@a+3
  4791  0016B2  EC38  F017         	call	___fldiv	;wreg free
  4792  0016B6  C01B  F034         	movff	?___fldiv,floorf@x
  4793  0016BA  C01C  F035         	movff	?___fldiv+1,floorf@x+1
  4794  0016BE  C01D  F036         	movff	?___fldiv+2,floorf@x+2
  4795  0016C2  C01E  F037         	movff	?___fldiv+3,floorf@x+3
  4796  0016C6  EC7C  F018         	call	_floorf	;wreg free
  4797  0016CA  C034  F0BF         	movff	?_floorf,efgtoa@l
  4798  0016CE  C035  F0C0         	movff	?_floorf+1,efgtoa@l+1
  4799  0016D2  C036  F0C1         	movff	?_floorf+2,efgtoa@l+2
  4800  0016D6  C037  F0C2         	movff	?_floorf+3,efgtoa@l+3
  4801                           
  4802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4803  0016DA  C0BF  F040         	movff	efgtoa@l,___fltol@f1
  4804  0016DE  C0C0  F041         	movff	efgtoa@l+1,___fltol@f1+1
  4805  0016E2  C0C1  F042         	movff	efgtoa@l+2,___fltol@f1+2
  4806  0016E6  C0C2  F043         	movff	efgtoa@l+3,___fltol@f1+3
  4807  0016EA  EC0E  F01F         	call	___fltol	;wreg free
  4808  0016EE  C040  F0B1         	movff	?___fltol,efgtoa@d
  4809  0016F2  C041  F0B2         	movff	?___fltol+1,efgtoa@d+1
  4810                           
  4811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4812  0016F6  B858               	btfsc	_flags,4,c
  4813  0016F8  D00D               	goto	l7564
  4814  0016FA  0100               	movlb	0	; () banked
  4815  0016FC  51B1               	movf	efgtoa@d& (0+255),w,b
  4816  0016FE  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4817  001700  A4D8               	btfss	status,2,c
  4818  001702  D008               	goto	l7564
  4819                           
  4820                           ; BSR set to: 0
  4821  001704  0E67               	movlw	103
  4822  001706  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  4823  001708  B4D8               	btfsc	status,2,c
  4824                           
  4825                           ; BSR set to: 0
  4826  00170A  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4827  00170C  D003               	goto	l7564
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4831  00170E  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  4832  001710  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  4833                           
  4834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4835  001712  D03A               	goto	l7592
  4836  001714                     l7564:
  4837                           
  4838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4839  001714  0100               	movlb	0	; () banked
  4840  001716  51AB               	movf	efgtoa@pp& (0+255),w,b
  4841  001718  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4842  00171A  B4D8               	btfsc	status,2,c
  4843                           
  4844                           ; BSR set to: 0
  4845  00171C  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4846  00171E  D022               	goto	l7584
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4850  001720  0E8D               	movlw	low _dbuf
  4851  001722  25CB               	addwf	efgtoa@n& (0+255),w,b
  4852  001724  6ED9               	movwf	fsr2l,c
  4853  001726  0E01               	movlw	high _dbuf
  4854  001728  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4855  00172A  6EDA               	movwf	fsr2h,c
  4856  00172C  0E2E               	movlw	46
  4857  00172E  6EDF               	movwf	indf2,c
  4858                           
  4859                           ; BSR set to: 0
  4860  001730  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  4861  001732  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4865  001734  07B8               	decf	efgtoa@w& (0+255),f,b
  4866  001736  A0D8               	btfss	status,0,c
  4867  001738  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4871  00173A  0E00               	movlw	0
  4872  00173C  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  4873  00173E  0E01               	movlw	1
  4874  001740  6FAB               	movwf	efgtoa@pp& (0+255),b
  4875  001742  D010               	goto	l7584
  4876  001744                     l7576:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4880  001744  0E8D               	movlw	low _dbuf
  4881  001746  25CB               	addwf	efgtoa@n& (0+255),w,b
  4882  001748  6ED9               	movwf	fsr2l,c
  4883  00174A  0E01               	movlw	high _dbuf
  4884  00174C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4885  00174E  6EDA               	movwf	fsr2h,c
  4886  001750  0E30               	movlw	48
  4887  001752  6EDF               	movwf	indf2,c
  4888                           
  4889                           ; BSR set to: 0
  4890  001754  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  4891  001756  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4895  001758  07B8               	decf	efgtoa@w& (0+255),f,b
  4896  00175A  A0D8               	btfss	status,0,c
  4897  00175C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4901  00175E  07A9               	decf	efgtoa@t& (0+255),f,b
  4902  001760  A0D8               	btfss	status,0,c
  4903  001762  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  4904  001764                     l7584:
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4908  001764  51A9               	movf	efgtoa@t& (0+255),w,b
  4909  001766  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4910  001768  A4D8               	btfss	status,2,c
  4911  00176A  D7EC               	goto	l7576
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4915  00176C  0E8D               	movlw	low _dbuf
  4916  00176E  25CB               	addwf	efgtoa@n& (0+255),w,b
  4917  001770  6ED9               	movwf	fsr2l,c
  4918  001772  0E01               	movlw	high _dbuf
  4919  001774  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4920  001776  6EDA               	movwf	fsr2h,c
  4921  001778  51B1               	movf	efgtoa@d& (0+255),w,b
  4922  00177A  0F30               	addlw	48
  4923  00177C  6EDF               	movwf	indf2,c
  4924                           
  4925                           ; BSR set to: 0
  4926  00177E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  4927  001780  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4931  001782  07B8               	decf	efgtoa@w& (0+255),f,b
  4932  001784  A0D8               	btfss	status,0,c
  4933  001786  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4934  001788                     l7592:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4938  001788  C0BB  F044         	movff	efgtoa@h,___flsub@b
  4939  00178C  C0BC  F045         	movff	efgtoa@h+1,___flsub@b+1
  4940  001790  C0BD  F046         	movff	efgtoa@h+2,___flsub@b+2
  4941  001794  C0BE  F047         	movff	efgtoa@h+3,___flsub@b+3
  4942  001798  C0CD  F038         	movff	efgtoa@u,___flmul@a
  4943  00179C  C0CE  F039         	movff	efgtoa@u+1,___flmul@a+1
  4944  0017A0  C0CF  F03A         	movff	efgtoa@u+2,___flmul@a+2
  4945  0017A4  C0D0  F03B         	movff	efgtoa@u+3,___flmul@a+3
  4946  0017A8  C0BF  F034         	movff	efgtoa@l,___flmul@b
  4947  0017AC  C0C0  F035         	movff	efgtoa@l+1,___flmul@b+1
  4948  0017B0  C0C1  F036         	movff	efgtoa@l+2,___flmul@b+2
  4949  0017B4  C0C2  F037         	movff	efgtoa@l+3,___flmul@b+3
  4950  0017B8  EC82  F012         	call	___flmul	;wreg free
  4951  0017BC  C034  F048         	movff	?___flmul,___flsub@a
  4952  0017C0  C035  F049         	movff	?___flmul+1,___flsub@a+1
  4953  0017C4  C036  F04A         	movff	?___flmul+2,___flsub@a+2
  4954  0017C8  C037  F04B         	movff	?___flmul+3,___flsub@a+3
  4955  0017CC  ECE8  F023         	call	___flsub	;wreg free
  4956  0017D0  C044  F0BB         	movff	?___flsub,efgtoa@h
  4957  0017D4  C045  F0BC         	movff	?___flsub+1,efgtoa@h+1
  4958  0017D8  C046  F0BD         	movff	?___flsub+2,efgtoa@h+2
  4959  0017DC  C047  F0BE         	movff	?___flsub+3,efgtoa@h+3
  4960                           
  4961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4962  0017E0  C0CD  F01B         	movff	efgtoa@u,___fldiv@b
  4963  0017E4  C0CE  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  4964  0017E8  C0CF  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  4965  0017EC  C0D0  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  4966  0017F0  0E00               	movlw	0
  4967  0017F2  6E1F               	movwf	___fldiv@a,c
  4968  0017F4  0E00               	movlw	0
  4969  0017F6  6E20               	movwf	___fldiv@a+1,c
  4970  0017F8  0E20               	movlw	32
  4971  0017FA  6E21               	movwf	___fldiv@a+2,c
  4972  0017FC  0E41               	movlw	65
  4973  0017FE  6E22               	movwf	___fldiv@a+3,c
  4974  001800  EC38  F017         	call	___fldiv	;wreg free
  4975  001804  C01B  F0CD         	movff	?___fldiv,efgtoa@u
  4976  001808  C01C  F0CE         	movff	?___fldiv+1,efgtoa@u+1
  4977  00180C  C01D  F0CF         	movff	?___fldiv+2,efgtoa@u+2
  4978  001810  C01E  F0D0         	movff	?___fldiv+3,efgtoa@u+3
  4979                           
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4981  001814  0100               	movlb	0	; () banked
  4982  001816  07AF               	decf	efgtoa@ne& (0+255),f,b
  4983  001818  A0D8               	btfss	status,0,c
  4984  00181A  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4988  00181C  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  4989  00181E  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  4990  001820                     l7600:
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4994  001820  51AD               	movf	efgtoa@m& (0+255),w,b
  4995  001822  5DC3               	subwf	efgtoa@i& (0+255),w,b
  4996  001824  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  4997  001826  0A80               	xorlw	128
  4998  001828  6F94               	movwf	??_efgtoa& (0+255),b
  4999  00182A  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  5000  00182C  0A80               	xorlw	128
  5001  00182E  5994               	subwfb	??_efgtoa& (0+255),w,b
  5002  001830  B0D8               	btfsc	status,0,c
  5003  001832  D008               	goto	u8940
  5004                           
  5005                           ; BSR set to: 0
  5006  001834  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5007  001836  D72D               	goto	l7552
  5008  001838  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  5009  00183A  E104               	bnz	u8940
  5010  00183C  0E4B               	movlw	75
  5011  00183E  5DCB               	subwf	efgtoa@n& (0+255),w,b
  5012  001840  A0D8               	btfss	status,0,c
  5013  001842  D727               	goto	l7552
  5014  001844                     u8940:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  5018  001844  51AB               	movf	efgtoa@pp& (0+255),w,b
  5019  001846  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5020  001848  B4D8               	btfsc	status,2,c
  5021                           
  5022                           ; BSR set to: 0
  5023  00184A  A858               	btfss	_flags,4,c
  5024  00184C  D00A               	goto	l7612
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  5028  00184E  0E8D               	movlw	low _dbuf
  5029  001850  25CB               	addwf	efgtoa@n& (0+255),w,b
  5030  001852  6ED9               	movwf	fsr2l,c
  5031  001854  0E01               	movlw	high _dbuf
  5032  001856  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5033  001858  6EDA               	movwf	fsr2h,c
  5034  00185A  0E2E               	movlw	46
  5035  00185C  6EDF               	movwf	indf2,c
  5036                           
  5037                           ; BSR set to: 0
  5038  00185E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  5039  001860  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  5040  001862                     l7612:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  5044  001862  0E8D               	movlw	low _dbuf
  5045  001864  25CB               	addwf	efgtoa@n& (0+255),w,b
  5046  001866  6ED9               	movwf	fsr2l,c
  5047  001868  0E01               	movlw	high _dbuf
  5048  00186A  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5049  00186C  6EDA               	movwf	fsr2h,c
  5050  00186E  0E00               	movlw	0
  5051  001870  6EDF               	movwf	indf2,c
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  5055  001872  0E65               	movlw	101
  5056  001874  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  5057  001876  A4D8               	btfss	status,2,c
  5058  001878  D47E               	goto	l7424
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  5062  00187A  0E00               	movlw	0
  5063  00187C  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  5064  00187E  0E4F               	movlw	79
  5065  001880  6FC3               	movwf	efgtoa@i& (0+255),b
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  5069  001882  0E8D               	movlw	low _dbuf
  5070  001884  25C3               	addwf	efgtoa@i& (0+255),w,b
  5071  001886  6ED9               	movwf	fsr2l,c
  5072  001888  0E01               	movlw	high _dbuf
  5073  00188A  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5074  00188C  6EDA               	movwf	fsr2h,c
  5075  00188E  0E00               	movlw	0
  5076  001890  6EDF               	movwf	indf2,c
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  5080  001892  0E00               	movlw	0
  5081  001894  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  5082  001896  0E00               	movlw	0
  5083  001898  6FB3               	movwf	efgtoa@sign& (0+255),b
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  5087  00189A  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5088  00189C  D008               	goto	l7628
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  5092  00189E  0E00               	movlw	0
  5093  0018A0  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  5094  0018A2  0E01               	movlw	1
  5095  0018A4  6FB3               	movwf	efgtoa@sign& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  5099  0018A6  6DC9               	negf	efgtoa@e& (0+255),b
  5100  0018A8  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  5101  0018AA  B0D8               	btfsc	status,0,c
  5102  0018AC  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  5103  0018AE                     l7628:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  5107  0018AE  0E00               	movlw	0
  5108  0018B0  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  5109  0018B2  0E02               	movlw	2
  5110  0018B4  6FB5               	movwf	efgtoa@p& (0+255),b
  5111                           
  5112                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5113  0018B6  D02B               	goto	l7640
  5114  0018B8                     l7630:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  5118  0018B8  07C3               	decf	efgtoa@i& (0+255),f,b
  5119  0018BA  A0D8               	btfss	status,0,c
  5120  0018BC  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  5124  0018BE  0E8D               	movlw	low _dbuf
  5125  0018C0  25C3               	addwf	efgtoa@i& (0+255),w,b
  5126  0018C2  6ED9               	movwf	fsr2l,c
  5127  0018C4  0E01               	movlw	high _dbuf
  5128  0018C6  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5129  0018C8  6EDA               	movwf	fsr2h,c
  5130  0018CA  C0C9  F01B         	movff	efgtoa@e,___awmod@dividend
  5131  0018CE  C0CA  F01C         	movff	efgtoa@e+1,___awmod@dividend+1
  5132  0018D2  0E00               	movlw	0
  5133  0018D4  6E1E               	movwf	___awmod@divisor+1,c
  5134  0018D6  0E0A               	movlw	10
  5135  0018D8  6E1D               	movwf	___awmod@divisor,c
  5136  0018DA  EC09  F022         	call	___awmod	;wreg free
  5137  0018DE  501B               	movf	?___awmod,w,c
  5138  0018E0  0F30               	addlw	48
  5139  0018E2  6EDF               	movwf	indf2,c
  5140                           
  5141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  5142  0018E4  C0C9  F01B         	movff	efgtoa@e,___awdiv@dividend
  5143  0018E8  C0CA  F01C         	movff	efgtoa@e+1,___awdiv@dividend+1
  5144  0018EC  0E00               	movlw	0
  5145  0018EE  6E1E               	movwf	___awdiv@divisor+1,c
  5146  0018F0  0E0A               	movlw	10
  5147  0018F2  6E1D               	movwf	___awdiv@divisor,c
  5148  0018F4  EC86  F021         	call	___awdiv	;wreg free
  5149  0018F8  C01B  F0C9         	movff	?___awdiv,efgtoa@e
  5150  0018FC  C01C  F0CA         	movff	?___awdiv+1,efgtoa@e+1
  5151                           
  5152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  5153  001900  0100               	movlb	0	; () banked
  5154  001902  07B5               	decf	efgtoa@p& (0+255),f,b
  5155  001904  A0D8               	btfss	status,0,c
  5156  001906  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  5160  001908  07B8               	decf	efgtoa@w& (0+255),f,b
  5161  00190A  A0D8               	btfss	status,0,c
  5162  00190C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  5163  00190E                     l7640:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  5167  00190E  51C9               	movf	efgtoa@e& (0+255),w,b
  5168  001910  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5169  001912  A4D8               	btfss	status,2,c
  5170  001914  D7D1               	goto	l7630
  5171                           
  5172                           ; BSR set to: 0
  5173  001916  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5174  001918  D005               	goto	u9000
  5175  00191A  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  5176  00191C  E1CD               	bnz	l7630
  5177  00191E  05B5               	decf	efgtoa@p& (0+255),w,b
  5178  001920  B0D8               	btfsc	status,0,c
  5179  001922  D7CA               	goto	l7630
  5180  001924                     u9000:
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  5184  001924  07C3               	decf	efgtoa@i& (0+255),f,b
  5185  001926  A0D8               	btfss	status,0,c
  5186  001928  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  5190  00192A  51B3               	movf	efgtoa@sign& (0+255),w,b
  5191  00192C  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5192  00192E  A4D8               	btfss	status,2,c
  5193  001930  D004               	goto	l7650
  5194                           
  5195                           ; BSR set to: 0
  5196  001932  0E00               	movlw	0
  5197  001934  6FA4               	movwf	(_efgtoa$1155+1)& (0+255),b
  5198  001936  0E2B               	movlw	43
  5199  001938  D003               	goto	L5
  5200  00193A                     l7650:
  5201                           
  5202                           ; BSR set to: 0
  5203  00193A  0E00               	movlw	0
  5204  00193C  6FA4               	movwf	(_efgtoa$1155+1)& (0+255),b
  5205  00193E  0E2D               	movlw	45
  5206  001940                     L5:
  5207  001940  6FA3               	movwf	_efgtoa$1155& (0+255),b
  5208                           
  5209                           ; BSR set to: 0
  5210  001942  0E8D               	movlw	low _dbuf
  5211  001944  25C3               	addwf	efgtoa@i& (0+255),w,b
  5212  001946  6ED9               	movwf	fsr2l,c
  5213  001948  0E01               	movlw	high _dbuf
  5214  00194A  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5215  00194C  6EDA               	movwf	fsr2h,c
  5216  00194E  C0A3  FFDF         	movff	_efgtoa$1155,indf2
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  5220  001952  07B8               	decf	efgtoa@w& (0+255),f,b
  5221  001954  A0D8               	btfss	status,0,c
  5222  001956  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5226  001958  07C3               	decf	efgtoa@i& (0+255),f,b
  5227  00195A  A0D8               	btfss	status,0,c
  5228  00195C  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  5229                           
  5230                           ; BSR set to: 0
  5231  00195E  0EBF               	movlw	191
  5232  001960  6F94               	movwf	??_efgtoa& (0+255),b
  5233  001962  0EFF               	movlw	255
  5234  001964  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  5235  001966  5193               	movf	efgtoa@c& (0+255),w,b
  5236  001968  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  5237  00196A  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  5238  00196C  5194               	movf	??_efgtoa& (0+255),w,b
  5239  00196E  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  5240  001970  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  5241  001972  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5242  001974  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  5243  001976  E106               	bnz	u9020
  5244  001978  0E1A               	movlw	26
  5245  00197A  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  5246  00197C  B0D8               	btfsc	status,0,c
  5247  00197E  D002               	goto	u9020
  5248  001980  0E01               	movlw	1
  5249  001982  D001               	goto	u9030
  5250  001984                     u9020:
  5251  001984  0E00               	movlw	0
  5252  001986                     u9030:
  5253  001986  6FA7               	movwf	_efgtoa$1157& (0+255),b
  5254  001988  6BA8               	clrf	(_efgtoa$1157+1)& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257  00198A  51A7               	movf	_efgtoa$1157& (0+255),w,b
  5258  00198C  11A8               	iorwf	(_efgtoa$1157+1)& (0+255),w,b
  5259  00198E  A4D8               	btfss	status,2,c
  5260  001990  D004               	goto	l7666
  5261                           
  5262                           ; BSR set to: 0
  5263  001992  0E00               	movlw	0
  5264  001994  6FA6               	movwf	(_efgtoa$1156+1)& (0+255),b
  5265  001996  0E65               	movlw	101
  5266  001998  D003               	goto	L6
  5267  00199A                     l7666:
  5268                           
  5269                           ; BSR set to: 0
  5270  00199A  0E00               	movlw	0
  5271  00199C  6FA6               	movwf	(_efgtoa$1156+1)& (0+255),b
  5272  00199E  0E45               	movlw	69
  5273  0019A0                     L6:
  5274  0019A0  6FA5               	movwf	_efgtoa$1156& (0+255),b
  5275                           
  5276                           ; BSR set to: 0
  5277  0019A2  0E8D               	movlw	low _dbuf
  5278  0019A4  25C3               	addwf	efgtoa@i& (0+255),w,b
  5279  0019A6  6ED9               	movwf	fsr2l,c
  5280  0019A8  0E01               	movlw	high _dbuf
  5281  0019AA  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5282  0019AC  6EDA               	movwf	fsr2h,c
  5283  0019AE  C0A5  FFDF         	movff	_efgtoa$1156,indf2
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  5287  0019B2  07B8               	decf	efgtoa@w& (0+255),f,b
  5288  0019B4  A0D8               	btfss	status,0,c
  5289  0019B6  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  5293  0019B8  0E8D               	movlw	low _dbuf
  5294  0019BA  25CB               	addwf	efgtoa@n& (0+255),w,b
  5295  0019BC  6E1B               	movwf	strcpy@dest,c
  5296  0019BE  0E01               	movlw	high _dbuf
  5297  0019C0  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5298  0019C2  6E1C               	movwf	strcpy@dest+1,c
  5299  0019C4  0E8D               	movlw	low _dbuf
  5300  0019C6  25C3               	addwf	efgtoa@i& (0+255),w,b
  5301  0019C8  6E1D               	movwf	strcpy@src,c
  5302  0019CA  0E01               	movlw	high _dbuf
  5303  0019CC  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5304  0019CE  6E1E               	movwf	strcpy@src+1,c
  5305  0019D0  ECFC  F022         	call	_strcpy	;wreg free
  5306  0019D4  EFBB  F008         	goto	l7424
  5307  0019D8                     __end_of_efgtoa:
  5308                           	opt callstack 0
  5309                           
  5310 ;; *************** function _tolower *****************
  5311 ;; Defined at:
  5312 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  c               2   32[COMRAM] int 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  2   32[COMRAM] int 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;Total ram usage:        8 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    4
  5333 ;; This function calls:
  5334 ;;		_isupper
  5335 ;; This function is called by:
  5336 ;;		_efgtoa
  5337 ;;		_vfpfcnvrt
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text7
  5342  00473A                     __ptext7:
  5343                           	opt callstack 0
  5344  00473A                     _tolower:
  5345                           	opt callstack 23
  5346                           
  5347                           ;incstack = 0
  5348  00473A  0EBF               	movlw	191
  5349  00473C  6E23               	movwf	??_tolower& (0+255),c
  5350  00473E  0EFF               	movlw	255
  5351  004740  6E24               	movwf	(??_tolower+1)& (0+255),c
  5352  004742  C021  F025         	movff	tolower@c,??_tolower+2
  5353  004746  C022  F026         	movff	tolower@c+1,??_tolower+3
  5354  00474A  5023               	movf	??_tolower,w,c
  5355  00474C  2625               	addwf	??_tolower+2,f,c
  5356  00474E  5024               	movf	??_tolower+1,w,c
  5357  004750  2226               	addwfc	??_tolower+3,f,c
  5358  004752  5026               	movf	??_tolower+3,w,c
  5359  004754  E106               	bnz	u7650
  5360  004756  0E1A               	movlw	26
  5361  004758  5C25               	subwf	??_tolower+2,w,c
  5362  00475A  B0D8               	btfsc	status,0,c
  5363  00475C  D002               	goto	u7650
  5364  00475E  0E01               	movlw	1
  5365  004760  D001               	goto	u7660
  5366  004762                     u7650:
  5367  004762  0E00               	movlw	0
  5368  004764                     u7660:
  5369  004764  6E27               	movwf	_tolower$1770,c
  5370  004766  6A28               	clrf	_tolower$1770+1,c
  5371  004768  5027               	movf	_tolower$1770,w,c
  5372  00476A  1028               	iorwf	_tolower$1770+1,w,c
  5373  00476C  B4D8               	btfsc	status,2,c
  5374  00476E  D006               	goto	l1532
  5375  004770  0E20               	movlw	32
  5376  004772  1021               	iorwf	tolower@c,w,c
  5377  004774  6E21               	movwf	?_tolower,c
  5378  004776  5022               	movf	tolower@c+1,w,c
  5379  004778  6E22               	movwf	?_tolower+1,c
  5380  00477A  0012               	return	
  5381  00477C                     l1532:
  5382  00477C  C021  F021         	movff	tolower@c,?_tolower
  5383  004780  C022  F022         	movff	tolower@c+1,?_tolower+1
  5384  004784  0012               	return		;funcret
  5385  004786                     __end_of_tolower:
  5386                           	opt callstack 0
  5387                           
  5388 ;; *************** function _isupper *****************
  5389 ;; Defined at:
  5390 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  c               2   26[COMRAM] int 
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  2   26[COMRAM] int 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        6 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    3
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_efgtoa
  5415 ;;		_vfpfcnvrt
  5416 ;;		_tolower
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text8
  5421  0048D2                     __ptext8:
  5422                           	opt callstack 0
  5423  0048D2                     _isupper:
  5424                           	opt callstack 23
  5425                           
  5426                           ;incstack = 0
  5427  0048D2  0EBF               	movlw	191
  5428  0048D4  6E1D               	movwf	??_isupper& (0+255),c
  5429  0048D6  0EFF               	movlw	255
  5430  0048D8  6E1E               	movwf	(??_isupper+1)& (0+255),c
  5431  0048DA  C01B  F01F         	movff	isupper@c,??_isupper+2
  5432  0048DE  C01C  F020         	movff	isupper@c+1,??_isupper+3
  5433  0048E2  501D               	movf	??_isupper,w,c
  5434  0048E4  261F               	addwf	??_isupper+2,f,c
  5435  0048E6  501E               	movf	??_isupper+1,w,c
  5436  0048E8  2220               	addwfc	??_isupper+3,f,c
  5437  0048EA  5020               	movf	??_isupper+3,w,c
  5438  0048EC  E106               	bnz	u7110
  5439  0048EE  0E1A               	movlw	26
  5440  0048F0  5C1F               	subwf	??_isupper+2,w,c
  5441  0048F2  B0D8               	btfsc	status,0,c
  5442  0048F4  D002               	goto	u7110
  5443  0048F6  0E01               	movlw	1
  5444  0048F8  D001               	goto	u7120
  5445  0048FA                     u7110:
  5446  0048FA  0E00               	movlw	0
  5447  0048FC                     u7120:
  5448  0048FC  6E1B               	movwf	?_isupper,c
  5449  0048FE  6A1C               	clrf	?_isupper+1,c
  5450  004900  0012               	return		;funcret
  5451  004902                     __end_of_isupper:
  5452                           	opt callstack 0
  5453                           
  5454 ;; *************** function _strcpy *****************
  5455 ;; Defined at:
  5456 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  dest            2   26[COMRAM] PTR unsigned char 
  5459 ;;		 -> dbuf(80), 
  5460 ;;  src             2   28[COMRAM] PTR const unsigned char 
  5461 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  5462 ;;		 -> dbuf(80), 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  d               2   34[COMRAM] PTR unsigned char 
  5465 ;;		 -> dbuf(80), 
  5466 ;;  s               2   32[COMRAM] PTR const unsigned char 
  5467 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  5468 ;;		 -> dbuf(80), 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2   26[COMRAM] PTR unsigned char 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;Total ram usage:       10 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    3
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_efgtoa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text9
  5493  0045F8                     __ptext9:
  5494                           	opt callstack 0
  5495  0045F8                     _strcpy:
  5496                           	opt callstack 23
  5497                           
  5498                           ;incstack = 0
  5499  0045F8  C01D  F021         	movff	strcpy@src,strcpy@s
  5500  0045FC  C01E  F022         	movff	strcpy@src+1,strcpy@s+1
  5501  004600  C01B  F023         	movff	strcpy@dest,strcpy@d
  5502  004604  C01C  F024         	movff	strcpy@dest+1,strcpy@d+1
  5503  004608                     l6860:
  5504  004608  5021               	movf	strcpy@s,w,c
  5505  00460A  6E1F               	movwf	??_strcpy& (0+255),c
  5506  00460C  5022               	movf	strcpy@s+1,w,c
  5507  00460E  6E20               	movwf	(??_strcpy+1)& (0+255),c
  5508  004610  4A21               	infsnz	strcpy@s,f,c
  5509  004612  2A22               	incf	strcpy@s+1,f,c
  5510  004614  C01F  FFF6         	movff	??_strcpy,tblptrl
  5511  004618  C020  FFF7         	movff	??_strcpy+1,tblptrh
  5512  00461C  0E00               	movlw	low (__smallconst shr (0+16))
  5513  00461E  6EF8               	movwf	tblptru,c
  5514  004620  C023  FFD9         	movff	strcpy@d,fsr2l
  5515  004624  C024  FFDA         	movff	strcpy@d+1,fsr2h
  5516  004628  4A23               	infsnz	strcpy@d,f,c
  5517  00462A  2A24               	incf	strcpy@d+1,f,c
  5518  00462C  0E0F               	movlw	(high __ramtop+-1)
  5519  00462E  64F7               	cpfsgt	tblptrh,c
  5520  004630  D003               	bra	u7637
  5521  004632  0008               	tblrd		*
  5522  004634  50F5               	movf	tablat,w,c
  5523  004636  D005               	bra	u7630
  5524  004638                     u7637:
  5525  004638  CFF6 FFE1          	movff	tblptrl,fsr1l
  5526  00463C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5527  004640  50E7               	movf	indf1,w,c
  5528  004642                     u7630:
  5529  004642  6EDF               	movwf	indf2,c
  5530  004644  50DF               	movf	indf2,w,c
  5531  004646  B4D8               	btfsc	status,2,c
  5532  004648  0012               	return	
  5533  00464A  D7DE               	goto	l6860
  5534  00464C                     __end_of_strcpy:
  5535                           	opt callstack 0
  5536                           
  5537 ;; *************** function _floorf *****************
  5538 ;; Defined at:
  5539 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  x               4   51[COMRAM] float 
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;  u               4   67[COMRAM] struct .
  5544 ;;  m               4   61[COMRAM] unsigned long 
  5545 ;;  e               2   65[COMRAM] int 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  4   51[COMRAM] float 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;Total ram usage:       20 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    3
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_efgtoa
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text10
  5570  0030F8                     __ptext10:
  5571                           	opt callstack 0
  5572  0030F8                     _floorf:
  5573                           	opt callstack 23
  5574                           
  5575                           ;incstack = 0
  5576  0030F8  C173  F044         	movff	floorf@F524,floorf@u
  5577  0030FC  C174  F045         	movff	floorf@F524+1,floorf@u+1
  5578  003100  C175  F046         	movff	floorf@F524+2,floorf@u+2
  5579  003104  C176  F047         	movff	floorf@F524+3,floorf@u+3
  5580  003108  C034  F044         	movff	floorf@x,floorf@u
  5581  00310C  C035  F045         	movff	floorf@x+1,floorf@u+1
  5582  003110  C036  F046         	movff	floorf@x+2,floorf@u+2
  5583  003114  C037  F047         	movff	floorf@x+3,floorf@u+3
  5584  003118  0E81               	movlw	129
  5585  00311A  6E38               	movwf	??_floorf& (0+255),c
  5586  00311C  0EFF               	movlw	255
  5587  00311E  6E39               	movwf	(??_floorf+1)& (0+255),c
  5588  003120  C044  F03A         	movff	floorf@u,??_floorf+2
  5589  003124  C045  F03B         	movff	floorf@u+1,??_floorf+3
  5590  003128  C046  F03C         	movff	floorf@u+2,??_floorf+4
  5591  00312C  C047  F03D         	movff	floorf@u+3,??_floorf+5
  5592  003130  0E18               	movlw	24
  5593  003132  D005               	goto	u7680
  5594  003134                     u7685:
  5595  003134  90D8               	bcf	status,0,c
  5596  003136  323D               	rrcf	??_floorf+5,f,c
  5597  003138  323C               	rrcf	??_floorf+4,f,c
  5598  00313A  323B               	rrcf	??_floorf+3,f,c
  5599  00313C  323A               	rrcf	??_floorf+2,f,c
  5600  00313E                     u7680:
  5601  00313E  2EE8               	decfsz	wreg,f,c
  5602  003140  D7F9               	goto	u7685
  5603  003142  503A               	movf	??_floorf+2,w,c
  5604  003144  2438               	addwf	??_floorf,w,c
  5605  003146  6E42               	movwf	floorf@e,c
  5606  003148  0E00               	movlw	0
  5607  00314A  2039               	addwfc	??_floorf+1,w,c
  5608  00314C  6E43               	movwf	floorf@e+1,c
  5609  00314E  BE43               	btfsc	floorf@e+1,7,c
  5610  003150  D00F               	goto	l6878
  5611  003152  5043               	movf	floorf@e+1,w,c
  5612  003154  E104               	bnz	u7690
  5613  003156  0E17               	movlw	23
  5614  003158  5C42               	subwf	floorf@e,w,c
  5615  00315A  A0D8               	btfss	status,0,c
  5616  00315C  D009               	goto	l6878
  5617  00315E                     u7690:
  5618  00315E  C034  F034         	movff	floorf@x,?_floorf
  5619  003162  C035  F035         	movff	floorf@x+1,?_floorf+1
  5620  003166  C036  F036         	movff	floorf@x+2,?_floorf+2
  5621  00316A  C037  F037         	movff	floorf@x+3,?_floorf+3
  5622  00316E  0012               	return	
  5623  003170                     l6878:
  5624  003170  BE43               	btfsc	floorf@e+1,7,c
  5625  003172  D05E               	goto	l6888
  5626  003174  C042  F038         	movff	floorf@e,??_floorf
  5627  003178  0EFF               	movlw	255
  5628  00317A  6E39               	movwf	(??_floorf+1)& (0+255),c
  5629  00317C  0EFF               	movlw	255
  5630  00317E  6E3A               	movwf	(??_floorf+2)& (0+255),c
  5631  003180  0E7F               	movlw	127
  5632  003182  6E3B               	movwf	(??_floorf+3)& (0+255),c
  5633  003184  0E00               	movlw	0
  5634  003186  6E3C               	movwf	(??_floorf+4)& (0+255),c
  5635  003188                     u7715:
  5636  003188  6638               	tstfsz	??_floorf,c
  5637  00318A  D001               	goto	u7716
  5638  00318C  D007               	goto	u7717
  5639  00318E                     u7716:
  5640  00318E  343C               	rlcf	??_floorf+4,w,c
  5641  003190  323C               	rrcf	??_floorf+4,f,c
  5642  003192  323B               	rrcf	??_floorf+3,f,c
  5643  003194  323A               	rrcf	??_floorf+2,f,c
  5644  003196  3239               	rrcf	??_floorf+1,f,c
  5645  003198  2E38               	decfsz	??_floorf,f,c
  5646  00319A  D7F6               	goto	u7715
  5647  00319C                     u7717:
  5648  00319C  C039  F03E         	movff	??_floorf+1,floorf@m
  5649  0031A0  C03A  F03F         	movff	??_floorf+2,floorf@m+1
  5650  0031A4  C03B  F040         	movff	??_floorf+3,floorf@m+2
  5651  0031A8  C03C  F041         	movff	??_floorf+4,floorf@m+3
  5652  0031AC  503E               	movf	floorf@m,w,c
  5653  0031AE  1444               	andwf	floorf@u,w,c
  5654  0031B0  6E38               	movwf	??_floorf& (0+255),c
  5655  0031B2  503F               	movf	floorf@m+1,w,c
  5656  0031B4  1445               	andwf	floorf@u+1,w,c
  5657  0031B6  6E39               	movwf	(??_floorf+1)& (0+255),c
  5658  0031B8  5040               	movf	floorf@m+2,w,c
  5659  0031BA  1446               	andwf	floorf@u+2,w,c
  5660  0031BC  6E3A               	movwf	(??_floorf+2)& (0+255),c
  5661  0031BE  5041               	movf	floorf@m+3,w,c
  5662  0031C0  1447               	andwf	floorf@u+3,w,c
  5663  0031C2  6E3B               	movwf	(??_floorf+3)& (0+255),c
  5664  0031C4  5038               	movf	??_floorf,w,c
  5665  0031C6  1039               	iorwf	??_floorf+1,w,c
  5666  0031C8  103A               	iorwf	??_floorf+2,w,c
  5667  0031CA  103B               	iorwf	??_floorf+3,w,c
  5668  0031CC  B4D8               	btfsc	status,2,c
  5669  0031CE  D7C7               	goto	u7690
  5670  0031D0  C044  F038         	movff	floorf@u,??_floorf
  5671  0031D4  C045  F039         	movff	floorf@u+1,??_floorf+1
  5672  0031D8  C046  F03A         	movff	floorf@u+2,??_floorf+2
  5673  0031DC  C047  F03B         	movff	floorf@u+3,??_floorf+3
  5674  0031E0  0E20               	movlw	32
  5675  0031E2  D005               	goto	u7730
  5676  0031E4                     u7735:
  5677  0031E4  90D8               	bcf	status,0,c
  5678  0031E6  323B               	rrcf	??_floorf+3,f,c
  5679  0031E8  323A               	rrcf	??_floorf+2,f,c
  5680  0031EA  3239               	rrcf	??_floorf+1,f,c
  5681  0031EC  3238               	rrcf	??_floorf,f,c
  5682  0031EE                     u7730:
  5683  0031EE  2EE8               	decfsz	wreg,f,c
  5684  0031F0  D7F9               	goto	u7735
  5685  0031F2  5038               	movf	??_floorf,w,c
  5686  0031F4  1039               	iorwf	??_floorf+1,w,c
  5687  0031F6  103A               	iorwf	??_floorf+2,w,c
  5688  0031F8  103B               	iorwf	??_floorf+3,w,c
  5689  0031FA  B4D8               	btfsc	status,2,c
  5690  0031FC  D008               	goto	l1455
  5691  0031FE  503E               	movf	floorf@m,w,c
  5692  003200  2644               	addwf	floorf@u,f,c
  5693  003202  503F               	movf	floorf@m+1,w,c
  5694  003204  2245               	addwfc	floorf@u+1,f,c
  5695  003206  5040               	movf	floorf@m+2,w,c
  5696  003208  2246               	addwfc	floorf@u+2,f,c
  5697  00320A  5041               	movf	floorf@m+3,w,c
  5698  00320C  2247               	addwfc	floorf@u+3,f,c
  5699  00320E                     l1455:
  5700  00320E  1C3E               	comf	floorf@m,w,c
  5701  003210  6E38               	movwf	??_floorf& (0+255),c
  5702  003212  1C3F               	comf	floorf@m+1,w,c
  5703  003214  6E39               	movwf	(??_floorf+1)& (0+255),c
  5704  003216  1C40               	comf	floorf@m+2,w,c
  5705  003218  6E3A               	movwf	(??_floorf+2)& (0+255),c
  5706  00321A  1C41               	comf	floorf@m+3,w,c
  5707  00321C  6E3B               	movwf	(??_floorf+3)& (0+255),c
  5708  00321E  5038               	movf	??_floorf,w,c
  5709  003220  1644               	andwf	floorf@u,f,c
  5710  003222  5039               	movf	??_floorf+1,w,c
  5711  003224  1645               	andwf	floorf@u+1,f,c
  5712  003226  503A               	movf	??_floorf+2,w,c
  5713  003228  1646               	andwf	floorf@u+2,f,c
  5714  00322A  503B               	movf	??_floorf+3,w,c
  5715  00322C  1647               	andwf	floorf@u+3,f,c
  5716  00322E  D036               	goto	l6896
  5717  003230                     l6888:
  5718  003230  C044  F038         	movff	floorf@u,??_floorf
  5719  003234  C045  F039         	movff	floorf@u+1,??_floorf+1
  5720  003238  C046  F03A         	movff	floorf@u+2,??_floorf+2
  5721  00323C  C047  F03B         	movff	floorf@u+3,??_floorf+3
  5722  003240  0E20               	movlw	32
  5723  003242  D005               	goto	u7750
  5724  003244                     u7755:
  5725  003244  90D8               	bcf	status,0,c
  5726  003246  323B               	rrcf	??_floorf+3,f,c
  5727  003248  323A               	rrcf	??_floorf+2,f,c
  5728  00324A  3239               	rrcf	??_floorf+1,f,c
  5729  00324C  3238               	rrcf	??_floorf,f,c
  5730  00324E                     u7750:
  5731  00324E  2EE8               	decfsz	wreg,f,c
  5732  003250  D7F9               	goto	u7755
  5733  003252  5038               	movf	??_floorf,w,c
  5734  003254  1039               	iorwf	??_floorf+1,w,c
  5735  003256  103A               	iorwf	??_floorf+2,w,c
  5736  003258  103B               	iorwf	??_floorf+3,w,c
  5737  00325A  A4D8               	btfss	status,2,c
  5738  00325C  D008               	goto	l6892
  5739  00325E  0E00               	movlw	0
  5740  003260  6E44               	movwf	floorf@u,c
  5741  003262  0E00               	movlw	0
  5742  003264  6E45               	movwf	floorf@u+1,c
  5743  003266  0E00               	movlw	0
  5744  003268  6E46               	movwf	floorf@u+2,c
  5745  00326A  0E00               	movlw	0
  5746  00326C  D016               	goto	L7
  5747  00326E                     l6892:
  5748  00326E  90D8               	bcf	status,0,c
  5749  003270  3444               	rlcf	floorf@u,w,c
  5750  003272  6E38               	movwf	??_floorf& (0+255),c
  5751  003274  3445               	rlcf	floorf@u+1,w,c
  5752  003276  6E39               	movwf	(??_floorf+1)& (0+255),c
  5753  003278  3446               	rlcf	floorf@u+2,w,c
  5754  00327A  6E3A               	movwf	(??_floorf+2)& (0+255),c
  5755  00327C  3447               	rlcf	floorf@u+3,w,c
  5756  00327E  6E3B               	movwf	(??_floorf+3)& (0+255),c
  5757  003280  5038               	movf	??_floorf,w,c
  5758  003282  1039               	iorwf	??_floorf+1,w,c
  5759  003284  103A               	iorwf	??_floorf+2,w,c
  5760  003286  103B               	iorwf	??_floorf+3,w,c
  5761  003288  B4D8               	btfsc	status,2,c
  5762  00328A  D008               	goto	l6896
  5763  00328C  0E00               	movlw	0
  5764  00328E  6E44               	movwf	floorf@u,c
  5765  003290  0E00               	movlw	0
  5766  003292  6E45               	movwf	floorf@u+1,c
  5767  003294  0E80               	movlw	128
  5768  003296  6E46               	movwf	floorf@u+2,c
  5769  003298  0EBF               	movlw	191
  5770  00329A                     L7:
  5771  00329A  6E47               	movwf	floorf@u+3,c
  5772  00329C                     l6896:
  5773  00329C  C044  F034         	movff	floorf@u,?_floorf
  5774  0032A0  C045  F035         	movff	floorf@u+1,?_floorf+1
  5775  0032A4  C046  F036         	movff	floorf@u+2,?_floorf+2
  5776  0032A8  C047  F037         	movff	floorf@u+3,?_floorf+3
  5777  0032AC  0012               	return		;funcret
  5778  0032AE                     __end_of_floorf:
  5779                           	opt callstack 0
  5780                           
  5781 ;; *************** function ___fpclassifyf *****************
  5782 ;; Defined at:
  5783 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  x               4   26[COMRAM] float 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  u               4   36[COMRAM] struct .
  5788 ;;  e               2   34[COMRAM] int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2   26[COMRAM] int 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;Total ram usage:       14 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    3
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_efgtoa
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text11
  5813  003C84                     __ptext11:
  5814                           	opt callstack 0
  5815  003C84                     ___fpclassifyf:
  5816                           	opt callstack 23
  5817                           
  5818                           ;incstack = 0
  5819  003C84  C177  F025         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5820  003C88  C178  F026         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5821  003C8C  C179  F027         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5822  003C90  C17A  F028         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5823  003C94  C01B  F025         	movff	___fpclassifyf@x,___fpclassifyf@u
  5824  003C98  C01C  F026         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5825  003C9C  C01D  F027         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5826  003CA0  C01E  F028         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5827  003CA4  C025  F01F         	movff	___fpclassifyf@u,??___fpclassifyf
  5828  003CA8  C026  F020         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5829  003CAC  C027  F021         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5830  003CB0  C028  F022         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5831  003CB4  0E18               	movlw	24
  5832  003CB6  D005               	goto	u7560
  5833  003CB8                     u7565:
  5834  003CB8  90D8               	bcf	status,0,c
  5835  003CBA  3222               	rrcf	??___fpclassifyf+3,f,c
  5836  003CBC  3221               	rrcf	??___fpclassifyf+2,f,c
  5837  003CBE  3220               	rrcf	??___fpclassifyf+1,f,c
  5838  003CC0  321F               	rrcf	??___fpclassifyf,f,c
  5839  003CC2                     u7560:
  5840  003CC2  2EE8               	decfsz	wreg,f,c
  5841  003CC4  D7F9               	goto	u7565
  5842  003CC6  501F               	movf	??___fpclassifyf,w,c
  5843  003CC8  6E23               	movwf	___fpclassifyf@e,c
  5844  003CCA  6A24               	clrf	___fpclassifyf@e+1,c
  5845  003CCC  5023               	movf	___fpclassifyf@e,w,c
  5846  003CCE  1024               	iorwf	___fpclassifyf@e+1,w,c
  5847  003CD0  A4D8               	btfss	status,2,c
  5848  003CD2  D019               	goto	l6848
  5849  003CD4  90D8               	bcf	status,0,c
  5850  003CD6  3425               	rlcf	___fpclassifyf@u,w,c
  5851  003CD8  6E1F               	movwf	??___fpclassifyf& (0+255),c
  5852  003CDA  3426               	rlcf	___fpclassifyf@u+1,w,c
  5853  003CDC  6E20               	movwf	(??___fpclassifyf+1)& (0+255),c
  5854  003CDE  3427               	rlcf	___fpclassifyf@u+2,w,c
  5855  003CE0  6E21               	movwf	(??___fpclassifyf+2)& (0+255),c
  5856  003CE2  3428               	rlcf	___fpclassifyf@u+3,w,c
  5857  003CE4  6E22               	movwf	(??___fpclassifyf+3)& (0+255),c
  5858  003CE6  501F               	movf	??___fpclassifyf,w,c
  5859  003CE8  1020               	iorwf	??___fpclassifyf+1,w,c
  5860  003CEA  1021               	iorwf	??___fpclassifyf+2,w,c
  5861  003CEC  1022               	iorwf	??___fpclassifyf+3,w,c
  5862  003CEE  A4D8               	btfss	status,2,c
  5863  003CF0  D005               	goto	l6844
  5864  003CF2  0E00               	movlw	0
  5865  003CF4  6E1C               	movwf	?___fpclassifyf+1,c
  5866  003CF6  0E02               	movlw	2
  5867  003CF8  6E1B               	movwf	?___fpclassifyf,c
  5868  003CFA  0012               	return	
  5869  003CFC                     l6844:
  5870  003CFC  0E00               	movlw	0
  5871  003CFE  6E1C               	movwf	?___fpclassifyf+1,c
  5872  003D00  0E03               	movlw	3
  5873  003D02  6E1B               	movwf	?___fpclassifyf,c
  5874  003D04  0012               	return	
  5875  003D06                     l6848:
  5876  003D06  2823               	incf	___fpclassifyf@e,w,c
  5877  003D08  1024               	iorwf	___fpclassifyf@e+1,w,c
  5878  003D0A  A4D8               	btfss	status,2,c
  5879  003D0C  D01C               	goto	l6854
  5880  003D0E  C025  F01F         	movff	___fpclassifyf@u,??___fpclassifyf
  5881  003D12  C026  F020         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5882  003D16  C027  F021         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5883  003D1A  C028  F022         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5884  003D1E  0E09               	movlw	9
  5885  003D20                     u7605:
  5886  003D20  90D8               	bcf	status,0,c
  5887  003D22  361F               	rlcf	??___fpclassifyf,f,c
  5888  003D24  3620               	rlcf	??___fpclassifyf+1,f,c
  5889  003D26  3621               	rlcf	??___fpclassifyf+2,f,c
  5890  003D28  3622               	rlcf	??___fpclassifyf+3,f,c
  5891  003D2A  2EE8               	decfsz	wreg,f,c
  5892  003D2C  D7F9               	goto	u7605
  5893  003D2E  501F               	movf	??___fpclassifyf,w,c
  5894  003D30  1020               	iorwf	??___fpclassifyf+1,w,c
  5895  003D32  1021               	iorwf	??___fpclassifyf+2,w,c
  5896  003D34  1022               	iorwf	??___fpclassifyf+3,w,c
  5897  003D36  A4D8               	btfss	status,2,c
  5898  003D38  D002               	goto	u7610
  5899  003D3A  0E01               	movlw	1
  5900  003D3C  D001               	goto	u7620
  5901  003D3E                     u7610:
  5902  003D3E  0E00               	movlw	0
  5903  003D40                     u7620:
  5904  003D40  6E1B               	movwf	?___fpclassifyf,c
  5905  003D42  6A1C               	clrf	?___fpclassifyf+1,c
  5906  003D44  0012               	return	
  5907  003D46                     l6854:
  5908  003D46  0E00               	movlw	0
  5909  003D48  6E1C               	movwf	?___fpclassifyf+1,c
  5910  003D4A  0E04               	movlw	4
  5911  003D4C  6E1B               	movwf	?___fpclassifyf,c
  5912  003D4E  0012               	return		;funcret
  5913  003D50                     __end_of___fpclassifyf:
  5914                           	opt callstack 0
  5915                           
  5916 ;; *************** function ___flsub *****************
  5917 ;; Defined at:
  5918 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  b               4   67[COMRAM] int 
  5921 ;;  a               4   71[COMRAM] int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  4   67[COMRAM] int 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:        8 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:    4
  5940 ;; This function calls:
  5941 ;;		___fladd
  5942 ;; This function is called by:
  5943 ;;		_efgtoa
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text12
  5948  0047D0                     __ptext12:
  5949                           	opt callstack 0
  5950  0047D0                     ___flsub:
  5951                           	opt callstack 22
  5952                           
  5953                           ;incstack = 0
  5954  0047D0  0E00               	movlw	0
  5955  0047D2  1A48               	xorwf	___flsub@a,f,c
  5956  0047D4  0E00               	movlw	0
  5957  0047D6  1A49               	xorwf	___flsub@a+1,f,c
  5958  0047D8  0E00               	movlw	0
  5959  0047DA  1A4A               	xorwf	___flsub@a+2,f,c
  5960  0047DC  0E80               	movlw	128
  5961  0047DE  1A4B               	xorwf	___flsub@a+3,f,c
  5962  0047E0  C044  F034         	movff	___flsub@b,___fladd@b
  5963  0047E4  C045  F035         	movff	___flsub@b+1,___fladd@b+1
  5964  0047E8  C046  F036         	movff	___flsub@b+2,___fladd@b+2
  5965  0047EC  C047  F037         	movff	___flsub@b+3,___fladd@b+3
  5966  0047F0  C048  F038         	movff	___flsub@a,___fladd@a
  5967  0047F4  C049  F039         	movff	___flsub@a+1,___fladd@a+1
  5968  0047F8  C04A  F03A         	movff	___flsub@a+2,___fladd@a+2
  5969  0047FC  C04B  F03B         	movff	___flsub@a+3,___fladd@a+3
  5970  004800  EC2C  F014         	call	___fladd	;wreg free
  5971  004804  C034  F044         	movff	?___fladd,?___flsub
  5972  004808  C035  F045         	movff	?___fladd+1,?___flsub+1
  5973  00480C  C036  F046         	movff	?___fladd+2,?___flsub+2
  5974  004810  C037  F047         	movff	?___fladd+3,?___flsub+3
  5975  004814  0012               	return		;funcret
  5976  004816                     __end_of___flsub:
  5977                           	opt callstack 0
  5978                           
  5979 ;; *************** function ___flneg *****************
  5980 ;; Defined at:
  5981 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  f1              4   26[COMRAM] int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  4   26[COMRAM] int 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;Total ram usage:        4 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    3
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_efgtoa
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text13
  6010  004932                     __ptext13:
  6011                           	opt callstack 0
  6012  004932                     ___flneg:
  6013                           	opt callstack 23
  6014                           
  6015                           ;incstack = 0
  6016  004932  501B               	movf	___flneg@f1,w,c
  6017  004934  101C               	iorwf	___flneg@f1+1,w,c
  6018  004936  101D               	iorwf	___flneg@f1+2,w,c
  6019  004938  101E               	iorwf	___flneg@f1+3,w,c
  6020  00493A  B4D8               	btfsc	status,2,c
  6021  00493C  D008               	goto	l7306
  6022  00493E  0E00               	movlw	0
  6023  004940  1A1B               	xorwf	___flneg@f1,f,c
  6024  004942  0E00               	movlw	0
  6025  004944  1A1C               	xorwf	___flneg@f1+1,f,c
  6026  004946  0E00               	movlw	0
  6027  004948  1A1D               	xorwf	___flneg@f1+2,f,c
  6028  00494A  0E80               	movlw	128
  6029  00494C  1A1E               	xorwf	___flneg@f1+3,f,c
  6030  00494E                     l7306:
  6031  00494E  C01B  F01B         	movff	___flneg@f1,?___flneg
  6032  004952  C01C  F01C         	movff	___flneg@f1+1,?___flneg+1
  6033  004956  C01D  F01D         	movff	___flneg@f1+2,?___flneg+2
  6034  00495A  C01E  F01E         	movff	___flneg@f1+3,?___flneg+3
  6035  00495E  0012               	return		;funcret
  6036  004960                     __end_of___flneg:
  6037                           	opt callstack 0
  6038                           
  6039 ;; *************** function ___fleq *****************
  6040 ;; Defined at:
  6041 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  ff1             4   26[COMRAM] int 
  6044 ;;  ff2             4   30[COMRAM] int 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;		None
  6047 ;; Return value:  Size  Location     Type
  6048 ;;		None               void
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6056 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;Total ram usage:       12 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    3
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_efgtoa
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text14
  6071  004282                     __ptext14:
  6072                           	opt callstack 0
  6073  004282                     ___fleq:
  6074                           	opt callstack 23
  6075                           
  6076                           ;incstack = 0
  6077  004282  0E00               	movlw	0
  6078  004284  141B               	andwf	___fleq@ff1,w,c
  6079  004286  6E23               	movwf	??___fleq& (0+255),c
  6080  004288  0E00               	movlw	0
  6081  00428A  141C               	andwf	___fleq@ff1+1,w,c
  6082  00428C  6E24               	movwf	(??___fleq+1)& (0+255),c
  6083  00428E  0E80               	movlw	128
  6084  004290  141D               	andwf	___fleq@ff1+2,w,c
  6085  004292  6E25               	movwf	(??___fleq+2)& (0+255),c
  6086  004294  0E7F               	movlw	127
  6087  004296  141E               	andwf	___fleq@ff1+3,w,c
  6088  004298  6E26               	movwf	(??___fleq+3)& (0+255),c
  6089  00429A  5023               	movf	??___fleq,w,c
  6090  00429C  1024               	iorwf	??___fleq+1,w,c
  6091  00429E  1025               	iorwf	??___fleq+2,w,c
  6092  0042A0  1026               	iorwf	??___fleq+3,w,c
  6093  0042A2  A4D8               	btfss	status,2,c
  6094  0042A4  D008               	goto	l7268
  6095  0042A6  0E00               	movlw	0
  6096  0042A8  6E1B               	movwf	___fleq@ff1,c
  6097  0042AA  0E00               	movlw	0
  6098  0042AC  6E1C               	movwf	___fleq@ff1+1,c
  6099  0042AE  0E00               	movlw	0
  6100  0042B0  6E1D               	movwf	___fleq@ff1+2,c
  6101  0042B2  0E00               	movlw	0
  6102  0042B4  6E1E               	movwf	___fleq@ff1+3,c
  6103  0042B6                     l7268:
  6104  0042B6  0E00               	movlw	0
  6105  0042B8  141F               	andwf	___fleq@ff2,w,c
  6106  0042BA  6E23               	movwf	??___fleq& (0+255),c
  6107  0042BC  0E00               	movlw	0
  6108  0042BE  1420               	andwf	___fleq@ff2+1,w,c
  6109  0042C0  6E24               	movwf	(??___fleq+1)& (0+255),c
  6110  0042C2  0E80               	movlw	128
  6111  0042C4  1421               	andwf	___fleq@ff2+2,w,c
  6112  0042C6  6E25               	movwf	(??___fleq+2)& (0+255),c
  6113  0042C8  0E7F               	movlw	127
  6114  0042CA  1422               	andwf	___fleq@ff2+3,w,c
  6115  0042CC  6E26               	movwf	(??___fleq+3)& (0+255),c
  6116  0042CE  5023               	movf	??___fleq,w,c
  6117  0042D0  1024               	iorwf	??___fleq+1,w,c
  6118  0042D2  1025               	iorwf	??___fleq+2,w,c
  6119  0042D4  1026               	iorwf	??___fleq+3,w,c
  6120  0042D6  A4D8               	btfss	status,2,c
  6121  0042D8  D008               	goto	l7272
  6122  0042DA  0E00               	movlw	0
  6123  0042DC  6E1F               	movwf	___fleq@ff2,c
  6124  0042DE  0E00               	movlw	0
  6125  0042E0  6E20               	movwf	___fleq@ff2+1,c
  6126  0042E2  0E00               	movlw	0
  6127  0042E4  6E21               	movwf	___fleq@ff2+2,c
  6128  0042E6  0E00               	movlw	0
  6129  0042E8  6E22               	movwf	___fleq@ff2+3,c
  6130  0042EA                     l7272:
  6131  0042EA  501F               	movf	___fleq@ff2,w,c
  6132  0042EC  181B               	xorwf	___fleq@ff1,w,c
  6133  0042EE  E10A               	bnz	u8360
  6134  0042F0  5020               	movf	___fleq@ff2+1,w,c
  6135  0042F2  181C               	xorwf	___fleq@ff1+1,w,c
  6136  0042F4  E107               	bnz	u8360
  6137  0042F6  5021               	movf	___fleq@ff2+2,w,c
  6138  0042F8  181D               	xorwf	___fleq@ff1+2,w,c
  6139  0042FA  E104               	bnz	u8360
  6140  0042FC  5022               	movf	___fleq@ff2+3,w,c
  6141  0042FE  181E               	xorwf	___fleq@ff1+3,w,c
  6142  004300  B4D8               	btfsc	status,2,c
  6143  004302  D002               	goto	l7276
  6144  004304                     u8360:
  6145  004304  90D8               	bcf	status,0,c
  6146  004306  0012               	return	
  6147  004308                     l7276:
  6148  004308  80D8               	bsf	status,0,c
  6149  00430A  0012               	return		;funcret
  6150  00430C                     __end_of___fleq:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function ___awmod *****************
  6154 ;; Defined at:
  6155 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  dividend        2   26[COMRAM] int 
  6158 ;;  divisor         2   28[COMRAM] int 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  sign            1   31[COMRAM] unsigned char 
  6161 ;;  counter         1   30[COMRAM] unsigned char 
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  2   26[COMRAM] int 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;Total ram usage:        6 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    3
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_efgtoa
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text15
  6186  004412                     __ptext15:
  6187                           	opt callstack 0
  6188  004412                     ___awmod:
  6189                           	opt callstack 23
  6190                           
  6191                           ;incstack = 0
  6192  004412  0E00               	movlw	0
  6193  004414  6E20               	movwf	___awmod@sign,c
  6194  004416  AE1C               	btfss	___awmod@dividend+1,7,c
  6195  004418  D006               	goto	l7236
  6196  00441A  6C1B               	negf	___awmod@dividend,c
  6197  00441C  1E1C               	comf	___awmod@dividend+1,f,c
  6198  00441E  B0D8               	btfsc	status,0,c
  6199  004420  2A1C               	incf	___awmod@dividend+1,f,c
  6200  004422  0E01               	movlw	1
  6201  004424  6E20               	movwf	___awmod@sign,c
  6202  004426                     l7236:
  6203  004426  AE1E               	btfss	___awmod@divisor+1,7,c
  6204  004428  D004               	goto	l7240
  6205  00442A  6C1D               	negf	___awmod@divisor,c
  6206  00442C  1E1E               	comf	___awmod@divisor+1,f,c
  6207  00442E  B0D8               	btfsc	status,0,c
  6208  004430  2A1E               	incf	___awmod@divisor+1,f,c
  6209  004432                     l7240:
  6210  004432  501D               	movf	___awmod@divisor,w,c
  6211  004434  101E               	iorwf	___awmod@divisor+1,w,c
  6212  004436  B4D8               	btfsc	status,2,c
  6213  004438  D018               	goto	l7256
  6214  00443A  0E01               	movlw	1
  6215  00443C  6E1F               	movwf	___awmod@counter,c
  6216  00443E  D004               	goto	l7246
  6217  004440                     l7244:
  6218  004440  90D8               	bcf	status,0,c
  6219  004442  361D               	rlcf	___awmod@divisor,f,c
  6220  004444  361E               	rlcf	___awmod@divisor+1,f,c
  6221  004446  2A1F               	incf	___awmod@counter,f,c
  6222  004448                     l7246:
  6223  004448  AE1E               	btfss	___awmod@divisor+1,7,c
  6224  00444A  D7FA               	goto	l7244
  6225  00444C                     u8310:
  6226  00444C  501D               	movf	___awmod@divisor,w,c
  6227  00444E  5C1B               	subwf	___awmod@dividend,w,c
  6228  004450  501E               	movf	___awmod@divisor+1,w,c
  6229  004452  581C               	subwfb	___awmod@dividend+1,w,c
  6230  004454  A0D8               	btfss	status,0,c
  6231  004456  D004               	goto	l7252
  6232  004458  501D               	movf	___awmod@divisor,w,c
  6233  00445A  5E1B               	subwf	___awmod@dividend,f,c
  6234  00445C  501E               	movf	___awmod@divisor+1,w,c
  6235  00445E  5A1C               	subwfb	___awmod@dividend+1,f,c
  6236  004460                     l7252:
  6237  004460  90D8               	bcf	status,0,c
  6238  004462  321E               	rrcf	___awmod@divisor+1,f,c
  6239  004464  321D               	rrcf	___awmod@divisor,f,c
  6240  004466  2E1F               	decfsz	___awmod@counter,f,c
  6241  004468  D7F1               	goto	u8310
  6242  00446A                     l7256:
  6243  00446A  5020               	movf	___awmod@sign,w,c
  6244  00446C  B4D8               	btfsc	status,2,c
  6245  00446E  D004               	goto	l7260
  6246  004470  6C1B               	negf	___awmod@dividend,c
  6247  004472  1E1C               	comf	___awmod@dividend+1,f,c
  6248  004474  B0D8               	btfsc	status,0,c
  6249  004476  2A1C               	incf	___awmod@dividend+1,f,c
  6250  004478                     l7260:
  6251  004478  C01B  F01B         	movff	___awmod@dividend,?___awmod
  6252  00447C  C01C  F01C         	movff	___awmod@dividend+1,?___awmod+1
  6253  004480  0012               	return		;funcret
  6254  004482                     __end_of___awmod:
  6255                           	opt callstack 0
  6256                           
  6257 ;; *************** function ___awdiv *****************
  6258 ;; Defined at:
  6259 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  dividend        2   26[COMRAM] int 
  6262 ;;  divisor         2   28[COMRAM] int 
  6263 ;; Auto vars:     Size  Location     Type
  6264 ;;  quotient        2   32[COMRAM] int 
  6265 ;;  sign            1   31[COMRAM] unsigned char 
  6266 ;;  counter         1   30[COMRAM] unsigned char 
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  2   26[COMRAM] int 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;Total ram usage:        8 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    3
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_efgtoa
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text16
  6291  00430C                     __ptext16:
  6292                           	opt callstack 0
  6293  00430C                     ___awdiv:
  6294                           	opt callstack 23
  6295                           
  6296                           ;incstack = 0
  6297  00430C  0E00               	movlw	0
  6298  00430E  6E20               	movwf	___awdiv@sign,c
  6299  004310  AE1E               	btfss	___awdiv@divisor+1,7,c
  6300  004312  D006               	goto	l7192
  6301  004314  6C1D               	negf	___awdiv@divisor,c
  6302  004316  1E1E               	comf	___awdiv@divisor+1,f,c
  6303  004318  B0D8               	btfsc	status,0,c
  6304  00431A  2A1E               	incf	___awdiv@divisor+1,f,c
  6305  00431C  0E01               	movlw	1
  6306  00431E  6E20               	movwf	___awdiv@sign,c
  6307  004320                     l7192:
  6308  004320  AE1C               	btfss	___awdiv@dividend+1,7,c
  6309  004322  D006               	goto	l7198
  6310  004324  6C1B               	negf	___awdiv@dividend,c
  6311  004326  1E1C               	comf	___awdiv@dividend+1,f,c
  6312  004328  B0D8               	btfsc	status,0,c
  6313  00432A  2A1C               	incf	___awdiv@dividend+1,f,c
  6314  00432C  0E01               	movlw	1
  6315  00432E  1A20               	xorwf	___awdiv@sign,f,c
  6316  004330                     l7198:
  6317  004330  0E00               	movlw	0
  6318  004332  6E22               	movwf	___awdiv@quotient+1,c
  6319  004334  0E00               	movlw	0
  6320  004336  6E21               	movwf	___awdiv@quotient,c
  6321  004338  501D               	movf	___awdiv@divisor,w,c
  6322  00433A  101E               	iorwf	___awdiv@divisor+1,w,c
  6323  00433C  B4D8               	btfsc	status,2,c
  6324  00433E  D01C               	goto	l7220
  6325  004340  0E01               	movlw	1
  6326  004342  6E1F               	movwf	___awdiv@counter,c
  6327  004344  D004               	goto	l7206
  6328  004346                     l7204:
  6329  004346  90D8               	bcf	status,0,c
  6330  004348  361D               	rlcf	___awdiv@divisor,f,c
  6331  00434A  361E               	rlcf	___awdiv@divisor+1,f,c
  6332  00434C  2A1F               	incf	___awdiv@counter,f,c
  6333  00434E                     l7206:
  6334  00434E  AE1E               	btfss	___awdiv@divisor+1,7,c
  6335  004350  D7FA               	goto	l7204
  6336  004352                     u8250:
  6337  004352  90D8               	bcf	status,0,c
  6338  004354  3621               	rlcf	___awdiv@quotient,f,c
  6339  004356  3622               	rlcf	___awdiv@quotient+1,f,c
  6340  004358  501D               	movf	___awdiv@divisor,w,c
  6341  00435A  5C1B               	subwf	___awdiv@dividend,w,c
  6342  00435C  501E               	movf	___awdiv@divisor+1,w,c
  6343  00435E  581C               	subwfb	___awdiv@dividend+1,w,c
  6344  004360  A0D8               	btfss	status,0,c
  6345  004362  D005               	goto	l7216
  6346  004364  501D               	movf	___awdiv@divisor,w,c
  6347  004366  5E1B               	subwf	___awdiv@dividend,f,c
  6348  004368  501E               	movf	___awdiv@divisor+1,w,c
  6349  00436A  5A1C               	subwfb	___awdiv@dividend+1,f,c
  6350  00436C  8021               	bsf	___awdiv@quotient,0,c
  6351  00436E                     l7216:
  6352  00436E  90D8               	bcf	status,0,c
  6353  004370  321E               	rrcf	___awdiv@divisor+1,f,c
  6354  004372  321D               	rrcf	___awdiv@divisor,f,c
  6355  004374  2E1F               	decfsz	___awdiv@counter,f,c
  6356  004376  D7ED               	goto	u8250
  6357  004378                     l7220:
  6358  004378  5020               	movf	___awdiv@sign,w,c
  6359  00437A  B4D8               	btfsc	status,2,c
  6360  00437C  D004               	goto	l7224
  6361  00437E  6C21               	negf	___awdiv@quotient,c
  6362  004380  1E22               	comf	___awdiv@quotient+1,f,c
  6363  004382  B0D8               	btfsc	status,0,c
  6364  004384  2A22               	incf	___awdiv@quotient+1,f,c
  6365  004386                     l7224:
  6366  004386  C021  F01B         	movff	___awdiv@quotient,?___awdiv
  6367  00438A  C022  F01C         	movff	___awdiv@quotient+1,?___awdiv+1
  6368  00438E  0012               	return		;funcret
  6369  004390                     __end_of___awdiv:
  6370                           	opt callstack 0
  6371                           
  6372 ;; *************** function _ctoa *****************
  6373 ;; Defined at:
  6374 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  6377 ;;		 -> sprintf@f(6), 
  6378 ;;  c               1   59[COMRAM] unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  w               2   60[COMRAM] int 
  6381 ;;  l               2    0        int 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  2   57[COMRAM] int 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6391 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;Total ram usage:        5 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:   10
  6398 ;; This function calls:
  6399 ;;		_pad
  6400 ;; This function is called by:
  6401 ;;		_vfpfcnvrt
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text17
  6406  00469E                     __ptext17:
  6407                           	opt callstack 0
  6408  00469E                     _ctoa:
  6409                           	opt callstack 17
  6410                           
  6411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  6412                           
  6413                           ;incstack = 0
  6414  00469E  5054               	movf	_width,w,c
  6415  0046A0  1055               	iorwf	_width+1,w,c
  6416  0046A2  A4D8               	btfss	status,2,c
  6417  0046A4  D005               	goto	l7370
  6418  0046A6  C054  F03D         	movff	_width,ctoa@w
  6419  0046AA  C055  F03E         	movff	_width+1,ctoa@w+1
  6420  0046AE  D006               	goto	l7372
  6421  0046B0                     l7370:
  6422  0046B0  0EFF               	movlw	255
  6423  0046B2  2454               	addwf	_width,w,c
  6424  0046B4  6E3D               	movwf	ctoa@w,c
  6425  0046B6  0EFF               	movlw	255
  6426  0046B8  2055               	addwfc	_width+1,w,c
  6427  0046BA  6E3E               	movwf	ctoa@w+1,c
  6428  0046BC                     l7372:
  6429                           
  6430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  6431  0046BC  C03C  F18D         	movff	ctoa@c,_dbuf
  6432                           
  6433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  6434  0046C0  0E00               	movlw	0
  6435  0046C2  0101               	movlb	1	; () banked
  6436  0046C4  6F8E               	movwf	(_dbuf+1)& (0+255),b
  6437                           
  6438                           ; BSR set to: 1
  6439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  6440  0046C6  C03A  F02F         	movff	ctoa@fp,pad@fp
  6441  0046CA  C03B  F030         	movff	ctoa@fp+1,pad@fp+1
  6442  0046CE  0E8D               	movlw	low _dbuf
  6443  0046D0  6E31               	movwf	pad@buf,c
  6444  0046D2  0E01               	movlw	high _dbuf
  6445  0046D4  6E32               	movwf	pad@buf+1,c
  6446  0046D6  C03D  F033         	movff	ctoa@w,pad@p
  6447  0046DA  C03E  F034         	movff	ctoa@w+1,pad@p+1
  6448  0046DE  ECAF  F020         	call	_pad	;wreg free
  6449  0046E2  C02F  F03A         	movff	?_pad,?_ctoa
  6450  0046E6  C030  F03B         	movff	?_pad+1,?_ctoa+1
  6451  0046EA  0012               	return		;funcret
  6452  0046EC                     __end_of_ctoa:
  6453                           	opt callstack 0
  6454                           
  6455 ;; *************** function _pad *****************
  6456 ;; Defined at:
  6457 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  6460 ;;		 -> sprintf@f(6), 
  6461 ;;  buf             2   48[COMRAM] PTR unsigned char 
  6462 ;;		 -> dbuf(80), 
  6463 ;;  p               2   50[COMRAM] int 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  w               2   55[COMRAM] int 
  6466 ;;  i               2   53[COMRAM] int 
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  2   46[COMRAM] int 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6476 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;Total ram usage:       11 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:    9
  6483 ;; This function calls:
  6484 ;;		_fputc
  6485 ;;		_fputs
  6486 ;;		_strlen
  6487 ;; This function is called by:
  6488 ;;		_ctoa
  6489 ;;		_efgtoa
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text18
  6494  00415E                     __ptext18:
  6495                           	opt callstack 0
  6496  00415E                     _pad:
  6497                           	opt callstack 17
  6498                           
  6499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  6500                           
  6501                           ;incstack = 0
  6502  00415E  A058               	btfss	_flags,0,c
  6503  004160  D00A               	goto	l6818
  6504                           
  6505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  6506  004162  C031  F028         	movff	pad@buf,fputs@s
  6507  004166  C032  F029         	movff	pad@buf+1,fputs@s+1
  6508  00416A  C02F  F02A         	movff	pad@fp,fputs@fp
  6509  00416E  C030  F02B         	movff	pad@fp+1,fputs@fp+1
  6510  004172  EC4D  F024         	call	_fputs	;wreg free
  6511  004176                     l6818:
  6512                           
  6513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  6514  004176  BE34               	btfsc	pad@p+1,7,c
  6515  004178  D005               	goto	l6822
  6516  00417A  C033  F038         	movff	pad@p,pad@w
  6517  00417E  C034  F039         	movff	pad@p+1,pad@w+1
  6518  004182  D004               	goto	l549
  6519  004184                     l6822:
  6520  004184  0E00               	movlw	0
  6521  004186  6E39               	movwf	pad@w+1,c
  6522  004188  0E00               	movlw	0
  6523  00418A  6E38               	movwf	pad@w,c
  6524  00418C                     l549:
  6525                           
  6526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  6527  00418C  0E00               	movlw	0
  6528  00418E  6E37               	movwf	pad@i+1,c
  6529  004190  0E00               	movlw	0
  6530  004192  6E36               	movwf	pad@i,c
  6531                           
  6532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6533  004194  D00C               	goto	l6828
  6534  004196                     l6824:
  6535                           
  6536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  6537  004196  0E00               	movlw	0
  6538  004198  6E20               	movwf	fputc@c+1,c
  6539  00419A  0E20               	movlw	32
  6540  00419C  6E1F               	movwf	fputc@c,c
  6541  00419E  C02F  F021         	movff	pad@fp,fputc@fp
  6542  0041A2  C030  F022         	movff	pad@fp+1,fputc@fp+1
  6543  0041A6  EC11  F020         	call	_fputc	;wreg free
  6544                           
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  6546  0041AA  4A36               	infsnz	pad@i,f,c
  6547  0041AC  2A37               	incf	pad@i+1,f,c
  6548  0041AE                     l6828:
  6549                           
  6550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  6551  0041AE  5038               	movf	pad@w,w,c
  6552  0041B0  5C36               	subwf	pad@i,w,c
  6553  0041B2  5037               	movf	pad@i+1,w,c
  6554  0041B4  0A80               	xorlw	128
  6555  0041B6  6E35               	movwf	??_pad& (0+255),c
  6556  0041B8  5039               	movf	pad@w+1,w,c
  6557  0041BA  0A80               	xorlw	128
  6558  0041BC  5835               	subwfb	??_pad& (0+255),w,c
  6559  0041BE  A0D8               	btfss	status,0,c
  6560  0041C0  D7EA               	goto	l6824
  6561                           
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  6563  0041C2  B058               	btfsc	_flags,0,c
  6564  0041C4  D00A               	goto	l6832
  6565                           
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  6567  0041C6  C031  F028         	movff	pad@buf,fputs@s
  6568  0041CA  C032  F029         	movff	pad@buf+1,fputs@s+1
  6569  0041CE  C02F  F02A         	movff	pad@fp,fputs@fp
  6570  0041D2  C030  F02B         	movff	pad@fp+1,fputs@fp+1
  6571  0041D6  EC4D  F024         	call	_fputs	;wreg free
  6572  0041DA                     l6832:
  6573                           
  6574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  6575  0041DA  C031  F01B         	movff	pad@buf,strlen@s
  6576  0041DE  C032  F01C         	movff	pad@buf+1,strlen@s+1
  6577  0041E2  ECB0  F024         	call	_strlen	;wreg free
  6578  0041E6  5038               	movf	pad@w,w,c
  6579  0041E8  241B               	addwf	?_strlen,w,c
  6580  0041EA  6E2F               	movwf	?_pad,c
  6581  0041EC  5039               	movf	pad@w+1,w,c
  6582  0041EE  201C               	addwfc	?_strlen+1,w,c
  6583  0041F0  6E30               	movwf	?_pad+1,c
  6584  0041F2  0012               	return		;funcret
  6585  0041F4                     __end_of_pad:
  6586                           	opt callstack 0
  6587                           
  6588 ;; *************** function _strlen *****************
  6589 ;; Defined at:
  6590 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;  s               2   26[COMRAM] PTR const unsigned char 
  6593 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), main@command(25), 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  a               2   28[COMRAM] PTR const unsigned char 
  6596 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(80), main@command(25), 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  2   26[COMRAM] unsigned int 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;Total ram usage:        4 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    3
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_pad
  6617 ;;		_stoa
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text19
  6622  004960                     __ptext19:
  6623                           	opt callstack 0
  6624  004960                     _strlen:
  6625                           	opt callstack 23
  6626                           
  6627                           ;incstack = 0
  6628  004960  C01B  F01D         	movff	strlen@s,strlen@a
  6629  004964  C01C  F01E         	movff	strlen@s+1,strlen@a+1
  6630  004968  D002               	goto	l6602
  6631  00496A                     l6600:
  6632  00496A  4A1B               	infsnz	strlen@s,f,c
  6633  00496C  2A1C               	incf	strlen@s+1,f,c
  6634  00496E                     l6602:
  6635  00496E  C01B  FFD9         	movff	strlen@s,fsr2l
  6636  004972  C01C  FFDA         	movff	strlen@s+1,fsr2h
  6637  004976  50DF               	movf	indf2,w,c
  6638  004978  A4D8               	btfss	status,2,c
  6639  00497A  D7F7               	goto	l6600
  6640  00497C  501D               	movf	strlen@a,w,c
  6641  00497E  5C1B               	subwf	strlen@s,w,c
  6642  004980  6E1B               	movwf	?_strlen,c
  6643  004982  501E               	movf	strlen@a+1,w,c
  6644  004984  581C               	subwfb	strlen@s+1,w,c
  6645  004986  6E1C               	movwf	?_strlen+1,c
  6646  004988  0012               	return		;funcret
  6647  00498A                     __end_of_strlen:
  6648                           	opt callstack 0
  6649                           
  6650 ;; *************** function _fputs *****************
  6651 ;; Defined at:
  6652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  s               2   39[COMRAM] PTR const unsigned char 
  6655 ;;		 -> dbuf(80), 
  6656 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  6657 ;;		 -> sprintf@f(6), 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  i               2   44[COMRAM] int 
  6660 ;;  c               1   43[COMRAM] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  2   39[COMRAM] int 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;Total ram usage:        7 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    8
  6677 ;; This function calls:
  6678 ;;		_fputc
  6679 ;; This function is called by:
  6680 ;;		_pad
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text20
  6685  00489A                     __ptext20:
  6686                           	opt callstack 0
  6687  00489A                     _fputs:
  6688                           	opt callstack 17
  6689                           
  6690                           ;incstack = 0
  6691  00489A  0E00               	movlw	0
  6692  00489C  6E2E               	movwf	fputs@i+1,c
  6693  00489E  0E00               	movlw	0
  6694  0048A0  6E2D               	movwf	fputs@i,c
  6695  0048A2  D00B               	goto	l6596
  6696  0048A4                     l6592:
  6697  0048A4  C02C  F01F         	movff	fputs@c,fputc@c
  6698  0048A8  6A20               	clrf	fputc@c+1,c
  6699  0048AA  C02A  F021         	movff	fputs@fp,fputc@fp
  6700  0048AE  C02B  F022         	movff	fputs@fp+1,fputc@fp+1
  6701  0048B2  EC11  F020         	call	_fputc	;wreg free
  6702  0048B6  4A2D               	infsnz	fputs@i,f,c
  6703  0048B8  2A2E               	incf	fputs@i+1,f,c
  6704  0048BA                     l6596:
  6705  0048BA  502D               	movf	fputs@i,w,c
  6706  0048BC  2428               	addwf	fputs@s,w,c
  6707  0048BE  6ED9               	movwf	fsr2l,c
  6708  0048C0  502E               	movf	fputs@i+1,w,c
  6709  0048C2  2029               	addwfc	fputs@s+1,w,c
  6710  0048C4  6EDA               	movwf	fsr2h,c
  6711  0048C6  50DF               	movf	indf2,w,c
  6712  0048C8  6E2C               	movwf	fputs@c,c
  6713  0048CA  502C               	movf	fputs@c,w,c
  6714  0048CC  B4D8               	btfsc	status,2,c
  6715  0048CE  0012               	return	
  6716  0048D0  D7E9               	goto	l6592
  6717  0048D2                     __end_of_fputs:
  6718                           	opt callstack 0
  6719                           
  6720 ;; *************** function _fputc *****************
  6721 ;; Defined at:
  6722 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  c               2   30[COMRAM] int 
  6725 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  6726 ;;		 -> sprintf@f(6), 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;		None
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2   30[COMRAM] int 
  6731 ;; Registers used:
  6732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;Total ram usage:        9 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    7
  6745 ;; This function calls:
  6746 ;;		_putch
  6747 ;; This function is called by:
  6748 ;;		_pad
  6749 ;;		_stoa
  6750 ;;		_vfpfcnvrt
  6751 ;;		_fputs
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text21
  6756  004022                     __ptext21:
  6757                           	opt callstack 0
  6758  004022                     _fputc:
  6759                           	opt callstack 19
  6760                           
  6761                           ;incstack = 0
  6762  004022  5021               	movf	fputc@fp,w,c
  6763  004024  1022               	iorwf	fputc@fp+1,w,c
  6764  004026  B4D8               	btfsc	status,2,c
  6765  004028  D004               	goto	u7060
  6766  00402A  5021               	movf	fputc@fp,w,c
  6767  00402C  1022               	iorwf	fputc@fp+1,w,c
  6768  00402E  A4D8               	btfss	status,2,c
  6769  004030  D004               	goto	l6582
  6770  004032                     u7060:
  6771  004032  501F               	movf	fputc@c,w,c
  6772  004034  EC4D  F025         	call	_putch
  6773  004038  0012               	return	
  6774  00403A                     l6582:
  6775  00403A  EE20 F004          	lfsr	2,4
  6776  00403E  5021               	movf	fputc@fp,w,c
  6777  004040  26D9               	addwf	fsr2l,f,c
  6778  004042  5022               	movf	fputc@fp+1,w,c
  6779  004044  22DA               	addwfc	fsr2h,f,c
  6780  004046  50DE               	movf	postinc2,w,c
  6781  004048  10DE               	iorwf	postinc2,w,c
  6782  00404A  B4D8               	btfsc	status,2,c
  6783  00404C  D016               	goto	u7080
  6784  00404E  EE20 F004          	lfsr	2,4
  6785  004052  5021               	movf	fputc@fp,w,c
  6786  004054  26D9               	addwf	fsr2l,f,c
  6787  004056  5022               	movf	fputc@fp+1,w,c
  6788  004058  22DA               	addwfc	fsr2h,f,c
  6789  00405A  EE10 F002          	lfsr	1,2
  6790  00405E  5021               	movf	fputc@fp,w,c
  6791  004060  26E1               	addwf	fsr1l,f,c
  6792  004062  5022               	movf	fputc@fp+1,w,c
  6793  004064  22E2               	addwfc	fsr1h,f,c
  6794  004066  50DE               	movf	postinc2,w,c
  6795  004068  5CE6               	subwf	postinc1,w,c
  6796  00406A  50E6               	movf	postinc1,w,c
  6797  00406C  0A80               	xorlw	128
  6798  00406E  6E27               	movwf	(??_fputc+4)& (0+255),c
  6799  004070  50DE               	movf	postinc2,w,c
  6800  004072  0A80               	xorlw	128
  6801  004074  5827               	subwfb	(??_fputc+4)& (0+255),w,c
  6802  004076  B0D8               	btfsc	status,0,c
  6803  004078  0012               	return	
  6804  00407A                     u7080:
  6805  00407A  EE20 F002          	lfsr	2,2
  6806  00407E  5021               	movf	fputc@fp,w,c
  6807  004080  26D9               	addwf	fsr2l,f,c
  6808  004082  5022               	movf	fputc@fp+1,w,c
  6809  004084  22DA               	addwfc	fsr2h,f,c
  6810  004086  CFDE F023          	movff	postinc2,??_fputc
  6811  00408A  CFDD F024          	movff	postdec2,??_fputc+1
  6812  00408E  C021  FFD9         	movff	fputc@fp,fsr2l
  6813  004092  C022  FFDA         	movff	fputc@fp+1,fsr2h
  6814  004096  CFDE F025          	movff	postinc2,??_fputc+2
  6815  00409A  CFDD F026          	movff	postdec2,??_fputc+3
  6816  00409E  5023               	movf	??_fputc,w,c
  6817  0040A0  2425               	addwf	??_fputc+2,w,c
  6818  0040A2  6ED9               	movwf	fsr2l,c
  6819  0040A4  5024               	movf	??_fputc+1,w,c
  6820  0040A6  2026               	addwfc	??_fputc+3,w,c
  6821  0040A8  6EDA               	movwf	fsr2h,c
  6822  0040AA  C01F  FFDF         	movff	fputc@c,indf2
  6823  0040AE  EE20 F002          	lfsr	2,2
  6824  0040B2  5021               	movf	fputc@fp,w,c
  6825  0040B4  26D9               	addwf	fsr2l,f,c
  6826  0040B6  5022               	movf	fputc@fp+1,w,c
  6827  0040B8  22DA               	addwfc	fsr2h,f,c
  6828  0040BA  2ADE               	incf	postinc2,f,c
  6829  0040BC  0E00               	movlw	0
  6830  0040BE  22DD               	addwfc	postdec2,f,c
  6831  0040C0  0012               	return		;funcret
  6832  0040C2                     __end_of_fputc:
  6833                           	opt callstack 0
  6834                           
  6835 ;; *************** function _putch *****************
  6836 ;; Defined at:
  6837 ;;		line 100 in file "lcd.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;  data            1    wreg     unsigned char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  data            1   29[COMRAM] unsigned char 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  1    wreg      void 
  6844 ;; Registers used:
  6845 ;;		wreg, status,2, status,0, cstack
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;Total ram usage:        1 bytes
  6856 ;; Hardware stack levels used:    1
  6857 ;; Hardware stack levels required when called:    6
  6858 ;; This function calls:
  6859 ;;		_send_byte
  6860 ;; This function is called by:
  6861 ;;		_fputc
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text22
  6866  004A9A                     __ptext22:
  6867                           	opt callstack 0
  6868  004A9A                     _putch:
  6869                           	opt callstack 19
  6870                           
  6871                           ;incstack = 0
  6872                           ;putch@data stored from wreg
  6873  004A9A  6E1E               	movwf	putch@data,c
  6874                           
  6875                           ;lcd.c: 101:     LATDbits.LATD2 = 1;
  6876  004A9C  848C               	bsf	3980,2,c	;volatile
  6877                           
  6878                           ;lcd.c: 102:     send_byte((unsigned char)data);
  6879  004A9E  501E               	movf	putch@data,w,c
  6880  004AA0  EC3D  F025         	call	_send_byte
  6881  004AA4  0012               	return		;funcret
  6882  004AA6                     __end_of_putch:
  6883                           	opt callstack 0
  6884                           
  6885 ;; *************** function _atoi *****************
  6886 ;; Defined at:
  6887 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  s               2   33[COMRAM] PTR const unsigned char 
  6890 ;;		 -> STR_7(6), STR_6(10), STR_5(5), STR_4(5), 
  6891 ;;		 -> STR_3(5), STR_2(5), 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  n               2   46[COMRAM] int 
  6894 ;;  neg             2   39[COMRAM] int 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2   33[COMRAM] int 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6905 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;Total ram usage:       15 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    4
  6911 ;; This function calls:
  6912 ;;		___wmul
  6913 ;;		_isdigit
  6914 ;;		_isspace
  6915 ;; This function is called by:
  6916 ;;		_vfpfcnvrt
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text23
  6921  0035EC                     __ptext23:
  6922                           	opt callstack 0
  6923  0035EC                     _atoi:
  6924                           	opt callstack 23
  6925                           
  6926                           ;incstack = 0
  6927  0035EC  0E00               	movlw	0
  6928  0035EE  6E30               	movwf	atoi@n+1,c
  6929  0035F0  0E00               	movlw	0
  6930  0035F2  6E2F               	movwf	atoi@n,c
  6931  0035F4  0E00               	movlw	0
  6932  0035F6  6E29               	movwf	atoi@neg+1,c
  6933  0035F8  0E00               	movlw	0
  6934  0035FA  6E28               	movwf	atoi@neg,c
  6935  0035FC  D002               	goto	l7724
  6936  0035FE                     l7722:
  6937  0035FE  4A22               	infsnz	atoi@s,f,c
  6938  003600  2A23               	incf	atoi@s+1,f,c
  6939  003602                     l7724:
  6940  003602  0E01               	movlw	1
  6941  003604  6E2E               	movwf	_atoi$1661,c
  6942  003606  C022  FFF6         	movff	atoi@s,tblptrl
  6943  00360A  C023  FFF7         	movff	atoi@s+1,tblptrh
  6944  00360E                     	if	0	;tblptru may be non-zero
  6945  00360E                     	endif
  6946  00360E                     	if	0	;tblptru may be non-zero
  6947  00360E                     	endif
  6948  00360E  0008               	tblrd		*
  6949  003610  50F5               	movf	tablat,w,c
  6950  003612  0A20               	xorlw	32
  6951  003614  B4D8               	btfsc	status,2,c
  6952  003616  D018               	goto	l7732
  6953  003618  0EF7               	movlw	247
  6954  00361A  6E24               	movwf	??_atoi& (0+255),c
  6955  00361C  0EFF               	movlw	255
  6956  00361E  6E25               	movwf	(??_atoi+1)& (0+255),c
  6957  003620  C022  FFF6         	movff	atoi@s,tblptrl
  6958  003624  C023  FFF7         	movff	atoi@s+1,tblptrh
  6959  003628                     	if	0	;tblptru may be non-zero
  6960  003628                     	endif
  6961  003628                     	if	0	;tblptru may be non-zero
  6962  003628                     	endif
  6963  003628  0008               	tblrd		*
  6964  00362A  50F5               	movf	tablat,w,c
  6965  00362C  6E26               	movwf	(??_atoi+2)& (0+255),c
  6966  00362E  6A27               	clrf	(??_atoi+3)& (0+255),c
  6967  003630  5024               	movf	??_atoi,w,c
  6968  003632  2626               	addwf	??_atoi+2,f,c
  6969  003634  5025               	movf	??_atoi+1,w,c
  6970  003636  2227               	addwfc	??_atoi+3,f,c
  6971  003638  5027               	movf	??_atoi+3,w,c
  6972  00363A  E104               	bnz	u9150
  6973  00363C  0E05               	movlw	5
  6974  00363E  5C26               	subwf	??_atoi+2,w,c
  6975  003640  A0D8               	btfss	status,0,c
  6976  003642  D002               	goto	l7732
  6977  003644                     u9150:
  6978  003644  0E00               	movlw	0
  6979  003646  6E2E               	movwf	_atoi$1661,c
  6980  003648                     l7732:
  6981  003648  C02E  F02A         	movff	_atoi$1661,_atoi$1660
  6982  00364C  6A2B               	clrf	_atoi$1660+1,c
  6983  00364E  502A               	movf	_atoi$1660,w,c
  6984  003650  102B               	iorwf	_atoi$1660+1,w,c
  6985  003652  B4D8               	btfsc	status,2,c
  6986  003654  D008               	goto	l7742
  6987  003656  D7D3               	goto	l7722
  6988  003658                     l7738:
  6989  003658  0E00               	movlw	0
  6990  00365A  6E29               	movwf	atoi@neg+1,c
  6991  00365C  0E01               	movlw	1
  6992  00365E  6E28               	movwf	atoi@neg,c
  6993  003660                     l7740:
  6994  003660  4A22               	infsnz	atoi@s,f,c
  6995  003662  2A23               	incf	atoi@s+1,f,c
  6996  003664  D02E               	goto	l7748
  6997  003666                     l7742:
  6998  003666  C022  FFF6         	movff	atoi@s,tblptrl
  6999  00366A  C023  FFF7         	movff	atoi@s+1,tblptrh
  7000  00366E                     	if	0	;tblptru may be non-zero
  7001  00366E                     	endif
  7002  00366E                     	if	0	;tblptru may be non-zero
  7003  00366E                     	endif
  7004  00366E  0008               	tblrd		*
  7005  003670  50F5               	movf	tablat,w,c
  7006  003672  6E24               	movwf	??_atoi& (0+255),c
  7007  003674  6A25               	clrf	(??_atoi+1)& (0+255),c
  7008                           
  7009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7010                           ; Switch size 1, requested type "simple"
  7011                           ; Number of cases is 1, Range of values is 0 to 0
  7012                           ; switch strategies available:
  7013                           ; Name         Instructions Cycles
  7014                           ; simple_byte            4     3 (average)
  7015                           ;	Chosen strategy is simple_byte
  7016  003676  5025               	movf	??_atoi+1,w,c
  7017  003678  0A00               	xorlw	0	; case 0
  7018  00367A  A4D8               	btfss	status,2,c
  7019  00367C  D022               	goto	l7748
  7020                           
  7021                           ; Switch size 1, requested type "simple"
  7022                           ; Number of cases is 2, Range of values is 43 to 45
  7023                           ; switch strategies available:
  7024                           ; Name         Instructions Cycles
  7025                           ; simple_byte            7     4 (average)
  7026                           ;	Chosen strategy is simple_byte
  7027  00367E  5024               	movf	??_atoi,w,c
  7028  003680  0A2B               	xorlw	43	; case 43
  7029  003682  B4D8               	btfsc	status,2,c
  7030  003684  D7ED               	goto	l7740
  7031  003686  0A06               	xorlw	6	; case 45
  7032  003688  B4D8               	btfsc	status,2,c
  7033  00368A  D7E6               	goto	l7738
  7034  00368C  D01A               	goto	l7748
  7035  00368E                     l7744:
  7036  00368E  C02F  F01B         	movff	atoi@n,___wmul@multiplier
  7037  003692  C030  F01C         	movff	atoi@n+1,___wmul@multiplier+1
  7038  003696  0E00               	movlw	0
  7039  003698  6E1E               	movwf	___wmul@multiplicand+1,c
  7040  00369A  0E0A               	movlw	10
  7041  00369C  6E1D               	movwf	___wmul@multiplicand,c
  7042  00369E  ECEE  F024         	call	___wmul	;wreg free
  7043  0036A2  C022  FFF6         	movff	atoi@s,tblptrl
  7044  0036A6  C023  FFF7         	movff	atoi@s+1,tblptrh
  7045  0036AA                     	if	0	;tblptru may be non-zero
  7046  0036AA                     	endif
  7047  0036AA                     	if	0	;tblptru may be non-zero
  7048  0036AA                     	endif
  7049  0036AA  0008               	tblrd		*
  7050  0036AC  50F5               	movf	tablat,w,c
  7051  0036AE  5E1B               	subwf	?___wmul,f,c
  7052  0036B0  0E00               	movlw	0
  7053  0036B2  5A1C               	subwfb	?___wmul+1,f,c
  7054  0036B4  0E30               	movlw	48
  7055  0036B6  241B               	addwf	?___wmul,w,c
  7056  0036B8  6E2F               	movwf	atoi@n,c
  7057  0036BA  0E00               	movlw	0
  7058  0036BC  201C               	addwfc	?___wmul+1,w,c
  7059  0036BE  6E30               	movwf	atoi@n+1,c
  7060  0036C0  D7CF               	goto	l7740
  7061  0036C2                     l7748:
  7062  0036C2  0ED0               	movlw	208
  7063  0036C4  6E24               	movwf	??_atoi& (0+255),c
  7064  0036C6  0EFF               	movlw	255
  7065  0036C8  6E25               	movwf	(??_atoi+1)& (0+255),c
  7066  0036CA  C022  FFF6         	movff	atoi@s,tblptrl
  7067  0036CE  C023  FFF7         	movff	atoi@s+1,tblptrh
  7068  0036D2                     	if	0	;tblptru may be non-zero
  7069  0036D2                     	endif
  7070  0036D2                     	if	0	;tblptru may be non-zero
  7071  0036D2                     	endif
  7072  0036D2  0008               	tblrd		*
  7073  0036D4  50F5               	movf	tablat,w,c
  7074  0036D6  6E26               	movwf	(??_atoi+2)& (0+255),c
  7075  0036D8  6A27               	clrf	(??_atoi+3)& (0+255),c
  7076  0036DA  5024               	movf	??_atoi,w,c
  7077  0036DC  2626               	addwf	??_atoi+2,f,c
  7078  0036DE  5025               	movf	??_atoi+1,w,c
  7079  0036E0  2227               	addwfc	??_atoi+3,f,c
  7080  0036E2  5027               	movf	??_atoi+3,w,c
  7081  0036E4  E106               	bnz	u9170
  7082  0036E6  0E0A               	movlw	10
  7083  0036E8  5C26               	subwf	??_atoi+2,w,c
  7084  0036EA  B0D8               	btfsc	status,0,c
  7085  0036EC  D002               	goto	u9170
  7086  0036EE  0E01               	movlw	1
  7087  0036F0  D001               	goto	u9180
  7088  0036F2                     u9170:
  7089  0036F2  0E00               	movlw	0
  7090  0036F4                     u9180:
  7091  0036F4  6E2C               	movwf	_atoi$1662,c
  7092  0036F6  6A2D               	clrf	_atoi$1662+1,c
  7093  0036F8  502C               	movf	_atoi$1662,w,c
  7094  0036FA  102D               	iorwf	_atoi$1662+1,w,c
  7095  0036FC  A4D8               	btfss	status,2,c
  7096  0036FE  D7C7               	goto	l7744
  7097  003700  5028               	movf	atoi@neg,w,c
  7098  003702  1029               	iorwf	atoi@neg+1,w,c
  7099  003704  A4D8               	btfss	status,2,c
  7100  003706  D00D               	goto	l1443
  7101  003708  C02F  F024         	movff	atoi@n,??_atoi
  7102  00370C  C030  F025         	movff	atoi@n+1,??_atoi+1
  7103  003710  1E24               	comf	??_atoi,f,c
  7104  003712  1E25               	comf	??_atoi+1,f,c
  7105  003714  4A24               	infsnz	??_atoi,f,c
  7106  003716  2A25               	incf	??_atoi+1,f,c
  7107  003718  C024  F022         	movff	??_atoi,?_atoi
  7108  00371C  C025  F023         	movff	??_atoi+1,?_atoi+1
  7109  003720  0012               	return	
  7110  003722                     l1443:
  7111  003722  C02F  F022         	movff	atoi@n,?_atoi
  7112  003726  C030  F023         	movff	atoi@n+1,?_atoi+1
  7113  00372A  0012               	return		;funcret
  7114  00372C                     __end_of_atoi:
  7115                           	opt callstack 0
  7116                           
  7117 ;; *************** function _isspace *****************
  7118 ;; Defined at:
  7119 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  c               2   26[COMRAM] int 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  2   26[COMRAM] int 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;Total ram usage:        7 bytes
  7138 ;; Hardware stack levels used:    1
  7139 ;; Hardware stack levels required when called:    3
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_atoi
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text24
  7148  00485C                     __ptext24:
  7149                           	opt callstack 0
  7150  00485C                     _isspace:
  7151                           	opt callstack 23
  7152                           
  7153                           ;incstack = 0
  7154  00485C  0E01               	movlw	1
  7155  00485E  6E21               	movwf	_isspace$1691,c
  7156  004860  0E20               	movlw	32
  7157  004862  181B               	xorwf	isspace@c,w,c
  7158  004864  101C               	iorwf	isspace@c+1,w,c
  7159  004866  B4D8               	btfsc	status,2,c
  7160  004868  D014               	goto	l7362
  7161  00486A  0EF7               	movlw	247
  7162  00486C  6E1D               	movwf	??_isspace& (0+255),c
  7163  00486E  0EFF               	movlw	255
  7164  004870  6E1E               	movwf	(??_isspace+1)& (0+255),c
  7165  004872  C01B  F01F         	movff	isspace@c,??_isspace+2
  7166  004876  C01C  F020         	movff	isspace@c+1,??_isspace+3
  7167  00487A  501D               	movf	??_isspace,w,c
  7168  00487C  261F               	addwf	??_isspace+2,f,c
  7169  00487E  501E               	movf	??_isspace+1,w,c
  7170  004880  2220               	addwfc	??_isspace+3,f,c
  7171  004882  5020               	movf	??_isspace+3,w,c
  7172  004884  E104               	bnz	u8510
  7173  004886  0E05               	movlw	5
  7174  004888  5C1F               	subwf	??_isspace+2,w,c
  7175  00488A  A0D8               	btfss	status,0,c
  7176  00488C  D002               	goto	l7362
  7177  00488E                     u8510:
  7178  00488E  0E00               	movlw	0
  7179  004890  6E21               	movwf	_isspace$1691,c
  7180  004892                     l7362:
  7181  004892  C021  F01B         	movff	_isspace$1691,?_isspace
  7182  004896  6A1C               	clrf	?_isspace+1,c
  7183  004898  0012               	return		;funcret
  7184  00489A                     __end_of_isspace:
  7185                           	opt callstack 0
  7186                           
  7187 ;; *************** function _isdigit *****************
  7188 ;; Defined at:
  7189 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  c               2   26[COMRAM] int 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  2   26[COMRAM] int 
  7196 ;; Registers used:
  7197 ;;		wreg, status,2, status,0
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;Total ram usage:        6 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    3
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_vfpfcnvrt
  7214 ;;		_atoi
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text25
  7219  004902                     __ptext25:
  7220                           	opt callstack 0
  7221  004902                     _isdigit:
  7222                           	opt callstack 24
  7223                           
  7224                           ;incstack = 0
  7225  004902  0ED0               	movlw	208
  7226  004904  6E1D               	movwf	??_isdigit& (0+255),c
  7227  004906  0EFF               	movlw	255
  7228  004908  6E1E               	movwf	(??_isdigit+1)& (0+255),c
  7229  00490A  C01B  F01F         	movff	isdigit@c,??_isdigit+2
  7230  00490E  C01C  F020         	movff	isdigit@c+1,??_isdigit+3
  7231  004912  501D               	movf	??_isdigit,w,c
  7232  004914  261F               	addwf	??_isdigit+2,f,c
  7233  004916  501E               	movf	??_isdigit+1,w,c
  7234  004918  2220               	addwfc	??_isdigit+3,f,c
  7235  00491A  5020               	movf	??_isdigit+3,w,c
  7236  00491C  E106               	bnz	u7780
  7237  00491E  0E0A               	movlw	10
  7238  004920  5C1F               	subwf	??_isdigit+2,w,c
  7239  004922  B0D8               	btfsc	status,0,c
  7240  004924  D002               	goto	u7780
  7241  004926  0E01               	movlw	1
  7242  004928  D001               	goto	u7790
  7243  00492A                     u7780:
  7244  00492A  0E00               	movlw	0
  7245  00492C                     u7790:
  7246  00492C  6E1B               	movwf	?_isdigit,c
  7247  00492E  6A1C               	clrf	?_isdigit+1,c
  7248  004930  0012               	return		;funcret
  7249  004932                     __end_of_isdigit:
  7250                           	opt callstack 0
  7251                           
  7252 ;; *************** function ___wmul *****************
  7253 ;; Defined at:
  7254 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  multiplier      2   26[COMRAM] unsigned int 
  7257 ;;  multiplicand    2   28[COMRAM] unsigned int 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  product         2   30[COMRAM] unsigned int 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  2   26[COMRAM] unsigned int 
  7262 ;; Registers used:
  7263 ;;		wreg, status,2, status,0, prodl, prodh
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7273 ;;Total ram usage:        6 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; Hardware stack levels required when called:    3
  7276 ;; This function calls:
  7277 ;;		Nothing
  7278 ;; This function is called by:
  7279 ;;		_atoi
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text26
  7284  0049DC                     __ptext26:
  7285                           	opt callstack 0
  7286  0049DC                     ___wmul:
  7287                           	opt callstack 23
  7288                           
  7289                           ;incstack = 0
  7290  0049DC  501B               	movf	___wmul@multiplier,w,c
  7291  0049DE  021D               	mulwf	___wmul@multiplicand,c
  7292  0049E0  CFF3 F01F          	movff	prodl,___wmul@product
  7293  0049E4  CFF4 F020          	movff	prodh,___wmul@product+1
  7294  0049E8  501B               	movf	___wmul@multiplier,w,c
  7295  0049EA  021E               	mulwf	___wmul@multiplicand+1,c
  7296  0049EC  50F3               	movf	prodl,w,c
  7297  0049EE  2620               	addwf	___wmul@product+1,f,c
  7298  0049F0  501C               	movf	___wmul@multiplier+1,w,c
  7299  0049F2  021D               	mulwf	___wmul@multiplicand,c
  7300  0049F4  50F3               	movf	prodl,w,c
  7301  0049F6  2620               	addwf	___wmul@product+1,f,c
  7302  0049F8  C01F  F01B         	movff	___wmul@product,?___wmul
  7303  0049FC  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  7304  004A00  0012               	return		;funcret
  7305  004A02                     __end_of___wmul:
  7306                           	opt callstack 0
  7307                           
  7308 ;; *************** function _portSetup *****************
  7309 ;; Defined at:
  7310 ;;		line 350 in file "main.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:    3
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text27
  7339  00464C                     __ptext27:
  7340                           	opt callstack 0
  7341  00464C                     _portSetup:
  7342                           	opt callstack 27
  7343                           
  7344                           ;main.c: 354:     LATA = 0x00;
  7345                           
  7346                           ;incstack = 0
  7347  00464C  0E00               	movlw	0
  7348  00464E  6E89               	movwf	3977,c	;volatile
  7349                           
  7350                           ;main.c: 355:     LATB = 0x00;
  7351  004650  0E00               	movlw	0
  7352  004652  6E8A               	movwf	3978,c	;volatile
  7353                           
  7354                           ;main.c: 356:     LATC = 0x00;
  7355  004654  0E00               	movlw	0
  7356  004656  6E8B               	movwf	3979,c	;volatile
  7357                           
  7358                           ;main.c: 357:     LATD = 0x00;
  7359  004658  0E00               	movlw	0
  7360  00465A  6E8C               	movwf	3980,c	;volatile
  7361                           
  7362                           ;main.c: 358:     LATE = 0x00;
  7363  00465C  0E00               	movlw	0
  7364  00465E  6E8D               	movwf	3981,c	;volatile
  7365                           
  7366                           ;main.c: 362:     TRISA = 0b11000000;
  7367  004660  0EC0               	movlw	192
  7368  004662  6E92               	movwf	3986,c	;volatile
  7369                           
  7370                           ;main.c: 365:     TRISB = 0b11110111;
  7371  004664  0EF7               	movlw	247
  7372  004666  6E93               	movwf	3987,c	;volatile
  7373                           
  7374                           ;main.c: 367:     TRISC = 0b10000000;
  7375  004668  0E80               	movlw	128
  7376  00466A  6E94               	movwf	3988,c	;volatile
  7377                           
  7378                           ;main.c: 371:     TRISD = 0b00000011;
  7379  00466C  0E03               	movlw	3
  7380  00466E  6E95               	movwf	3989,c	;volatile
  7381                           
  7382                           ;main.c: 377:     ADCON0 = 0x00;
  7383  004670  0E00               	movlw	0
  7384  004672  6EC2               	movwf	4034,c	;volatile
  7385                           
  7386                           ;main.c: 378:     ADCON1 = 0x0F;
  7387  004674  0E0F               	movlw	15
  7388  004676  6EC1               	movwf	4033,c	;volatile
  7389                           
  7390                           ;main.c: 379:     ADCON2bits.ADFM = 1;
  7391  004678  8EC0               	bsf	4032,7,c	;volatile
  7392                           
  7393                           ;main.c: 381:     CVRCON = 0x00;
  7394  00467A  0E00               	movlw	0
  7395  00467C  6EB5               	movwf	4021,c	;volatile
  7396                           
  7397                           ;main.c: 382:     CMCONbits.CIS = 0;
  7398  00467E  96B4               	bcf	4020,3,c	;volatile
  7399                           
  7400                           ;main.c: 383:     ADCON2 = 0b10110001;
  7401  004680  0EB1               	movlw	177
  7402  004682  6EC0               	movwf	4032,c	;volatile
  7403                           
  7404                           ;main.c: 387:     INT0IF = 0;
  7405  004684  92F2               	bcf	4082,1,c	;volatile
  7406                           
  7407                           ;main.c: 388:     INT0IE = 1;
  7408  004686  88F2               	bsf	4082,4,c	;volatile
  7409                           
  7410                           ;main.c: 389:     INT2IF = 0;
  7411  004688  92F0               	bcf	4080,1,c	;volatile
  7412                           
  7413                           ;main.c: 390:     INT2IE = 1;
  7414  00468A  88F0               	bsf	4080,4,c	;volatile
  7415                           
  7416                           ;main.c: 392:     INTEDG0 = 1;
  7417  00468C  8CF1               	bsf	4081,6,c	;volatile
  7418                           
  7419                           ;main.c: 395:     INT1IF = 0;
  7420  00468E  90F0               	bcf	4080,0,c	;volatile
  7421                           
  7422                           ;main.c: 396:     INT1IE = 1;
  7423  004690  86F0               	bsf	4080,3,c	;volatile
  7424                           
  7425                           ;main.c: 398:     INTEDG1 = 1;
  7426  004692  8AF1               	bsf	4081,5,c	;volatile
  7427                           
  7428                           ;main.c: 400:     (INTCONbits.GIE = 1);
  7429  004694  8EF2               	bsf	4082,7,c	;volatile
  7430                           
  7431                           ;main.c: 404:     INTCONbits.PEIE_GIEL = 1;
  7432  004696  8CF2               	bsf	4082,6,c	;volatile
  7433                           
  7434                           ;main.c: 406:     LATAbits.LA4 = 0;
  7435  004698  9889               	bcf	3977,4,c	;volatile
  7436                           
  7437                           ;main.c: 407:     LATAbits.LA5 = 0;
  7438  00469A  9A89               	bcf	3977,5,c	;volatile
  7439  00469C  0012               	return		;funcret
  7440  00469E                     __end_of_portSetup:
  7441                           	opt callstack 0
  7442                           
  7443 ;; *************** function _initLCD *****************
  7444 ;; Defined at:
  7445 ;;		line 67 in file "lcd.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, status,2, status,0, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7463 ;;Total ram usage:        1 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:    7
  7466 ;; This function calls:
  7467 ;;		_lcdInst
  7468 ;;		_send_byte
  7469 ;;		_send_nibble
  7470 ;; This function is called by:
  7471 ;;		_main
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text28
  7476  004482                     __ptext28:
  7477                           	opt callstack 0
  7478  004482                     _initLCD:
  7479                           	opt callstack 23
  7480                           
  7481                           ;lcd.c: 68:     _delay((unsigned long)((15)*(40000000/4000.0)));
  7482                           
  7483                           ;incstack = 0
  7484  004482  0EC3               	movlw	195
  7485  004484  6E1F               	movwf	??_initLCD& (0+255),c
  7486  004486  0ECD               	movlw	205
  7487  004488                     u9857:
  7488  004488  2EE8               	decfsz	wreg,f,c
  7489  00448A  D7FE               	bra	u9857
  7490  00448C  2E1F               	decfsz	??_initLCD& (0+255),f,c
  7491  00448E  D7FC               	bra	u9857
  7492  004490  F000               	nop	
  7493                           
  7494                           ;lcd.c: 70:     LATDbits.LATD2 = 0;
  7495  004492  948C               	bcf	3980,2,c	;volatile
  7496                           
  7497                           ;lcd.c: 72:     send_nibble(0b0011);
  7498  004494  0E03               	movlw	3
  7499  004496  EC32  F025         	call	_send_nibble
  7500                           
  7501                           ;lcd.c: 73:     _delay((unsigned long)((5)*(40000000/4000.0)));
  7502  00449A  0E41               	movlw	65
  7503  00449C  6E1F               	movwf	??_initLCD& (0+255),c
  7504  00449E  0EEE               	movlw	238
  7505  0044A0                     u9867:
  7506  0044A0  2EE8               	decfsz	wreg,f,c
  7507  0044A2  D7FE               	bra	u9867
  7508  0044A4  2E1F               	decfsz	??_initLCD& (0+255),f,c
  7509  0044A6  D7FC               	bra	u9867
  7510  0044A8  D000               	nop2	
  7511                           
  7512                           ;lcd.c: 74:     send_nibble(0b0011);
  7513  0044AA  0E03               	movlw	3
  7514  0044AC  EC32  F025         	call	_send_nibble
  7515                           
  7516                           ;lcd.c: 75:     _delay((unsigned long)((150)*(40000000/4000000.0)));
  7517  0044B0  0ED6               	movlw	214
  7518  0044B2                     u9877:
  7519  0044B2  D000               	nop2	
  7520  0044B4  D000               	nop2	
  7521  0044B6  2EE8               	decfsz	wreg,f,c
  7522  0044B8  D7FC               	bra	u9877
  7523  0044BA  D000               	nop2	
  7524                           
  7525                           ;lcd.c: 76:     send_byte(0b00110010);
  7526  0044BC  0E32               	movlw	50
  7527  0044BE  EC3D  F025         	call	_send_byte
  7528                           
  7529                           ;lcd.c: 78:     send_byte(0b00101000);
  7530  0044C2  0E28               	movlw	40
  7531  0044C4  EC3D  F025         	call	_send_byte
  7532                           
  7533                           ;lcd.c: 79:     send_byte(0b00001000);
  7534  0044C8  0E08               	movlw	8
  7535  0044CA  EC3D  F025         	call	_send_byte
  7536                           
  7537                           ;lcd.c: 80:     send_byte(0b00000001);
  7538  0044CE  0E01               	movlw	1
  7539  0044D0  EC3D  F025         	call	_send_byte
  7540                           
  7541                           ;lcd.c: 81:     _delay((unsigned long)((5)*(40000000/4000.0)));
  7542  0044D4  0E41               	movlw	65
  7543  0044D6  6E1F               	movwf	??_initLCD& (0+255),c
  7544  0044D8  0EEE               	movlw	238
  7545  0044DA                     u9887:
  7546  0044DA  2EE8               	decfsz	wreg,f,c
  7547  0044DC  D7FE               	bra	u9887
  7548  0044DE  2E1F               	decfsz	??_initLCD& (0+255),f,c
  7549  0044E0  D7FC               	bra	u9887
  7550  0044E2  D000               	nop2	
  7551                           
  7552                           ;lcd.c: 82:     send_byte(0b00000110);
  7553  0044E4  0E06               	movlw	6
  7554  0044E6  EC3D  F025         	call	_send_byte
  7555                           
  7556                           ;lcd.c: 85:     { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  7557  0044EA  0E0C               	movlw	12
  7558  0044EC  EC53  F025         	call	_lcdInst
  7559  0044F0  0012               	return		;funcret
  7560  0044F2                     __end_of_initLCD:
  7561                           	opt callstack 0
  7562                           
  7563 ;; *************** function _drive *****************
  7564 ;; Defined at:
  7565 ;;		line 11 in file "driving.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  error           4   27[BANK0 ] float 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7582 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7583 ;;Total ram usage:        4 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    5
  7586 ;; This function calls:
  7587 ;;		___fladd
  7588 ;;		___fldiv
  7589 ;;		___xxtofl
  7590 ;;		_set_pwm_duty_cycle_RC1_LeftMaster
  7591 ;;		_set_pwm_duty_cycle_RC2_RightSlave
  7592 ;; This function is called by:
  7593 ;;		_main
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text29
  7598  0032AE                     __ptext29:
  7599                           	opt callstack 0
  7600  0032AE                     _drive:
  7601                           	opt callstack 25
  7602                           
  7603                           ;driving.c: 14:     if(travelDirection == 1){
  7604                           
  7605                           ;incstack = 0
  7606  0032AE  045A               	decf	_travelDirection,w,c	;volatile
  7607  0032B0  105B               	iorwf	_travelDirection+1,w,c	;volatile
  7608  0032B2  A4D8               	btfss	status,2,c
  7609  0032B4  D067               	goto	l8086
  7610                           
  7611                           ;driving.c: 15:         error = tickLeftTemp - tickRightTemp;
  7612  0032B6  504C               	movf	_tickRightTemp,w,c	;volatile
  7613  0032B8  5C50               	subwf	_tickLeftTemp,w,c	;volatile
  7614  0032BA  6E1B               	movwf	___xxtofl@val,c
  7615  0032BC  504D               	movf	_tickRightTemp+1,w,c	;volatile
  7616  0032BE  5851               	subwfb	_tickLeftTemp+1,w,c	;volatile
  7617  0032C0  6E1C               	movwf	___xxtofl@val+1,c
  7618  0032C2  504E               	movf	_tickRightTemp+2,w,c	;volatile
  7619  0032C4  5852               	subwfb	_tickLeftTemp+2,w,c	;volatile
  7620  0032C6  6E1D               	movwf	___xxtofl@val+2,c
  7621  0032C8  504F               	movf	_tickRightTemp+3,w,c	;volatile
  7622  0032CA  5853               	subwfb	_tickLeftTemp+3,w,c	;volatile
  7623  0032CC  6E1E               	movwf	___xxtofl@val+3,c
  7624  0032CE  0E01               	movlw	1
  7625  0032D0  EC96  F01B         	call	___xxtofl
  7626  0032D4  C01B  F09B         	movff	?___xxtofl,drive@error
  7627  0032D8  C01C  F09C         	movff	?___xxtofl+1,drive@error+1
  7628  0032DC  C01D  F09D         	movff	?___xxtofl+2,drive@error+2
  7629  0032E0  C01E  F09E         	movff	?___xxtofl+3,drive@error+3
  7630                           
  7631                           ;driving.c: 26:         slavePower = slavePower + (error/kp);
  7632  0032E4  0E00               	movlw	0
  7633  0032E6  6E1F               	movwf	___fldiv@a,c
  7634  0032E8  0E00               	movlw	0
  7635  0032EA  6E20               	movwf	___fldiv@a+1,c
  7636  0032EC  0E60               	movlw	96
  7637  0032EE  6E21               	movwf	___fldiv@a+2,c
  7638  0032F0  0E40               	movlw	64
  7639  0032F2  6E22               	movwf	___fldiv@a+3,c
  7640  0032F4  C09B  F01B         	movff	drive@error,___fldiv@b
  7641  0032F8  C09C  F01C         	movff	drive@error+1,___fldiv@b+1
  7642  0032FC  C09D  F01D         	movff	drive@error+2,___fldiv@b+2
  7643  003300  C09E  F01E         	movff	drive@error+3,___fldiv@b+3
  7644  003304  EC38  F017         	call	___fldiv	;wreg free
  7645  003308  C01B  F034         	movff	?___fldiv,___fladd@b
  7646  00330C  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  7647  003310  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  7648  003314  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  7649  003318  C061  F038         	movff	_slavePower,___fladd@a	;volatile
  7650  00331C  C062  F039         	movff	_slavePower+1,___fladd@a+1	;volatile
  7651  003320  C063  F03A         	movff	_slavePower+2,___fladd@a+2	;volatile
  7652  003324  C064  F03B         	movff	_slavePower+3,___fladd@a+3	;volatile
  7653  003328  EC2C  F014         	call	___fladd	;wreg free
  7654  00332C  C034  F061         	movff	?___fladd,_slavePower	;volatile
  7655  003330  C035  F062         	movff	?___fladd+1,_slavePower+1	;volatile
  7656  003334  C036  F063         	movff	?___fladd+2,_slavePower+2	;volatile
  7657  003338  C037  F064         	movff	?___fladd+3,_slavePower+3	;volatile
  7658                           
  7659                           ;driving.c: 30:         set_pwm_duty_cycle_RC2_RightSlave(slavePower);
  7660  00333C  C061  F08D         	movff	_slavePower,set_pwm_duty_cycle_RC2_RightSlave@duty	;volatile
  7661  003340  C062  F08E         	movff	_slavePower+1,set_pwm_duty_cycle_RC2_RightSlave@duty+1	;volatile
  7662  003344  C063  F08F         	movff	_slavePower+2,set_pwm_duty_cycle_RC2_RightSlave@duty+2	;volatile
  7663  003348  C064  F090         	movff	_slavePower+3,set_pwm_duty_cycle_RC2_RightSlave@duty+3	;volatile
  7664  00334C  ECCA  F01C         	call	_set_pwm_duty_cycle_RC2_RightSlave	;wreg free
  7665                           
  7666                           ;driving.c: 31:         set_pwm_duty_cycle_RC1_LeftMaster(masterPower);
  7667  003350  C0F9  F08D         	movff	_masterPower,set_pwm_duty_cycle_RC1_LeftMaster@duty	;volatile
  7668  003354  C0FA  F08E         	movff	_masterPower+1,set_pwm_duty_cycle_RC1_LeftMaster@duty+1	;volatile
  7669  003358  C0FB  F08F         	movff	_masterPower+2,set_pwm_duty_cycle_RC1_LeftMaster@duty+2	;volatile
  7670  00335C  C0FC  F090         	movff	_masterPower+3,set_pwm_duty_cycle_RC1_LeftMaster@duty+3	;volatile
  7671  003360  EC52  F01D         	call	_set_pwm_duty_cycle_RC1_LeftMaster	;wreg free
  7672                           
  7673                           ;driving.c: 33:         tickLeftTemp = 0;
  7674  003364  0E00               	movlw	0
  7675  003366  6E50               	movwf	_tickLeftTemp,c	;volatile
  7676  003368  0E00               	movlw	0
  7677  00336A  6E51               	movwf	_tickLeftTemp+1,c	;volatile
  7678  00336C  0E00               	movlw	0
  7679  00336E  6E52               	movwf	_tickLeftTemp+2,c	;volatile
  7680  003370  0E00               	movlw	0
  7681  003372  6E53               	movwf	_tickLeftTemp+3,c	;volatile
  7682                           
  7683                           ;driving.c: 34:         tickRightTemp = 0;
  7684  003374  0E00               	movlw	0
  7685  003376  6E4C               	movwf	_tickRightTemp,c	;volatile
  7686  003378  0E00               	movlw	0
  7687  00337A  6E4D               	movwf	_tickRightTemp+1,c	;volatile
  7688  00337C  0E00               	movlw	0
  7689  00337E  6E4E               	movwf	_tickRightTemp+2,c	;volatile
  7690  003380  0E00               	movlw	0
  7691  003382  6E4F               	movwf	_tickRightTemp+3,c	;volatile
  7692  003384                     l8086:
  7693                           
  7694                           ;driving.c: 37:     if(travelDirection == 2){
  7695  003384  0E02               	movlw	2
  7696  003386  185A               	xorwf	_travelDirection,w,c	;volatile
  7697  003388  105B               	iorwf	_travelDirection+1,w,c	;volatile
  7698  00338A  A4D8               	btfss	status,2,c
  7699  00338C  0012               	return	
  7700                           
  7701                           ;driving.c: 38:         error = tickRightTemp - tickLeftTemp;
  7702  00338E  5050               	movf	_tickLeftTemp,w,c	;volatile
  7703  003390  5C4C               	subwf	_tickRightTemp,w,c	;volatile
  7704  003392  6E1B               	movwf	___xxtofl@val,c
  7705  003394  5051               	movf	_tickLeftTemp+1,w,c	;volatile
  7706  003396  584D               	subwfb	_tickRightTemp+1,w,c	;volatile
  7707  003398  6E1C               	movwf	___xxtofl@val+1,c
  7708  00339A  5052               	movf	_tickLeftTemp+2,w,c	;volatile
  7709  00339C  584E               	subwfb	_tickRightTemp+2,w,c	;volatile
  7710  00339E  6E1D               	movwf	___xxtofl@val+2,c
  7711  0033A0  5053               	movf	_tickLeftTemp+3,w,c	;volatile
  7712  0033A2  584F               	subwfb	_tickRightTemp+3,w,c	;volatile
  7713  0033A4  6E1E               	movwf	___xxtofl@val+3,c
  7714  0033A6  0E01               	movlw	1
  7715  0033A8  EC96  F01B         	call	___xxtofl
  7716  0033AC  C01B  F09B         	movff	?___xxtofl,drive@error
  7717  0033B0  C01C  F09C         	movff	?___xxtofl+1,drive@error+1
  7718  0033B4  C01D  F09D         	movff	?___xxtofl+2,drive@error+2
  7719  0033B8  C01E  F09E         	movff	?___xxtofl+3,drive@error+3
  7720                           
  7721                           ;driving.c: 49:         slavePower = slavePower + (error/kp);
  7722  0033BC  0E00               	movlw	0
  7723  0033BE  6E1F               	movwf	___fldiv@a,c
  7724  0033C0  0E00               	movlw	0
  7725  0033C2  6E20               	movwf	___fldiv@a+1,c
  7726  0033C4  0E60               	movlw	96
  7727  0033C6  6E21               	movwf	___fldiv@a+2,c
  7728  0033C8  0E40               	movlw	64
  7729  0033CA  6E22               	movwf	___fldiv@a+3,c
  7730  0033CC  C09B  F01B         	movff	drive@error,___fldiv@b
  7731  0033D0  C09C  F01C         	movff	drive@error+1,___fldiv@b+1
  7732  0033D4  C09D  F01D         	movff	drive@error+2,___fldiv@b+2
  7733  0033D8  C09E  F01E         	movff	drive@error+3,___fldiv@b+3
  7734  0033DC  EC38  F017         	call	___fldiv	;wreg free
  7735  0033E0  C01B  F034         	movff	?___fldiv,___fladd@b
  7736  0033E4  C01C  F035         	movff	?___fldiv+1,___fladd@b+1
  7737  0033E8  C01D  F036         	movff	?___fldiv+2,___fladd@b+2
  7738  0033EC  C01E  F037         	movff	?___fldiv+3,___fladd@b+3
  7739  0033F0  C061  F038         	movff	_slavePower,___fladd@a	;volatile
  7740  0033F4  C062  F039         	movff	_slavePower+1,___fladd@a+1	;volatile
  7741  0033F8  C063  F03A         	movff	_slavePower+2,___fladd@a+2	;volatile
  7742  0033FC  C064  F03B         	movff	_slavePower+3,___fladd@a+3	;volatile
  7743  003400  EC2C  F014         	call	___fladd	;wreg free
  7744  003404  C034  F061         	movff	?___fladd,_slavePower	;volatile
  7745  003408  C035  F062         	movff	?___fladd+1,_slavePower+1	;volatile
  7746  00340C  C036  F063         	movff	?___fladd+2,_slavePower+2	;volatile
  7747  003410  C037  F064         	movff	?___fladd+3,_slavePower+3	;volatile
  7748                           
  7749                           ;driving.c: 51:         set_pwm_duty_cycle_RC2_RightSlave(slavePower);
  7750  003414  C061  F08D         	movff	_slavePower,set_pwm_duty_cycle_RC2_RightSlave@duty	;volatile
  7751  003418  C062  F08E         	movff	_slavePower+1,set_pwm_duty_cycle_RC2_RightSlave@duty+1	;volatile
  7752  00341C  C063  F08F         	movff	_slavePower+2,set_pwm_duty_cycle_RC2_RightSlave@duty+2	;volatile
  7753  003420  C064  F090         	movff	_slavePower+3,set_pwm_duty_cycle_RC2_RightSlave@duty+3	;volatile
  7754  003424  ECCA  F01C         	call	_set_pwm_duty_cycle_RC2_RightSlave	;wreg free
  7755                           
  7756                           ;driving.c: 52:         set_pwm_duty_cycle_RC1_LeftMaster(masterPower);
  7757  003428  C0F9  F08D         	movff	_masterPower,set_pwm_duty_cycle_RC1_LeftMaster@duty	;volatile
  7758  00342C  C0FA  F08E         	movff	_masterPower+1,set_pwm_duty_cycle_RC1_LeftMaster@duty+1	;volatile
  7759  003430  C0FB  F08F         	movff	_masterPower+2,set_pwm_duty_cycle_RC1_LeftMaster@duty+2	;volatile
  7760  003434  C0FC  F090         	movff	_masterPower+3,set_pwm_duty_cycle_RC1_LeftMaster@duty+3	;volatile
  7761  003438  EC52  F01D         	call	_set_pwm_duty_cycle_RC1_LeftMaster	;wreg free
  7762                           
  7763                           ;driving.c: 54:         tickLeftTemp = 0;
  7764  00343C  0E00               	movlw	0
  7765  00343E  6E50               	movwf	_tickLeftTemp,c	;volatile
  7766  003440  0E00               	movlw	0
  7767  003442  6E51               	movwf	_tickLeftTemp+1,c	;volatile
  7768  003444  0E00               	movlw	0
  7769  003446  6E52               	movwf	_tickLeftTemp+2,c	;volatile
  7770  003448  0E00               	movlw	0
  7771  00344A  6E53               	movwf	_tickLeftTemp+3,c	;volatile
  7772                           
  7773                           ;driving.c: 55:         tickRightTemp = 0;
  7774  00344C  0E00               	movlw	0
  7775  00344E  6E4C               	movwf	_tickRightTemp,c	;volatile
  7776  003450  0E00               	movlw	0
  7777  003452  6E4D               	movwf	_tickRightTemp+1,c	;volatile
  7778  003454  0E00               	movlw	0
  7779  003456  6E4E               	movwf	_tickRightTemp+2,c	;volatile
  7780  003458  0E00               	movlw	0
  7781  00345A  6E4F               	movwf	_tickRightTemp+3,c	;volatile
  7782  00345C  0012               	return		;funcret
  7783  00345E                     __end_of_drive:
  7784                           	opt callstack 0
  7785                           
  7786 ;; *************** function _set_pwm_duty_cycle_RC2_RightSlave *****************
  7787 ;; Defined at:
  7788 ;;		line 64 in file "driving.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  duty            4   13[BANK0 ] float 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  duty_val        2   25[BANK0 ] unsigned short 
  7793 ;;  max_duty_val    2   23[BANK0 ] unsigned short 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      void 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;Total ram usage:       14 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    4
  7810 ;; This function calls:
  7811 ;;		___fldiv
  7812 ;;		___flge
  7813 ;;		___flmul
  7814 ;;		___fltol
  7815 ;;		___xxtofl
  7816 ;; This function is called by:
  7817 ;;		_drive
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text30
  7822  003994                     __ptext30:
  7823                           	opt callstack 0
  7824  003994                     _set_pwm_duty_cycle_RC2_RightSlave:
  7825                           	opt callstack 25
  7826                           
  7827                           ;driving.c: 65:     if((duty >= 0) && (duty <= 100.0)){
  7828                           
  7829                           ;incstack = 0
  7830  003994  0100               	movlb	0	; () banked
  7831  003996  BF90               	btfsc	(set_pwm_duty_cycle_RC2_RightSlave@duty+3)& (0+255),7,b
  7832  003998  0012               	return	
  7833                           
  7834                           ; BSR set to: 0
  7835  00399A  0E00               	movlw	0
  7836  00399C  6E40               	movwf	___flge@ff1,c
  7837  00399E  0E00               	movlw	0
  7838  0039A0  6E41               	movwf	___flge@ff1+1,c
  7839  0039A2  0EC8               	movlw	200
  7840  0039A4  6E42               	movwf	___flge@ff1+2,c
  7841  0039A6  0E42               	movlw	66
  7842  0039A8  6E43               	movwf	___flge@ff1+3,c
  7843  0039AA  C08D  F044         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty,___flge@ff2
  7844  0039AE  C08E  F045         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty+1,___flge@ff2+1
  7845  0039B2  C08F  F046         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty+2,___flge@ff2+2
  7846  0039B6  C090  F047         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty+3,___flge@ff2+3
  7847  0039BA  ECDA  F01D         	call	___flge	;wreg free
  7848  0039BE  A0D8               	btfss	status,0,c
  7849  0039C0  0012               	return	
  7850                           
  7851                           ;driving.c: 70:         unsigned short max_duty_val = PR2 + 1;
  7852  0039C2  0E01               	movlw	1
  7853  0039C4  24CB               	addwf	4043,w,c	;volatile
  7854  0039C6  0100               	movlb	0	; () banked
  7855  0039C8  6F97               	movwf	set_pwm_duty_cycle_RC2_RightSlave@max_duty_val& (0+255),b
  7856  0039CA  6B98               	clrf	(set_pwm_duty_cycle_RC2_RightSlave@max_duty_val+1)& (0+255),b
  7857  0039CC  0E00               	movlw	0
  7858  0039CE  2398               	addwfc	(set_pwm_duty_cycle_RC2_RightSlave@max_duty_val+1)& (0+255),f,b
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;driving.c: 71:         unsigned short duty_val = (unsigned short)(
  7862  0039D0  0E00               	movlw	0
  7863  0039D2  6E1F               	movwf	___fldiv@a,c
  7864  0039D4  0E00               	movlw	0
  7865  0039D6  6E20               	movwf	___fldiv@a+1,c
  7866  0039D8  0EC8               	movlw	200
  7867  0039DA  6E21               	movwf	___fldiv@a+2,c
  7868  0039DC  0E42               	movlw	66
  7869  0039DE  6E22               	movwf	___fldiv@a+3,c
  7870  0039E0  0E00               	movlw	0
  7871  0039E2  6E38               	movwf	___flmul@a,c
  7872  0039E4  0E00               	movlw	0
  7873  0039E6  6E39               	movwf	___flmul@a+1,c
  7874  0039E8  0E80               	movlw	128
  7875  0039EA  6E3A               	movwf	___flmul@a+2,c
  7876  0039EC  0E40               	movlw	64
  7877  0039EE  6E3B               	movwf	___flmul@a+3,c
  7878  0039F0  C08D  F034         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty,___flmul@b
  7879  0039F4  C08E  F035         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty+1,___flmul@b+1
  7880  0039F8  C08F  F036         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty+2,___flmul@b+2
  7881  0039FC  C090  F037         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty+3,___flmul@b+3
  7882  003A00  EC82  F012         	call	___flmul	;wreg free
  7883  003A04  C034  F01B         	movff	?___flmul,___fldiv@b
  7884  003A08  C035  F01C         	movff	?___flmul+1,___fldiv@b+1
  7885  003A0C  C036  F01D         	movff	?___flmul+2,___fldiv@b+2
  7886  003A10  C037  F01E         	movff	?___flmul+3,___fldiv@b+3
  7887  003A14  EC38  F017         	call	___fldiv	;wreg free
  7888  003A18  C01B  F093         	movff	?___fldiv,_set_pwm_duty_cycle_RC2_RightSlave$2030
  7889  003A1C  C01C  F094         	movff	?___fldiv+1,_set_pwm_duty_cycle_RC2_RightSlave$2030+1
  7890  003A20  C01D  F095         	movff	?___fldiv+2,_set_pwm_duty_cycle_RC2_RightSlave$2030+2
  7891  003A24  C01E  F096         	movff	?___fldiv+3,_set_pwm_duty_cycle_RC2_RightSlave$2030+3
  7892                           
  7893                           ;driving.c: 71:         unsigned short duty_val = (unsigned short)(
  7894  003A28  C097  F01B         	movff	set_pwm_duty_cycle_RC2_RightSlave@max_duty_val,___xxtofl@val
  7895  003A2C  C098  F01C         	movff	set_pwm_duty_cycle_RC2_RightSlave@max_duty_val+1,___xxtofl@val+1
  7896  003A30  6A1D               	clrf	___xxtofl@val+2,c
  7897  003A32  6A1E               	clrf	___xxtofl@val+3,c
  7898  003A34  0E00               	movlw	0
  7899  003A36  EC96  F01B         	call	___xxtofl
  7900  003A3A  C01B  F038         	movff	?___xxtofl,___flmul@a
  7901  003A3E  C01C  F039         	movff	?___xxtofl+1,___flmul@a+1
  7902  003A42  C01D  F03A         	movff	?___xxtofl+2,___flmul@a+2
  7903  003A46  C01E  F03B         	movff	?___xxtofl+3,___flmul@a+3
  7904  003A4A  C093  F034         	movff	_set_pwm_duty_cycle_RC2_RightSlave$2030,___flmul@b
  7905  003A4E  C094  F035         	movff	_set_pwm_duty_cycle_RC2_RightSlave$2030+1,___flmul@b+1
  7906  003A52  C095  F036         	movff	_set_pwm_duty_cycle_RC2_RightSlave$2030+2,___flmul@b+2
  7907  003A56  C096  F037         	movff	_set_pwm_duty_cycle_RC2_RightSlave$2030+3,___flmul@b+3
  7908  003A5A  EC82  F012         	call	___flmul	;wreg free
  7909  003A5E  C034  F040         	movff	?___flmul,___fltol@f1
  7910  003A62  C035  F041         	movff	?___flmul+1,___fltol@f1+1
  7911  003A66  C036  F042         	movff	?___flmul+2,___fltol@f1+2
  7912  003A6A  C037  F043         	movff	?___flmul+3,___fltol@f1+3
  7913  003A6E  EC0E  F01F         	call	___fltol	;wreg free
  7914  003A72  C040  F099         	movff	?___fltol,set_pwm_duty_cycle_RC2_RightSlave@duty_val
  7915  003A76  C041  F09A         	movff	?___fltol+1,set_pwm_duty_cycle_RC2_RightSlave@duty_val+1
  7916                           
  7917                           ;driving.c: 76:         CCP1X = duty_val & 2;
  7918  003A7A  9ABD               	bcf	4029,5,c	;volatile
  7919                           
  7920                           ;driving.c: 77:         CCP1Y = duty_val & 1;
  7921  003A7C  0100               	movlb	0	; () banked
  7922  003A7E  A199               	btfss	set_pwm_duty_cycle_RC2_RightSlave@duty_val& (0+255),0,b
  7923  003A80  D002               	goto	u9610
  7924  003A82  88BD               	bsf	4029,4,c	;volatile
  7925  003A84  D001               	goto	u9625
  7926  003A86                     u9610:
  7927  003A86  98BD               	bcf	4029,4,c	;volatile
  7928  003A88                     u9625:
  7929                           
  7930                           ;driving.c: 78:         CCPR1L = duty_val >> 2;
  7931  003A88  C099  F091         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty_val,??_set_pwm_duty_cycle_RC2_RightSlave
  7932  003A8C  C09A  F092         	movff	set_pwm_duty_cycle_RC2_RightSlave@duty_val+1,??_set_pwm_duty_cycle_RC2_RightSlave
      +                          +1
  7933  003A90  0100               	movlb	0	; () banked
  7934  003A92  90D8               	bcf	status,0,c
  7935  003A94  3392               	rrcf	(??_set_pwm_duty_cycle_RC2_RightSlave+1)& (0+255),f,b
  7936  003A96  3391               	rrcf	??_set_pwm_duty_cycle_RC2_RightSlave& (0+255),f,b
  7937  003A98  90D8               	bcf	status,0,c
  7938  003A9A  3392               	rrcf	(??_set_pwm_duty_cycle_RC2_RightSlave+1)& (0+255),f,b
  7939  003A9C  3391               	rrcf	??_set_pwm_duty_cycle_RC2_RightSlave& (0+255),f,b
  7940  003A9E  5191               	movf	??_set_pwm_duty_cycle_RC2_RightSlave& (0+255),w,b
  7941  003AA0  6EBE               	movwf	4030,c	;volatile
  7942  003AA2  0012               	return		;funcret
  7943  003AA4                     __end_of_set_pwm_duty_cycle_RC2_RightSlave:
  7944                           	opt callstack 0
  7945                           
  7946 ;; *************** function _set_pwm_duty_cycle_RC1_LeftMaster *****************
  7947 ;; Defined at:
  7948 ;;		line 82 in file "driving.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  duty            4   13[BANK0 ] float 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  duty_val        2   25[BANK0 ] unsigned short 
  7953 ;;  max_duty_val    2   23[BANK0 ] unsigned short 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;Total ram usage:       14 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    4
  7970 ;; This function calls:
  7971 ;;		___fldiv
  7972 ;;		___flge
  7973 ;;		___flmul
  7974 ;;		___fltol
  7975 ;;		___xxtofl
  7976 ;; This function is called by:
  7977 ;;		_drive
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text31
  7982  003AA4                     __ptext31:
  7983                           	opt callstack 0
  7984  003AA4                     _set_pwm_duty_cycle_RC1_LeftMaster:
  7985                           	opt callstack 25
  7986                           
  7987                           ;driving.c: 83:     if((duty >= 0) && (duty <= 100.0)){
  7988                           
  7989                           ;incstack = 0
  7990  003AA4  0100               	movlb	0	; () banked
  7991  003AA6  BF90               	btfsc	(set_pwm_duty_cycle_RC1_LeftMaster@duty+3)& (0+255),7,b
  7992  003AA8  0012               	return	
  7993                           
  7994                           ; BSR set to: 0
  7995  003AAA  0E00               	movlw	0
  7996  003AAC  6E40               	movwf	___flge@ff1,c
  7997  003AAE  0E00               	movlw	0
  7998  003AB0  6E41               	movwf	___flge@ff1+1,c
  7999  003AB2  0EC8               	movlw	200
  8000  003AB4  6E42               	movwf	___flge@ff1+2,c
  8001  003AB6  0E42               	movlw	66
  8002  003AB8  6E43               	movwf	___flge@ff1+3,c
  8003  003ABA  C08D  F044         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty,___flge@ff2
  8004  003ABE  C08E  F045         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty+1,___flge@ff2+1
  8005  003AC2  C08F  F046         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty+2,___flge@ff2+2
  8006  003AC6  C090  F047         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty+3,___flge@ff2+3
  8007  003ACA  ECDA  F01D         	call	___flge	;wreg free
  8008  003ACE  A0D8               	btfss	status,0,c
  8009  003AD0  0012               	return	
  8010                           
  8011                           ;driving.c: 88:         unsigned short max_duty_val = PR2 + 1;
  8012  003AD2  0E01               	movlw	1
  8013  003AD4  24CB               	addwf	4043,w,c	;volatile
  8014  003AD6  0100               	movlb	0	; () banked
  8015  003AD8  6F97               	movwf	set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val& (0+255),b
  8016  003ADA  6B98               	clrf	(set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val+1)& (0+255),b
  8017  003ADC  0E00               	movlw	0
  8018  003ADE  2398               	addwfc	(set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val+1)& (0+255),f,b
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;driving.c: 89:         unsigned short duty_val = (unsigned short)(
  8022  003AE0  0E00               	movlw	0
  8023  003AE2  6E1F               	movwf	___fldiv@a,c
  8024  003AE4  0E00               	movlw	0
  8025  003AE6  6E20               	movwf	___fldiv@a+1,c
  8026  003AE8  0EC8               	movlw	200
  8027  003AEA  6E21               	movwf	___fldiv@a+2,c
  8028  003AEC  0E42               	movlw	66
  8029  003AEE  6E22               	movwf	___fldiv@a+3,c
  8030  003AF0  0E00               	movlw	0
  8031  003AF2  6E38               	movwf	___flmul@a,c
  8032  003AF4  0E00               	movlw	0
  8033  003AF6  6E39               	movwf	___flmul@a+1,c
  8034  003AF8  0E80               	movlw	128
  8035  003AFA  6E3A               	movwf	___flmul@a+2,c
  8036  003AFC  0E40               	movlw	64
  8037  003AFE  6E3B               	movwf	___flmul@a+3,c
  8038  003B00  C08D  F034         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty,___flmul@b
  8039  003B04  C08E  F035         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty+1,___flmul@b+1
  8040  003B08  C08F  F036         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty+2,___flmul@b+2
  8041  003B0C  C090  F037         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty+3,___flmul@b+3
  8042  003B10  EC82  F012         	call	___flmul	;wreg free
  8043  003B14  C034  F01B         	movff	?___flmul,___fldiv@b
  8044  003B18  C035  F01C         	movff	?___flmul+1,___fldiv@b+1
  8045  003B1C  C036  F01D         	movff	?___flmul+2,___fldiv@b+2
  8046  003B20  C037  F01E         	movff	?___flmul+3,___fldiv@b+3
  8047  003B24  EC38  F017         	call	___fldiv	;wreg free
  8048  003B28  C01B  F093         	movff	?___fldiv,_set_pwm_duty_cycle_RC1_LeftMaster$2031
  8049  003B2C  C01C  F094         	movff	?___fldiv+1,_set_pwm_duty_cycle_RC1_LeftMaster$2031+1
  8050  003B30  C01D  F095         	movff	?___fldiv+2,_set_pwm_duty_cycle_RC1_LeftMaster$2031+2
  8051  003B34  C01E  F096         	movff	?___fldiv+3,_set_pwm_duty_cycle_RC1_LeftMaster$2031+3
  8052                           
  8053                           ;driving.c: 89:         unsigned short duty_val = (unsigned short)(
  8054  003B38  C097  F01B         	movff	set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val,___xxtofl@val
  8055  003B3C  C098  F01C         	movff	set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val+1,___xxtofl@val+1
  8056  003B40  6A1D               	clrf	___xxtofl@val+2,c
  8057  003B42  6A1E               	clrf	___xxtofl@val+3,c
  8058  003B44  0E00               	movlw	0
  8059  003B46  EC96  F01B         	call	___xxtofl
  8060  003B4A  C01B  F038         	movff	?___xxtofl,___flmul@a
  8061  003B4E  C01C  F039         	movff	?___xxtofl+1,___flmul@a+1
  8062  003B52  C01D  F03A         	movff	?___xxtofl+2,___flmul@a+2
  8063  003B56  C01E  F03B         	movff	?___xxtofl+3,___flmul@a+3
  8064  003B5A  C093  F034         	movff	_set_pwm_duty_cycle_RC1_LeftMaster$2031,___flmul@b
  8065  003B5E  C094  F035         	movff	_set_pwm_duty_cycle_RC1_LeftMaster$2031+1,___flmul@b+1
  8066  003B62  C095  F036         	movff	_set_pwm_duty_cycle_RC1_LeftMaster$2031+2,___flmul@b+2
  8067  003B66  C096  F037         	movff	_set_pwm_duty_cycle_RC1_LeftMaster$2031+3,___flmul@b+3
  8068  003B6A  EC82  F012         	call	___flmul	;wreg free
  8069  003B6E  C034  F040         	movff	?___flmul,___fltol@f1
  8070  003B72  C035  F041         	movff	?___flmul+1,___fltol@f1+1
  8071  003B76  C036  F042         	movff	?___flmul+2,___fltol@f1+2
  8072  003B7A  C037  F043         	movff	?___flmul+3,___fltol@f1+3
  8073  003B7E  EC0E  F01F         	call	___fltol	;wreg free
  8074  003B82  C040  F099         	movff	?___fltol,set_pwm_duty_cycle_RC1_LeftMaster@duty_val
  8075  003B86  C041  F09A         	movff	?___fltol+1,set_pwm_duty_cycle_RC1_LeftMaster@duty_val+1
  8076                           
  8077                           ;driving.c: 94:         CCP2X = duty_val & 2;
  8078  003B8A  9ABA               	bcf	4026,5,c	;volatile
  8079                           
  8080                           ;driving.c: 95:         CCP2Y = duty_val & 1;
  8081  003B8C  0100               	movlb	0	; () banked
  8082  003B8E  A199               	btfss	set_pwm_duty_cycle_RC1_LeftMaster@duty_val& (0+255),0,b
  8083  003B90  D002               	goto	u9650
  8084  003B92  88BA               	bsf	4026,4,c	;volatile
  8085  003B94  D001               	goto	u9665
  8086  003B96                     u9650:
  8087  003B96  98BA               	bcf	4026,4,c	;volatile
  8088  003B98                     u9665:
  8089                           
  8090                           ;driving.c: 96:         CCPR2L = duty_val >> 2;
  8091  003B98  C099  F091         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty_val,??_set_pwm_duty_cycle_RC1_LeftMaster
  8092  003B9C  C09A  F092         	movff	set_pwm_duty_cycle_RC1_LeftMaster@duty_val+1,??_set_pwm_duty_cycle_RC1_LeftMaster
      +                          +1
  8093  003BA0  0100               	movlb	0	; () banked
  8094  003BA2  90D8               	bcf	status,0,c
  8095  003BA4  3392               	rrcf	(??_set_pwm_duty_cycle_RC1_LeftMaster+1)& (0+255),f,b
  8096  003BA6  3391               	rrcf	??_set_pwm_duty_cycle_RC1_LeftMaster& (0+255),f,b
  8097  003BA8  90D8               	bcf	status,0,c
  8098  003BAA  3392               	rrcf	(??_set_pwm_duty_cycle_RC1_LeftMaster+1)& (0+255),f,b
  8099  003BAC  3391               	rrcf	??_set_pwm_duty_cycle_RC1_LeftMaster& (0+255),f,b
  8100  003BAE  5191               	movf	??_set_pwm_duty_cycle_RC1_LeftMaster& (0+255),w,b
  8101  003BB0  6EBB               	movwf	4027,c	;volatile
  8102  003BB2  0012               	return		;funcret
  8103  003BB4                     __end_of_set_pwm_duty_cycle_RC1_LeftMaster:
  8104                           	opt callstack 0
  8105                           
  8106 ;; *************** function ___xxtofl *****************
  8107 ;; Defined at:
  8108 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  sign            1    wreg     unsigned char 
  8111 ;;  val             4   26[COMRAM] long 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  sign            1   34[COMRAM] unsigned char 
  8114 ;;  arg             4   36[COMRAM] unsigned long 
  8115 ;;  exp             1   35[COMRAM] unsigned char 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  4   26[COMRAM] unsigned char 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;Total ram usage:       14 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    3
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_drive
  8136 ;;		_set_pwm_duty_cycle_RC2_RightSlave
  8137 ;;		_set_pwm_duty_cycle_RC1_LeftMaster
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text32
  8142  00372C                     __ptext32:
  8143                           	opt callstack 0
  8144  00372C                     ___xxtofl:
  8145                           	opt callstack 25
  8146                           
  8147                           ;incstack = 0
  8148                           ;___xxtofl@sign stored from wreg
  8149  00372C  6E23               	movwf	___xxtofl@sign,c
  8150  00372E  5023               	movf	___xxtofl@sign,w,c
  8151  003730  A4D8               	btfss	status,2,c
  8152  003732  AE1E               	btfss	___xxtofl@val+3,7,c
  8153  003734  D01A               	goto	l1388
  8154  003736  C01B  F01F         	movff	___xxtofl@val,??___xxtofl
  8155  00373A  C01C  F020         	movff	___xxtofl@val+1,??___xxtofl+1
  8156  00373E  C01D  F021         	movff	___xxtofl@val+2,??___xxtofl+2
  8157  003742  C01E  F022         	movff	___xxtofl@val+3,??___xxtofl+3
  8158  003746  1E1F               	comf	??___xxtofl,f,c
  8159  003748  1E20               	comf	??___xxtofl+1,f,c
  8160  00374A  1E21               	comf	??___xxtofl+2,f,c
  8161  00374C  1E22               	comf	??___xxtofl+3,f,c
  8162  00374E  2A1F               	incf	??___xxtofl,f,c
  8163  003750  0E00               	movlw	0
  8164  003752  2220               	addwfc	??___xxtofl+1,f,c
  8165  003754  2221               	addwfc	??___xxtofl+2,f,c
  8166  003756  2222               	addwfc	??___xxtofl+3,f,c
  8167  003758  C01F  F025         	movff	??___xxtofl,___xxtofl@arg
  8168  00375C  C020  F026         	movff	??___xxtofl+1,___xxtofl@arg+1
  8169  003760  C021  F027         	movff	??___xxtofl+2,___xxtofl@arg+2
  8170  003764  C022  F028         	movff	??___xxtofl+3,___xxtofl@arg+3
  8171  003768  D008               	goto	l7952
  8172  00376A                     l1388:
  8173  00376A  C01B  F025         	movff	___xxtofl@val,___xxtofl@arg
  8174  00376E  C01C  F026         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8175  003772  C01D  F027         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8176  003776  C01E  F028         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8177  00377A                     l7952:
  8178  00377A  501B               	movf	___xxtofl@val,w,c
  8179  00377C  101C               	iorwf	___xxtofl@val+1,w,c
  8180  00377E  101D               	iorwf	___xxtofl@val+2,w,c
  8181  003780  101E               	iorwf	___xxtofl@val+3,w,c
  8182  003782  A4D8               	btfss	status,2,c
  8183  003784  D009               	goto	l7958
  8184  003786  0E00               	movlw	0
  8185  003788  6E1B               	movwf	?___xxtofl,c
  8186  00378A  0E00               	movlw	0
  8187  00378C  6E1C               	movwf	?___xxtofl+1,c
  8188  00378E  0E00               	movlw	0
  8189  003790  6E1D               	movwf	?___xxtofl+2,c
  8190  003792  0E00               	movlw	0
  8191  003794  6E1E               	movwf	?___xxtofl+3,c
  8192  003796  0012               	return	
  8193  003798                     l7958:
  8194  003798  0E96               	movlw	150
  8195  00379A  6E24               	movwf	___xxtofl@exp,c
  8196  00379C  D006               	goto	l7962
  8197  00379E                     l7960:
  8198  00379E  2A24               	incf	___xxtofl@exp,f,c
  8199  0037A0  90D8               	bcf	status,0,c
  8200  0037A2  3228               	rrcf	___xxtofl@arg+3,f,c
  8201  0037A4  3227               	rrcf	___xxtofl@arg+2,f,c
  8202  0037A6  3226               	rrcf	___xxtofl@arg+1,f,c
  8203  0037A8  3225               	rrcf	___xxtofl@arg,f,c
  8204  0037AA                     l7962:
  8205  0037AA  0E00               	movlw	0
  8206  0037AC  1425               	andwf	___xxtofl@arg,w,c
  8207  0037AE  6E1F               	movwf	??___xxtofl& (0+255),c
  8208  0037B0  0E00               	movlw	0
  8209  0037B2  1426               	andwf	___xxtofl@arg+1,w,c
  8210  0037B4  6E20               	movwf	(??___xxtofl+1)& (0+255),c
  8211  0037B6  0E00               	movlw	0
  8212  0037B8  1427               	andwf	___xxtofl@arg+2,w,c
  8213  0037BA  6E21               	movwf	(??___xxtofl+2)& (0+255),c
  8214  0037BC  0EFE               	movlw	254
  8215  0037BE  1428               	andwf	___xxtofl@arg+3,w,c
  8216  0037C0  6E22               	movwf	(??___xxtofl+3)& (0+255),c
  8217  0037C2  501F               	movf	??___xxtofl,w,c
  8218  0037C4  1020               	iorwf	??___xxtofl+1,w,c
  8219  0037C6  1021               	iorwf	??___xxtofl+2,w,c
  8220  0037C8  1022               	iorwf	??___xxtofl+3,w,c
  8221  0037CA  B4D8               	btfsc	status,2,c
  8222  0037CC  D00D               	goto	l1395
  8223  0037CE  D7E7               	goto	l7960
  8224  0037D0                     l7964:
  8225  0037D0  2A24               	incf	___xxtofl@exp,f,c
  8226  0037D2  0E01               	movlw	1
  8227  0037D4  2625               	addwf	___xxtofl@arg,f,c
  8228  0037D6  0E00               	movlw	0
  8229  0037D8  2226               	addwfc	___xxtofl@arg+1,f,c
  8230  0037DA  2227               	addwfc	___xxtofl@arg+2,f,c
  8231  0037DC  2228               	addwfc	___xxtofl@arg+3,f,c
  8232  0037DE  90D8               	bcf	status,0,c
  8233  0037E0  3228               	rrcf	___xxtofl@arg+3,f,c
  8234  0037E2  3227               	rrcf	___xxtofl@arg+2,f,c
  8235  0037E4  3226               	rrcf	___xxtofl@arg+1,f,c
  8236  0037E6  3225               	rrcf	___xxtofl@arg,f,c
  8237  0037E8                     l1395:
  8238  0037E8  0E00               	movlw	0
  8239  0037EA  1425               	andwf	___xxtofl@arg,w,c
  8240  0037EC  6E1F               	movwf	??___xxtofl& (0+255),c
  8241  0037EE  0E00               	movlw	0
  8242  0037F0  1426               	andwf	___xxtofl@arg+1,w,c
  8243  0037F2  6E20               	movwf	(??___xxtofl+1)& (0+255),c
  8244  0037F4  0E00               	movlw	0
  8245  0037F6  1427               	andwf	___xxtofl@arg+2,w,c
  8246  0037F8  6E21               	movwf	(??___xxtofl+2)& (0+255),c
  8247  0037FA  0EFF               	movlw	255
  8248  0037FC  1428               	andwf	___xxtofl@arg+3,w,c
  8249  0037FE  6E22               	movwf	(??___xxtofl+3)& (0+255),c
  8250  003800  501F               	movf	??___xxtofl,w,c
  8251  003802  1020               	iorwf	??___xxtofl+1,w,c
  8252  003804  1021               	iorwf	??___xxtofl+2,w,c
  8253  003806  1022               	iorwf	??___xxtofl+3,w,c
  8254  003808  B4D8               	btfsc	status,2,c
  8255  00380A  D007               	goto	l7972
  8256  00380C  D7E1               	goto	l7964
  8257  00380E                     l7970:
  8258  00380E  0624               	decf	___xxtofl@exp,f,c
  8259  003810  90D8               	bcf	status,0,c
  8260  003812  3625               	rlcf	___xxtofl@arg,f,c
  8261  003814  3626               	rlcf	___xxtofl@arg+1,f,c
  8262  003816  3627               	rlcf	___xxtofl@arg+2,f,c
  8263  003818  3628               	rlcf	___xxtofl@arg+3,f,c
  8264  00381A                     l7972:
  8265  00381A  BE27               	btfsc	___xxtofl@arg+2,7,c
  8266  00381C  D003               	goto	u9550
  8267  00381E  0E02               	movlw	2
  8268  003820  6024               	cpfslt	___xxtofl@exp,c
  8269  003822  D7F5               	goto	l7970
  8270  003824                     u9550:
  8271  003824  A024               	btfss	___xxtofl@exp,0,c
  8272  003826  9E27               	bcf	___xxtofl@arg+2,7,c
  8273  003828  90D8               	bcf	status,0,c
  8274  00382A  3224               	rrcf	___xxtofl@exp,f,c
  8275  00382C  C024  F01F         	movff	___xxtofl@exp,??___xxtofl
  8276  003830  6A20               	clrf	(??___xxtofl+1)& (0+255),c
  8277  003832  6A21               	clrf	(??___xxtofl+2)& (0+255),c
  8278  003834  6A22               	clrf	(??___xxtofl+3)& (0+255),c
  8279  003836  C01F  F022         	movff	??___xxtofl,??___xxtofl+3
  8280  00383A  6A21               	clrf	??___xxtofl+2,c
  8281  00383C  6A20               	clrf	??___xxtofl+1,c
  8282  00383E  6A1F               	clrf	??___xxtofl,c
  8283  003840  501F               	movf	??___xxtofl,w,c
  8284  003842  1225               	iorwf	___xxtofl@arg,f,c
  8285  003844  5020               	movf	??___xxtofl+1,w,c
  8286  003846  1226               	iorwf	___xxtofl@arg+1,f,c
  8287  003848  5021               	movf	??___xxtofl+2,w,c
  8288  00384A  1227               	iorwf	___xxtofl@arg+2,f,c
  8289  00384C  5022               	movf	??___xxtofl+3,w,c
  8290  00384E  1228               	iorwf	___xxtofl@arg+3,f,c
  8291  003850  5023               	movf	___xxtofl@sign,w,c
  8292  003852  A4D8               	btfss	status,2,c
  8293  003854  AE1E               	btfss	___xxtofl@val+3,7,c
  8294  003856  D001               	goto	l7988
  8295  003858  8E28               	bsf	___xxtofl@arg+3,7,c
  8296  00385A                     l7988:
  8297  00385A  C025  F01B         	movff	___xxtofl@arg,?___xxtofl
  8298  00385E  C026  F01C         	movff	___xxtofl@arg+1,?___xxtofl+1
  8299  003862  C027  F01D         	movff	___xxtofl@arg+2,?___xxtofl+2
  8300  003866  C028  F01E         	movff	___xxtofl@arg+3,?___xxtofl+3
  8301  00386A  0012               	return		;funcret
  8302  00386C                     __end_of___xxtofl:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function ___fltol *****************
  8306 ;; Defined at:
  8307 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  f1              4   63[COMRAM] unsigned char 
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  exp1            1   72[COMRAM] unsigned char 
  8312 ;;  sign1           1   71[COMRAM] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  4   63[COMRAM] long 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;Total ram usage:       10 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    3
  8329 ;; This function calls:
  8330 ;;		Nothing
  8331 ;; This function is called by:
  8332 ;;		_set_pwm_duty_cycle_RC2_RightSlave
  8333 ;;		_set_pwm_duty_cycle_RC1_LeftMaster
  8334 ;;		_efgtoa
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text33
  8339  003E1C                     __ptext33:
  8340                           	opt callstack 0
  8341  003E1C                     ___fltol:
  8342                           	opt callstack 23
  8343                           
  8344                           ;incstack = 0
  8345  003E1C  3442               	rlcf	___fltol@f1+2,w,c
  8346  003E1E  3443               	rlcf	___fltol@f1+3,w,c
  8347  003E20  6E49               	movwf	___fltol@exp1,c
  8348  003E22  5049               	movf	___fltol@exp1,w,c
  8349  003E24  A4D8               	btfss	status,2,c
  8350  003E26  D009               	goto	l7316
  8351  003E28                     u8430:
  8352  003E28  0E00               	movlw	0
  8353  003E2A  6E40               	movwf	?___fltol,c
  8354  003E2C  0E00               	movlw	0
  8355  003E2E  6E41               	movwf	?___fltol+1,c
  8356  003E30  0E00               	movlw	0
  8357  003E32  6E42               	movwf	?___fltol+2,c
  8358  003E34  0E00               	movlw	0
  8359  003E36  6E43               	movwf	?___fltol+3,c
  8360  003E38  0012               	return	
  8361  003E3A                     l7316:
  8362  003E3A  C040  F044         	movff	___fltol@f1,??___fltol
  8363  003E3E  C041  F045         	movff	___fltol@f1+1,??___fltol+1
  8364  003E42  C042  F046         	movff	___fltol@f1+2,??___fltol+2
  8365  003E46  C043  F047         	movff	___fltol@f1+3,??___fltol+3
  8366  003E4A  0E20               	movlw	32
  8367  003E4C  D005               	goto	u8440
  8368  003E4E                     u8445:
  8369  003E4E  90D8               	bcf	status,0,c
  8370  003E50  3247               	rrcf	??___fltol+3,f,c
  8371  003E52  3246               	rrcf	??___fltol+2,f,c
  8372  003E54  3245               	rrcf	??___fltol+1,f,c
  8373  003E56  3244               	rrcf	??___fltol,f,c
  8374  003E58                     u8440:
  8375  003E58  2EE8               	decfsz	wreg,f,c
  8376  003E5A  D7F9               	goto	u8445
  8377  003E5C  5044               	movf	??___fltol,w,c
  8378  003E5E  6E48               	movwf	___fltol@sign1,c
  8379  003E60  8E42               	bsf	___fltol@f1+2,7,c
  8380  003E62  0EFF               	movlw	255
  8381  003E64  1640               	andwf	___fltol@f1,f,c
  8382  003E66  0EFF               	movlw	255
  8383  003E68  1641               	andwf	___fltol@f1+1,f,c
  8384  003E6A  0EFF               	movlw	255
  8385  003E6C  1642               	andwf	___fltol@f1+2,f,c
  8386  003E6E  0E00               	movlw	0
  8387  003E70  1643               	andwf	___fltol@f1+3,f,c
  8388  003E72  0E96               	movlw	150
  8389  003E74  5E49               	subwf	___fltol@exp1,f,c
  8390  003E76  AE49               	btfss	___fltol@exp1,7,c
  8391  003E78  D00D               	goto	l7336
  8392  003E7A  5049               	movf	___fltol@exp1,w,c
  8393  003E7C  0A80               	xorlw	128
  8394  003E7E  0F97               	addlw	151
  8395  003E80  A0D8               	btfss	status,0,c
  8396  003E82  D7D2               	goto	u8430
  8397  003E84                     l7332:
  8398  003E84  90D8               	bcf	status,0,c
  8399  003E86  3243               	rrcf	___fltol@f1+3,f,c
  8400  003E88  3242               	rrcf	___fltol@f1+2,f,c
  8401  003E8A  3241               	rrcf	___fltol@f1+1,f,c
  8402  003E8C  3240               	rrcf	___fltol@f1,f,c
  8403  003E8E  3E49               	incfsz	___fltol@exp1,f,c
  8404  003E90  D7F9               	goto	l7332
  8405  003E92  D00D               	goto	u8480
  8406  003E94                     l7336:
  8407  003E94  0E1F               	movlw	31
  8408  003E96  6449               	cpfsgt	___fltol@exp1,c
  8409  003E98  D007               	goto	l7344
  8410  003E9A  D7C6               	goto	u8430
  8411  003E9C                     l7342:
  8412  003E9C  90D8               	bcf	status,0,c
  8413  003E9E  3640               	rlcf	___fltol@f1,f,c
  8414  003EA0  3641               	rlcf	___fltol@f1+1,f,c
  8415  003EA2  3642               	rlcf	___fltol@f1+2,f,c
  8416  003EA4  3643               	rlcf	___fltol@f1+3,f,c
  8417  003EA6  0649               	decf	___fltol@exp1,f,c
  8418  003EA8                     l7344:
  8419  003EA8  5049               	movf	___fltol@exp1,w,c
  8420  003EAA  A4D8               	btfss	status,2,c
  8421  003EAC  D7F7               	goto	l7342
  8422  003EAE                     u8480:
  8423  003EAE  5048               	movf	___fltol@sign1,w,c
  8424  003EB0  B4D8               	btfsc	status,2,c
  8425  003EB2  D008               	goto	l7350
  8426  003EB4  1E43               	comf	___fltol@f1+3,f,c
  8427  003EB6  1E42               	comf	___fltol@f1+2,f,c
  8428  003EB8  1E41               	comf	___fltol@f1+1,f,c
  8429  003EBA  6C40               	negf	___fltol@f1,c
  8430  003EBC  0E00               	movlw	0
  8431  003EBE  2241               	addwfc	___fltol@f1+1,f,c
  8432  003EC0  2242               	addwfc	___fltol@f1+2,f,c
  8433  003EC2  2243               	addwfc	___fltol@f1+3,f,c
  8434  003EC4                     l7350:
  8435  003EC4  C040  F040         	movff	___fltol@f1,?___fltol
  8436  003EC8  C041  F041         	movff	___fltol@f1+1,?___fltol+1
  8437  003ECC  C042  F042         	movff	___fltol@f1+2,?___fltol+2
  8438  003ED0  C043  F043         	movff	___fltol@f1+3,?___fltol+3
  8439  003ED4  0012               	return		;funcret
  8440  003ED6                     __end_of___fltol:
  8441                           	opt callstack 0
  8442                           
  8443 ;; *************** function ___flmul *****************
  8444 ;; Defined at:
  8445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;  b               4   51[COMRAM] long 
  8448 ;;  a               4   55[COMRAM] long 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  prod            4    7[BANK0 ] struct .
  8451 ;;  grs             4    2[BANK0 ] unsigned long 
  8452 ;;  temp            2   11[BANK0 ] struct .
  8453 ;;  bexp            1    6[BANK0 ] unsigned char 
  8454 ;;  aexp            1    1[BANK0 ] unsigned char 
  8455 ;;  sign            1    0[BANK0 ] unsigned char 
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  4   51[COMRAM] unsigned char 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0, prodl, prodh
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8465 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8468 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;Total ram usage:       25 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    3
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_main
  8476 ;;		_set_pwm_duty_cycle_RC2_RightSlave
  8477 ;;		_set_pwm_duty_cycle_RC1_LeftMaster
  8478 ;;		_efgtoa
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           	psect	text34
  8483  002504                     __ptext34:
  8484                           	opt callstack 0
  8485  002504                     ___flmul:
  8486                           	opt callstack 23
  8487                           
  8488                           ;incstack = 0
  8489  002504  5037               	movf	___flmul@b+3,w,c
  8490  002506  0B80               	andlw	128
  8491  002508  0100               	movlb	0	; () banked
  8492  00250A  6F80               	movwf	___flmul@sign& (0+255),b
  8493  00250C  5037               	movf	___flmul@b+3,w,c
  8494  00250E  2437               	addwf	___flmul@b+3,w,c
  8495  002510  6F86               	movwf	___flmul@bexp& (0+255),b
  8496                           
  8497                           ; BSR set to: 0
  8498  002512  BE36               	btfsc	___flmul@b+2,7,c
  8499                           
  8500                           ; BSR set to: 0
  8501  002514  8186               	bsf	___flmul@bexp& (0+255),0,b
  8502                           
  8503                           ; BSR set to: 0
  8504  002516  5186               	movf	___flmul@bexp& (0+255),w,b
  8505  002518  B4D8               	btfsc	status,2,c
  8506  00251A  D00D               	goto	l7062
  8507                           
  8508                           ; BSR set to: 0
  8509  00251C  2986               	incf	___flmul@bexp& (0+255),w,b
  8510  00251E  A4D8               	btfss	status,2,c
  8511  002520  D008               	goto	l7060
  8512                           
  8513                           ; BSR set to: 0
  8514  002522  0E00               	movlw	0
  8515  002524  6E34               	movwf	___flmul@b,c
  8516  002526  0E00               	movlw	0
  8517  002528  6E35               	movwf	___flmul@b+1,c
  8518  00252A  0E00               	movlw	0
  8519  00252C  6E36               	movwf	___flmul@b+2,c
  8520  00252E  0E00               	movlw	0
  8521  002530  6E37               	movwf	___flmul@b+3,c
  8522  002532                     l7060:
  8523                           
  8524                           ; BSR set to: 0
  8525  002532  8E36               	bsf	___flmul@b+2,7,c
  8526  002534  D008               	goto	l7064
  8527  002536                     l7062:
  8528                           
  8529                           ; BSR set to: 0
  8530  002536  0E00               	movlw	0
  8531  002538  6E34               	movwf	___flmul@b,c
  8532  00253A  0E00               	movlw	0
  8533  00253C  6E35               	movwf	___flmul@b+1,c
  8534  00253E  0E00               	movlw	0
  8535  002540  6E36               	movwf	___flmul@b+2,c
  8536  002542  0E00               	movlw	0
  8537  002544  6E37               	movwf	___flmul@b+3,c
  8538  002546                     l7064:
  8539                           
  8540                           ; BSR set to: 0
  8541  002546  503B               	movf	___flmul@a+3,w,c
  8542  002548  0B80               	andlw	128
  8543  00254A  1B80               	xorwf	___flmul@sign& (0+255),f,b
  8544                           
  8545                           ; BSR set to: 0
  8546  00254C  503B               	movf	___flmul@a+3,w,c
  8547  00254E  243B               	addwf	___flmul@a+3,w,c
  8548  002550  6F81               	movwf	___flmul@aexp& (0+255),b
  8549                           
  8550                           ; BSR set to: 0
  8551  002552  BE3A               	btfsc	___flmul@a+2,7,c
  8552                           
  8553                           ; BSR set to: 0
  8554  002554  8181               	bsf	___flmul@aexp& (0+255),0,b
  8555                           
  8556                           ; BSR set to: 0
  8557  002556  5181               	movf	___flmul@aexp& (0+255),w,b
  8558  002558  B4D8               	btfsc	status,2,c
  8559  00255A  D00D               	goto	l7080
  8560                           
  8561                           ; BSR set to: 0
  8562  00255C  2981               	incf	___flmul@aexp& (0+255),w,b
  8563  00255E  A4D8               	btfss	status,2,c
  8564  002560  D008               	goto	l7078
  8565                           
  8566                           ; BSR set to: 0
  8567  002562  0E00               	movlw	0
  8568  002564  6E38               	movwf	___flmul@a,c
  8569  002566  0E00               	movlw	0
  8570  002568  6E39               	movwf	___flmul@a+1,c
  8571  00256A  0E00               	movlw	0
  8572  00256C  6E3A               	movwf	___flmul@a+2,c
  8573  00256E  0E00               	movlw	0
  8574  002570  6E3B               	movwf	___flmul@a+3,c
  8575  002572                     l7078:
  8576                           
  8577                           ; BSR set to: 0
  8578  002572  8E3A               	bsf	___flmul@a+2,7,c
  8579  002574  D008               	goto	l1347
  8580  002576                     l7080:
  8581                           
  8582                           ; BSR set to: 0
  8583  002576  0E00               	movlw	0
  8584  002578  6E38               	movwf	___flmul@a,c
  8585  00257A  0E00               	movlw	0
  8586  00257C  6E39               	movwf	___flmul@a+1,c
  8587  00257E  0E00               	movlw	0
  8588  002580  6E3A               	movwf	___flmul@a+2,c
  8589  002582  0E00               	movlw	0
  8590  002584  6E3B               	movwf	___flmul@a+3,c
  8591  002586                     l1347:
  8592                           
  8593                           ; BSR set to: 0
  8594  002586  5181               	movf	___flmul@aexp& (0+255),w,b
  8595  002588  B4D8               	btfsc	status,2,c
  8596  00258A  D003               	goto	u8100
  8597                           
  8598                           ; BSR set to: 0
  8599  00258C  5186               	movf	___flmul@bexp& (0+255),w,b
  8600  00258E  A4D8               	btfss	status,2,c
  8601  002590  D009               	goto	l7088
  8602  002592                     u8100:
  8603                           
  8604                           ; BSR set to: 0
  8605  002592  0E00               	movlw	0
  8606  002594  6E34               	movwf	?___flmul,c
  8607  002596  0E00               	movlw	0
  8608  002598  6E35               	movwf	?___flmul+1,c
  8609  00259A  0E00               	movlw	0
  8610  00259C  6E36               	movwf	?___flmul+2,c
  8611  00259E  0E00               	movlw	0
  8612  0025A0  6E37               	movwf	?___flmul+3,c
  8613  0025A2  0012               	return	
  8614  0025A4                     l7088:
  8615                           
  8616                           ; BSR set to: 0
  8617  0025A4  503A               	movf	___flmul@a+2,w,c
  8618  0025A6  0234               	mulwf	___flmul@b,c
  8619  0025A8  CFF3 F08B          	movff	prodl,___flmul@temp
  8620  0025AC  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8621                           
  8622                           ; BSR set to: 0
  8623  0025B0  518B               	movf	___flmul@temp& (0+255),w,b
  8624  0025B2  6F82               	movwf	___flmul@grs& (0+255),b
  8625  0025B4  6B83               	clrf	(___flmul@grs+1)& (0+255),b
  8626  0025B6  6B84               	clrf	(___flmul@grs+2)& (0+255),b
  8627  0025B8  6B85               	clrf	(___flmul@grs+3)& (0+255),b
  8628                           
  8629                           ; BSR set to: 0
  8630  0025BA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8631  0025BC  6F87               	movwf	___flmul@prod& (0+255),b
  8632  0025BE  6B88               	clrf	(___flmul@prod+1)& (0+255),b
  8633  0025C0  6B89               	clrf	(___flmul@prod+2)& (0+255),b
  8634  0025C2  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
  8635  0025C4  5039               	movf	___flmul@a+1,w,c
  8636  0025C6  0235               	mulwf	___flmul@b+1,c
  8637  0025C8  CFF3 F08B          	movff	prodl,___flmul@temp
  8638  0025CC  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8639                           
  8640                           ; BSR set to: 0
  8641  0025D0  518B               	movf	___flmul@temp& (0+255),w,b
  8642  0025D2  2782               	addwf	___flmul@grs& (0+255),f,b
  8643  0025D4  0E00               	movlw	0
  8644  0025D6  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8645  0025D8  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8646  0025DA  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8647                           
  8648                           ; BSR set to: 0
  8649  0025DC  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8650  0025DE  2787               	addwf	___flmul@prod& (0+255),f,b
  8651  0025E0  0E00               	movlw	0
  8652  0025E2  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8653  0025E4  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8654  0025E6  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8655  0025E8  5038               	movf	___flmul@a,w,c
  8656  0025EA  0236               	mulwf	___flmul@b+2,c
  8657  0025EC  CFF3 F08B          	movff	prodl,___flmul@temp
  8658  0025F0  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8659                           
  8660                           ; BSR set to: 0
  8661  0025F4  518B               	movf	___flmul@temp& (0+255),w,b
  8662  0025F6  2782               	addwf	___flmul@grs& (0+255),f,b
  8663  0025F8  0E00               	movlw	0
  8664  0025FA  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8665  0025FC  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8666  0025FE  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8667                           
  8668                           ; BSR set to: 0
  8669  002600  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8670  002602  2787               	addwf	___flmul@prod& (0+255),f,b
  8671  002604  0E00               	movlw	0
  8672  002606  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8673  002608  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8674  00260A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8675                           
  8676                           ; BSR set to: 0
  8677  00260C  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
  8678  002610  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
  8679  002614  C082  F083         	movff	___flmul@grs,___flmul@grs+1
  8680  002618  6B82               	clrf	___flmul@grs& (0+255),b
  8681                           
  8682                           ; BSR set to: 0
  8683  00261A  5038               	movf	___flmul@a,w,c
  8684  00261C  0235               	mulwf	___flmul@b+1,c
  8685  00261E  CFF3 F08B          	movff	prodl,___flmul@temp
  8686  002622  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8687                           
  8688                           ; BSR set to: 0
  8689  002626  518B               	movf	___flmul@temp& (0+255),w,b
  8690  002628  2782               	addwf	___flmul@grs& (0+255),f,b
  8691  00262A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8692  00262C  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8693  00262E  0E00               	movlw	0
  8694  002630  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8695  002632  0E00               	movlw	0
  8696  002634  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699  002636  5039               	movf	___flmul@a+1,w,c
  8700  002638  0234               	mulwf	___flmul@b,c
  8701  00263A  CFF3 F08B          	movff	prodl,___flmul@temp
  8702  00263E  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8703                           
  8704                           ; BSR set to: 0
  8705  002642  518B               	movf	___flmul@temp& (0+255),w,b
  8706  002644  2782               	addwf	___flmul@grs& (0+255),f,b
  8707  002646  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8708  002648  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8709  00264A  0E00               	movlw	0
  8710  00264C  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8711  00264E  0E00               	movlw	0
  8712  002650  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8713                           
  8714                           ; BSR set to: 0
  8715  002652  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
  8716  002656  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
  8717  00265A  C082  F083         	movff	___flmul@grs,___flmul@grs+1
  8718  00265E  6B82               	clrf	___flmul@grs& (0+255),b
  8719  002660  5038               	movf	___flmul@a,w,c
  8720  002662  0234               	mulwf	___flmul@b,c
  8721  002664  CFF3 F08B          	movff	prodl,___flmul@temp
  8722  002668  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8723                           
  8724                           ; BSR set to: 0
  8725  00266C  518B               	movf	___flmul@temp& (0+255),w,b
  8726  00266E  2782               	addwf	___flmul@grs& (0+255),f,b
  8727  002670  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8728  002672  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8729  002674  0E00               	movlw	0
  8730  002676  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8731  002678  0E00               	movlw	0
  8732  00267A  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8733                           
  8734                           ; BSR set to: 0
  8735  00267C  503A               	movf	___flmul@a+2,w,c
  8736  00267E  0235               	mulwf	___flmul@b+1,c
  8737  002680  CFF3 F08B          	movff	prodl,___flmul@temp
  8738  002684  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8739  002688  518B               	movf	___flmul@temp& (0+255),w,b
  8740  00268A  2787               	addwf	___flmul@prod& (0+255),f,b
  8741  00268C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8742  00268E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8743  002690  0E00               	movlw	0
  8744  002692  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8745  002694  0E00               	movlw	0
  8746  002696  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8747                           
  8748                           ; BSR set to: 0
  8749  002698  5039               	movf	___flmul@a+1,w,c
  8750  00269A  0236               	mulwf	___flmul@b+2,c
  8751  00269C  CFF3 F08B          	movff	prodl,___flmul@temp
  8752  0026A0  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8753                           
  8754                           ; BSR set to: 0
  8755  0026A4  518B               	movf	___flmul@temp& (0+255),w,b
  8756  0026A6  2787               	addwf	___flmul@prod& (0+255),f,b
  8757  0026A8  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8758  0026AA  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8759  0026AC  0E00               	movlw	0
  8760  0026AE  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8761  0026B0  0E00               	movlw	0
  8762  0026B2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8763  0026B4  503A               	movf	___flmul@a+2,w,c
  8764  0026B6  0236               	mulwf	___flmul@b+2,c
  8765  0026B8  CFF3 F08B          	movff	prodl,___flmul@temp
  8766  0026BC  CFF4 F08C          	movff	prodh,___flmul@temp+1
  8767                           
  8768                           ; BSR set to: 0
  8769  0026C0  518B               	movf	___flmul@temp& (0+255),w,b
  8770  0026C2  6E3C               	movwf	??___flmul& (0+255),c
  8771  0026C4  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8772  0026C6  6E3D               	movwf	(??___flmul+1)& (0+255),c
  8773  0026C8  6A3E               	clrf	(??___flmul+2)& (0+255),c
  8774  0026CA  6A3F               	clrf	(??___flmul+3)& (0+255),c
  8775  0026CC  C03E  F03F         	movff	??___flmul+2,??___flmul+3
  8776  0026D0  C03D  F03E         	movff	??___flmul+1,??___flmul+2
  8777  0026D4  C03C  F03D         	movff	??___flmul,??___flmul+1
  8778  0026D8  6A3C               	clrf	??___flmul,c
  8779  0026DA  503C               	movf	??___flmul,w,c
  8780  0026DC  2787               	addwf	___flmul@prod& (0+255),f,b
  8781  0026DE  503D               	movf	??___flmul+1,w,c
  8782  0026E0  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8783  0026E2  503E               	movf	??___flmul+2,w,c
  8784  0026E4  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8785  0026E6  503F               	movf	??___flmul+3,w,c
  8786  0026E8  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8787                           
  8788                           ; BSR set to: 0
  8789  0026EA  C082  F03C         	movff	___flmul@grs,??___flmul
  8790  0026EE  C083  F03D         	movff	___flmul@grs+1,??___flmul+1
  8791  0026F2  C084  F03E         	movff	___flmul@grs+2,??___flmul+2
  8792  0026F6  C085  F03F         	movff	___flmul@grs+3,??___flmul+3
  8793  0026FA  0E19               	movlw	25
  8794  0026FC  D005               	goto	u8110
  8795  0026FE                     u8115:
  8796  0026FE  90D8               	bcf	status,0,c
  8797  002700  323F               	rrcf	??___flmul+3,f,c
  8798  002702  323E               	rrcf	??___flmul+2,f,c
  8799  002704  323D               	rrcf	??___flmul+1,f,c
  8800  002706  323C               	rrcf	??___flmul,f,c
  8801  002708                     u8110:
  8802  002708  2EE8               	decfsz	wreg,f,c
  8803  00270A  D7F9               	goto	u8115
  8804  00270C  503C               	movf	??___flmul,w,c
  8805  00270E  2787               	addwf	___flmul@prod& (0+255),f,b
  8806  002710  503D               	movf	??___flmul+1,w,c
  8807  002712  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8808  002714  503E               	movf	??___flmul+2,w,c
  8809  002716  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8810  002718  503F               	movf	??___flmul+3,w,c
  8811  00271A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8812                           
  8813                           ; BSR set to: 0
  8814  00271C  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
  8815  002720  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
  8816  002724  C082  F083         	movff	___flmul@grs,___flmul@grs+1
  8817  002728  6B82               	clrf	___flmul@grs& (0+255),b
  8818                           
  8819                           ; BSR set to: 0
  8820  00272A  5181               	movf	___flmul@aexp& (0+255),w,b
  8821  00272C  C086  F03C         	movff	___flmul@bexp,??___flmul
  8822  002730  6A3D               	clrf	(??___flmul+1)& (0+255),c
  8823  002732  263C               	addwf	??___flmul,f,c
  8824  002734  0E00               	movlw	0
  8825  002736  223D               	addwfc	??___flmul+1,f,c
  8826  002738  0E82               	movlw	130
  8827  00273A  243C               	addwf	??___flmul,w,c
  8828  00273C  6F8B               	movwf	___flmul@temp& (0+255),b
  8829  00273E  0EFF               	movlw	255
  8830  002740  203D               	addwfc	??___flmul+1,w,c
  8831  002742  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
  8832  002744  D00F               	goto	l7136
  8833  002746                     l7130:
  8834                           
  8835                           ; BSR set to: 0
  8836  002746  90D8               	bcf	status,0,c
  8837  002748  3787               	rlcf	___flmul@prod& (0+255),f,b
  8838  00274A  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8839  00274C  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8840  00274E  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8841                           
  8842                           ; BSR set to: 0
  8843  002750  BF85               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8844                           
  8845                           ; BSR set to: 0
  8846  002752  8187               	bsf	___flmul@prod& (0+255),0,b
  8847                           
  8848                           ; BSR set to: 0
  8849  002754  90D8               	bcf	status,0,c
  8850  002756  3782               	rlcf	___flmul@grs& (0+255),f,b
  8851  002758  3783               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8852  00275A  3784               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8853  00275C  3785               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8854  00275E  078B               	decf	___flmul@temp& (0+255),f,b
  8855  002760  A0D8               	btfss	status,0,c
  8856  002762  078C               	decf	(___flmul@temp+1)& (0+255),f,b
  8857  002764                     l7136:
  8858                           
  8859                           ; BSR set to: 0
  8860  002764  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
  8861  002766  D7EF               	goto	l7130
  8862                           
  8863                           ; BSR set to: 0
  8864  002768  0E00               	movlw	0
  8865  00276A  6F81               	movwf	___flmul@aexp& (0+255),b
  8866                           
  8867                           ; BSR set to: 0
  8868  00276C  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
  8869  00276E  D017               	goto	l1356
  8870                           
  8871                           ; BSR set to: 0
  8872  002770  0EFF               	movlw	255
  8873  002772  1582               	andwf	___flmul@grs& (0+255),w,b
  8874  002774  6E3C               	movwf	??___flmul& (0+255),c
  8875  002776  0EFF               	movlw	255
  8876  002778  1583               	andwf	(___flmul@grs+1)& (0+255),w,b
  8877  00277A  6E3D               	movwf	(??___flmul+1)& (0+255),c
  8878  00277C  0EFF               	movlw	255
  8879  00277E  1584               	andwf	(___flmul@grs+2)& (0+255),w,b
  8880  002780  6E3E               	movwf	(??___flmul+2)& (0+255),c
  8881  002782  0E7F               	movlw	127
  8882  002784  1585               	andwf	(___flmul@grs+3)& (0+255),w,b
  8883  002786  6E3F               	movwf	(??___flmul+3)& (0+255),c
  8884  002788  503C               	movf	??___flmul,w,c
  8885  00278A  103D               	iorwf	??___flmul+1,w,c
  8886  00278C  103E               	iorwf	??___flmul+2,w,c
  8887  00278E  103F               	iorwf	??___flmul+3,w,c
  8888  002790  B4D8               	btfsc	status,2,c
  8889  002792  D003               	goto	l1357
  8890  002794                     u8150:
  8891                           
  8892                           ; BSR set to: 0
  8893  002794  0E01               	movlw	1
  8894  002796  6F81               	movwf	___flmul@aexp& (0+255),b
  8895  002798  D002               	goto	l1356
  8896  00279A                     l1357:
  8897                           
  8898                           ; BSR set to: 0
  8899  00279A  B187               	btfsc	___flmul@prod& (0+255),0,b
  8900  00279C  D7FB               	goto	u8150
  8901  00279E                     l1356:
  8902                           
  8903                           ; BSR set to: 0
  8904  00279E  5181               	movf	___flmul@aexp& (0+255),w,b
  8905  0027A0  B4D8               	btfsc	status,2,c
  8906  0027A2  D01F               	goto	l7156
  8907                           
  8908                           ; BSR set to: 0
  8909  0027A4  0E01               	movlw	1
  8910  0027A6  2787               	addwf	___flmul@prod& (0+255),f,b
  8911  0027A8  0E00               	movlw	0
  8912  0027AA  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8913  0027AC  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8914  0027AE  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8915                           
  8916                           ; BSR set to: 0
  8917  0027B0  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8918  0027B2  D017               	goto	l7156
  8919                           
  8920                           ; BSR set to: 0
  8921  0027B4  C087  F03C         	movff	___flmul@prod,??___flmul
  8922  0027B8  C088  F03D         	movff	___flmul@prod+1,??___flmul+1
  8923  0027BC  C089  F03E         	movff	___flmul@prod+2,??___flmul+2
  8924  0027C0  C08A  F03F         	movff	___flmul@prod+3,??___flmul+3
  8925  0027C4  343F               	rlcf	??___flmul+3,w,c
  8926  0027C6  323F               	rrcf	??___flmul+3,f,c
  8927  0027C8  323E               	rrcf	??___flmul+2,f,c
  8928  0027CA  323D               	rrcf	??___flmul+1,f,c
  8929  0027CC  323C               	rrcf	??___flmul,f,c
  8930  0027CE  C03C  F087         	movff	??___flmul,___flmul@prod
  8931  0027D2  C03D  F088         	movff	??___flmul+1,___flmul@prod+1
  8932  0027D6  C03E  F089         	movff	??___flmul+2,___flmul@prod+2
  8933  0027DA  C03F  F08A         	movff	??___flmul+3,___flmul@prod+3
  8934                           
  8935                           ; BSR set to: 0
  8936  0027DE  4B8B               	infsnz	___flmul@temp& (0+255),f,b
  8937  0027E0  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
  8938  0027E2                     l7156:
  8939                           
  8940                           ; BSR set to: 0
  8941  0027E2  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8942  0027E4  D00D               	goto	l7160
  8943  0027E6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8944  0027E8  E103               	bnz	u8190
  8945  0027EA  298B               	incf	___flmul@temp& (0+255),w,b
  8946  0027EC  A0D8               	btfss	status,0,c
  8947  0027EE  D008               	goto	l7160
  8948  0027F0                     u8190:
  8949                           
  8950                           ; BSR set to: 0
  8951  0027F0  0E00               	movlw	0
  8952  0027F2  6F87               	movwf	___flmul@prod& (0+255),b
  8953  0027F4  0E00               	movlw	0
  8954  0027F6  6F88               	movwf	(___flmul@prod+1)& (0+255),b
  8955  0027F8  0E80               	movlw	128
  8956  0027FA  6F89               	movwf	(___flmul@prod+2)& (0+255),b
  8957  0027FC  0E7F               	movlw	127
  8958  0027FE  D020               	goto	L8
  8959  002800                     l7160:
  8960                           
  8961                           ; BSR set to: 0
  8962  002800  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8963  002802  D005               	goto	u8200
  8964  002804  518C               	movf	(___flmul@temp+1)& (0+255),w,b
  8965  002806  E10E               	bnz	l1364
  8966  002808  058B               	decf	___flmul@temp& (0+255),w,b
  8967  00280A  B0D8               	btfsc	status,0,c
  8968  00280C  D00B               	goto	l1364
  8969  00280E                     u8200:
  8970                           
  8971                           ; BSR set to: 0
  8972  00280E  0E00               	movlw	0
  8973  002810  6F87               	movwf	___flmul@prod& (0+255),b
  8974  002812  0E00               	movlw	0
  8975  002814  6F88               	movwf	(___flmul@prod+1)& (0+255),b
  8976  002816  0E00               	movlw	0
  8977  002818  6F89               	movwf	(___flmul@prod+2)& (0+255),b
  8978  00281A  0E00               	movlw	0
  8979  00281C  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
  8980  00281E  0E00               	movlw	0
  8981  002820  6F80               	movwf	___flmul@sign& (0+255),b
  8982  002822  D00F               	goto	l7172
  8983  002824                     l1364:
  8984                           
  8985                           ; BSR set to: 0
  8986  002824  C08B  F086         	movff	___flmul@temp,___flmul@bexp
  8987                           
  8988                           ; BSR set to: 0
  8989  002828  0EFF               	movlw	255
  8990  00282A  1787               	andwf	___flmul@prod& (0+255),f,b
  8991  00282C  0EFF               	movlw	255
  8992  00282E  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
  8993  002830  0E7F               	movlw	127
  8994  002832  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
  8995  002834  0E00               	movlw	0
  8996  002836  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8997                           
  8998                           ; BSR set to: 0
  8999  002838  B186               	btfsc	___flmul@bexp& (0+255),0,b
  9000                           
  9001                           ; BSR set to: 0
  9002  00283A  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
  9003                           
  9004                           ; BSR set to: 0
  9005  00283C  90D8               	bcf	status,0,c
  9006  00283E  3186               	rrcf	___flmul@bexp& (0+255),w,b
  9007  002840                     L8:
  9008  002840  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
  9009  002842                     l7172:
  9010                           
  9011                           ; BSR set to: 0
  9012  002842  5180               	movf	___flmul@sign& (0+255),w,b
  9013  002844  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9014                           
  9015                           ; BSR set to: 0
  9016  002846  C087  F034         	movff	___flmul@prod,?___flmul
  9017  00284A  C088  F035         	movff	___flmul@prod+1,?___flmul+1
  9018  00284E  C089  F036         	movff	___flmul@prod+2,?___flmul+2
  9019  002852  C08A  F037         	movff	___flmul@prod+3,?___flmul+3
  9020                           
  9021                           ; BSR set to: 0
  9022  002856  0012               	return		;funcret
  9023  002858                     __end_of___flmul:
  9024                           	opt callstack 0
  9025                           
  9026 ;; *************** function ___flge *****************
  9027 ;; Defined at:
  9028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  ff1             4   63[COMRAM] unsigned char 
  9031 ;;  ff2             4   67[COMRAM] unsigned char 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;		None               void
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;Total ram usage:       12 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    3
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_set_pwm_duty_cycle_RC2_RightSlave
  9054 ;;		_set_pwm_duty_cycle_RC1_LeftMaster
  9055 ;;		_efgtoa
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text35
  9060  003BB4                     __ptext35:
  9061                           	opt callstack 0
  9062  003BB4                     ___flge:
  9063                           	opt callstack 23
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;incstack = 0
  9067  003BB4  0E00               	movlw	0
  9068  003BB6  1440               	andwf	___flge@ff1,w,c
  9069  003BB8  6E48               	movwf	??___flge& (0+255),c
  9070  003BBA  0E00               	movlw	0
  9071  003BBC  1441               	andwf	___flge@ff1+1,w,c
  9072  003BBE  6E49               	movwf	(??___flge+1)& (0+255),c
  9073  003BC0  0E80               	movlw	128
  9074  003BC2  1442               	andwf	___flge@ff1+2,w,c
  9075  003BC4  6E4A               	movwf	(??___flge+2)& (0+255),c
  9076  003BC6  0E7F               	movlw	127
  9077  003BC8  1443               	andwf	___flge@ff1+3,w,c
  9078  003BCA  6E4B               	movwf	(??___flge+3)& (0+255),c
  9079  003BCC  5048               	movf	??___flge,w,c
  9080  003BCE  1049               	iorwf	??___flge+1,w,c
  9081  003BD0  104A               	iorwf	??___flge+2,w,c
  9082  003BD2  104B               	iorwf	??___flge+3,w,c
  9083  003BD4  A4D8               	btfss	status,2,c
  9084  003BD6  D008               	goto	l7284
  9085  003BD8  0E00               	movlw	0
  9086  003BDA  6E40               	movwf	___flge@ff1,c
  9087  003BDC  0E00               	movlw	0
  9088  003BDE  6E41               	movwf	___flge@ff1+1,c
  9089  003BE0  0E00               	movlw	0
  9090  003BE2  6E42               	movwf	___flge@ff1+2,c
  9091  003BE4  0E00               	movlw	0
  9092  003BE6  6E43               	movwf	___flge@ff1+3,c
  9093  003BE8                     l7284:
  9094  003BE8  0E00               	movlw	0
  9095  003BEA  1444               	andwf	___flge@ff2,w,c
  9096  003BEC  6E48               	movwf	??___flge& (0+255),c
  9097  003BEE  0E00               	movlw	0
  9098  003BF0  1445               	andwf	___flge@ff2+1,w,c
  9099  003BF2  6E49               	movwf	(??___flge+1)& (0+255),c
  9100  003BF4  0E80               	movlw	128
  9101  003BF6  1446               	andwf	___flge@ff2+2,w,c
  9102  003BF8  6E4A               	movwf	(??___flge+2)& (0+255),c
  9103  003BFA  0E7F               	movlw	127
  9104  003BFC  1447               	andwf	___flge@ff2+3,w,c
  9105  003BFE  6E4B               	movwf	(??___flge+3)& (0+255),c
  9106  003C00  5048               	movf	??___flge,w,c
  9107  003C02  1049               	iorwf	??___flge+1,w,c
  9108  003C04  104A               	iorwf	??___flge+2,w,c
  9109  003C06  104B               	iorwf	??___flge+3,w,c
  9110  003C08  A4D8               	btfss	status,2,c
  9111  003C0A  D008               	goto	l7288
  9112  003C0C  0E00               	movlw	0
  9113  003C0E  6E44               	movwf	___flge@ff2,c
  9114  003C10  0E00               	movlw	0
  9115  003C12  6E45               	movwf	___flge@ff2+1,c
  9116  003C14  0E00               	movlw	0
  9117  003C16  6E46               	movwf	___flge@ff2+2,c
  9118  003C18  0E00               	movlw	0
  9119  003C1A  6E47               	movwf	___flge@ff2+3,c
  9120  003C1C                     l7288:
  9121  003C1C  AE43               	btfss	___flge@ff1+3,7,c
  9122  003C1E  D009               	goto	l7292
  9123  003C20  6C40               	negf	___flge@ff1,c
  9124  003C22  1E41               	comf	___flge@ff1+1,f,c
  9125  003C24  B0D8               	btfsc	status,0,c
  9126  003C26  2A41               	incf	___flge@ff1+1,f,c
  9127  003C28  1E42               	comf	___flge@ff1+2,f,c
  9128  003C2A  B0D8               	btfsc	status,0,c
  9129  003C2C  2A42               	incf	___flge@ff1+2,f,c
  9130  003C2E  0E80               	movlw	128
  9131  003C30  5643               	subfwb	___flge@ff1+3,f,c
  9132  003C32                     l7292:
  9133  003C32  AE47               	btfss	___flge@ff2+3,7,c
  9134  003C34  D009               	goto	l998
  9135  003C36  6C44               	negf	___flge@ff2,c
  9136  003C38  1E45               	comf	___flge@ff2+1,f,c
  9137  003C3A  B0D8               	btfsc	status,0,c
  9138  003C3C  2A45               	incf	___flge@ff2+1,f,c
  9139  003C3E  1E46               	comf	___flge@ff2+2,f,c
  9140  003C40  B0D8               	btfsc	status,0,c
  9141  003C42  2A46               	incf	___flge@ff2+2,f,c
  9142  003C44  0E80               	movlw	128
  9143  003C46  5647               	subfwb	___flge@ff2+3,f,c
  9144  003C48                     l998:
  9145  003C48  0E00               	movlw	0
  9146  003C4A  1A40               	xorwf	___flge@ff1,f,c
  9147  003C4C  0E00               	movlw	0
  9148  003C4E  1A41               	xorwf	___flge@ff1+1,f,c
  9149  003C50  0E00               	movlw	0
  9150  003C52  1A42               	xorwf	___flge@ff1+2,f,c
  9151  003C54  0E80               	movlw	128
  9152  003C56  1A43               	xorwf	___flge@ff1+3,f,c
  9153  003C58  0E00               	movlw	0
  9154  003C5A  1A44               	xorwf	___flge@ff2,f,c
  9155  003C5C  0E00               	movlw	0
  9156  003C5E  1A45               	xorwf	___flge@ff2+1,f,c
  9157  003C60  0E00               	movlw	0
  9158  003C62  1A46               	xorwf	___flge@ff2+2,f,c
  9159  003C64  0E80               	movlw	128
  9160  003C66  1A47               	xorwf	___flge@ff2+3,f,c
  9161  003C68  5044               	movf	___flge@ff2,w,c
  9162  003C6A  5C40               	subwf	___flge@ff1,w,c
  9163  003C6C  5045               	movf	___flge@ff2+1,w,c
  9164  003C6E  5841               	subwfb	___flge@ff1+1,w,c
  9165  003C70  5046               	movf	___flge@ff2+2,w,c
  9166  003C72  5842               	subwfb	___flge@ff1+2,w,c
  9167  003C74  5047               	movf	___flge@ff2+3,w,c
  9168  003C76  5843               	subwfb	___flge@ff1+3,w,c
  9169  003C78  B0D8               	btfsc	status,0,c
  9170  003C7A  D002               	goto	l7298
  9171  003C7C  90D8               	bcf	status,0,c
  9172  003C7E  0012               	return	
  9173  003C80                     l7298:
  9174  003C80  80D8               	bsf	status,0,c
  9175  003C82  0012               	return		;funcret
  9176  003C84                     __end_of___flge:
  9177                           	opt callstack 0
  9178                           
  9179 ;; *************** function ___fldiv *****************
  9180 ;; Defined at:
  9181 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  b               4   26[COMRAM] unsigned char 
  9184 ;;  a               4   30[COMRAM] unsigned char 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  grs             4   45[COMRAM] unsigned long 
  9187 ;;  rem             4   38[COMRAM] unsigned long 
  9188 ;;  new_exp         2   43[COMRAM] short 
  9189 ;;  aexp            1   50[COMRAM] unsigned char 
  9190 ;;  bexp            1   49[COMRAM] unsigned char 
  9191 ;;  sign            1   42[COMRAM] unsigned char 
  9192 ;; Return value:  Size  Location     Type
  9193 ;;                  4   26[COMRAM] unsigned char 
  9194 ;; Registers used:
  9195 ;;		wreg, status,2, status,0
  9196 ;; Tracked objects:
  9197 ;;		On entry : 0/0
  9198 ;;		On exit  : 0/0
  9199 ;;		Unchanged: 0/0
  9200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9202 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;Total ram usage:       25 bytes
  9206 ;; Hardware stack levels used:    1
  9207 ;; Hardware stack levels required when called:    3
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		_main
  9212 ;;		_drive
  9213 ;;		_set_pwm_duty_cycle_RC2_RightSlave
  9214 ;;		_set_pwm_duty_cycle_RC1_LeftMaster
  9215 ;;		_efgtoa
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text36
  9220  002E70                     __ptext36:
  9221                           	opt callstack 0
  9222  002E70                     ___fldiv:
  9223                           	opt callstack 23
  9224                           
  9225                           ;incstack = 0
  9226  002E70  501E               	movf	___fldiv@b+3,w,c
  9227  002E72  0B80               	andlw	128
  9228  002E74  6E2B               	movwf	___fldiv@sign,c
  9229  002E76  501E               	movf	___fldiv@b+3,w,c
  9230  002E78  241E               	addwf	___fldiv@b+3,w,c
  9231  002E7A  6E32               	movwf	___fldiv@bexp,c
  9232  002E7C  BE1D               	btfsc	___fldiv@b+2,7,c
  9233  002E7E  8032               	bsf	___fldiv@bexp,0,c
  9234  002E80  5032               	movf	___fldiv@bexp,w,c
  9235  002E82  B4D8               	btfsc	status,2,c
  9236  002E84  D00D               	goto	l6926
  9237  002E86  2832               	incf	___fldiv@bexp,w,c
  9238  002E88  A4D8               	btfss	status,2,c
  9239  002E8A  D008               	goto	l6922
  9240  002E8C  0E00               	movlw	0
  9241  002E8E  6E1B               	movwf	___fldiv@b,c
  9242  002E90  0E00               	movlw	0
  9243  002E92  6E1C               	movwf	___fldiv@b+1,c
  9244  002E94  0E00               	movlw	0
  9245  002E96  6E1D               	movwf	___fldiv@b+2,c
  9246  002E98  0E00               	movlw	0
  9247  002E9A  6E1E               	movwf	___fldiv@b+3,c
  9248  002E9C                     l6922:
  9249  002E9C  8E1D               	bsf	___fldiv@b+2,7,c
  9250  002E9E  D006               	goto	L9
  9251  002EA0                     l6926:
  9252  002EA0  0E00               	movlw	0
  9253  002EA2  6E1B               	movwf	___fldiv@b,c
  9254  002EA4  0E00               	movlw	0
  9255  002EA6  6E1C               	movwf	___fldiv@b+1,c
  9256  002EA8  0E00               	movlw	0
  9257  002EAA  6E1D               	movwf	___fldiv@b+2,c
  9258  002EAC                     L9:
  9259  002EAC  0E00               	movlw	0
  9260  002EAE  6E1E               	movwf	___fldiv@b+3,c
  9261  002EB0  5022               	movf	___fldiv@a+3,w,c
  9262  002EB2  0B80               	andlw	128
  9263  002EB4  1A2B               	xorwf	___fldiv@sign,f,c
  9264  002EB6  5022               	movf	___fldiv@a+3,w,c
  9265  002EB8  2422               	addwf	___fldiv@a+3,w,c
  9266  002EBA  6E33               	movwf	___fldiv@aexp,c
  9267  002EBC  BE21               	btfsc	___fldiv@a+2,7,c
  9268  002EBE  8033               	bsf	___fldiv@aexp,0,c
  9269  002EC0  5033               	movf	___fldiv@aexp,w,c
  9270  002EC2  B4D8               	btfsc	status,2,c
  9271  002EC4  D00D               	goto	l6946
  9272  002EC6  2833               	incf	___fldiv@aexp,w,c
  9273  002EC8  A4D8               	btfss	status,2,c
  9274  002ECA  D008               	goto	l6942
  9275  002ECC  0E00               	movlw	0
  9276  002ECE  6E1F               	movwf	___fldiv@a,c
  9277  002ED0  0E00               	movlw	0
  9278  002ED2  6E20               	movwf	___fldiv@a+1,c
  9279  002ED4  0E00               	movlw	0
  9280  002ED6  6E21               	movwf	___fldiv@a+2,c
  9281  002ED8  0E00               	movlw	0
  9282  002EDA  6E22               	movwf	___fldiv@a+3,c
  9283  002EDC                     l6942:
  9284  002EDC  8E21               	bsf	___fldiv@a+2,7,c
  9285  002EDE  D006               	goto	L10
  9286  002EE0                     l6946:
  9287  002EE0  0E00               	movlw	0
  9288  002EE2  6E1F               	movwf	___fldiv@a,c
  9289  002EE4  0E00               	movlw	0
  9290  002EE6  6E20               	movwf	___fldiv@a+1,c
  9291  002EE8  0E00               	movlw	0
  9292  002EEA  6E21               	movwf	___fldiv@a+2,c
  9293  002EEC                     L10:
  9294  002EEC  0E00               	movlw	0
  9295  002EEE  6E22               	movwf	___fldiv@a+3,c
  9296  002EF0  501F               	movf	___fldiv@a,w,c
  9297  002EF2  1020               	iorwf	___fldiv@a+1,w,c
  9298  002EF4  1021               	iorwf	___fldiv@a+2,w,c
  9299  002EF6  1022               	iorwf	___fldiv@a+3,w,c
  9300  002EF8  A4D8               	btfss	status,2,c
  9301  002EFA  D017               	goto	l6960
  9302  002EFC  0E00               	movlw	0
  9303  002EFE  6E1B               	movwf	___fldiv@b,c
  9304  002F00  0E00               	movlw	0
  9305  002F02  6E1C               	movwf	___fldiv@b+1,c
  9306  002F04  0E00               	movlw	0
  9307  002F06  6E1D               	movwf	___fldiv@b+2,c
  9308  002F08  0E00               	movlw	0
  9309  002F0A  6E1E               	movwf	___fldiv@b+3,c
  9310  002F0C  0E80               	movlw	128
  9311  002F0E  121D               	iorwf	___fldiv@b+2,f,c
  9312  002F10  0E7F               	movlw	127
  9313  002F12  121E               	iorwf	___fldiv@b+3,f,c
  9314  002F14                     l6954:
  9315  002F14  502B               	movf	___fldiv@sign,w,c
  9316  002F16  121E               	iorwf	___fldiv@b+3,f,c
  9317  002F18  C01B  F01B         	movff	___fldiv@b,?___fldiv
  9318  002F1C  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
  9319  002F20  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
  9320  002F24  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
  9321  002F28  0012               	return	
  9322  002F2A                     l6960:
  9323  002F2A  5032               	movf	___fldiv@bexp,w,c
  9324  002F2C  A4D8               	btfss	status,2,c
  9325  002F2E  D009               	goto	l6968
  9326  002F30  0E00               	movlw	0
  9327  002F32  6E1B               	movwf	?___fldiv,c
  9328  002F34  0E00               	movlw	0
  9329  002F36  6E1C               	movwf	?___fldiv+1,c
  9330  002F38  0E00               	movlw	0
  9331  002F3A  6E1D               	movwf	?___fldiv+2,c
  9332  002F3C  0E00               	movlw	0
  9333  002F3E  6E1E               	movwf	?___fldiv+3,c
  9334  002F40  0012               	return	
  9335  002F42                     l6968:
  9336  002F42  5033               	movf	___fldiv@aexp,w,c
  9337  002F44  C032  F023         	movff	___fldiv@bexp,??___fldiv
  9338  002F48  6A24               	clrf	(??___fldiv+1)& (0+255),c
  9339  002F4A  5E23               	subwf	??___fldiv,f,c
  9340  002F4C  0E00               	movlw	0
  9341  002F4E  5A24               	subwfb	??___fldiv+1,f,c
  9342  002F50  0E7F               	movlw	127
  9343  002F52  2423               	addwf	??___fldiv,w,c
  9344  002F54  6E2C               	movwf	___fldiv@new_exp,c
  9345  002F56  0E00               	movlw	0
  9346  002F58  2024               	addwfc	??___fldiv+1,w,c
  9347  002F5A  6E2D               	movwf	___fldiv@new_exp+1,c
  9348  002F5C  C01B  F027         	movff	___fldiv@b,___fldiv@rem
  9349  002F60  C01C  F028         	movff	___fldiv@b+1,___fldiv@rem+1
  9350  002F64  C01D  F029         	movff	___fldiv@b+2,___fldiv@rem+2
  9351  002F68  C01E  F02A         	movff	___fldiv@b+3,___fldiv@rem+3
  9352  002F6C  0E00               	movlw	0
  9353  002F6E  6E1B               	movwf	___fldiv@b,c
  9354  002F70  0E00               	movlw	0
  9355  002F72  6E1C               	movwf	___fldiv@b+1,c
  9356  002F74  0E00               	movlw	0
  9357  002F76  6E1D               	movwf	___fldiv@b+2,c
  9358  002F78  0E00               	movlw	0
  9359  002F7A  6E1E               	movwf	___fldiv@b+3,c
  9360  002F7C  0E00               	movlw	0
  9361  002F7E  6E2E               	movwf	___fldiv@grs,c
  9362  002F80  0E00               	movlw	0
  9363  002F82  6E2F               	movwf	___fldiv@grs+1,c
  9364  002F84  0E00               	movlw	0
  9365  002F86  6E30               	movwf	___fldiv@grs+2,c
  9366  002F88  0E00               	movlw	0
  9367  002F8A  6E31               	movwf	___fldiv@grs+3,c
  9368  002F8C  0E00               	movlw	0
  9369  002F8E  6E33               	movwf	___fldiv@aexp,c
  9370  002F90  D028               	goto	l1317
  9371  002F92                     l6978:
  9372  002F92  5033               	movf	___fldiv@aexp,w,c
  9373  002F94  B4D8               	btfsc	status,2,c
  9374  002F96  D011               	goto	l6986
  9375  002F98  90D8               	bcf	status,0,c
  9376  002F9A  3627               	rlcf	___fldiv@rem,f,c
  9377  002F9C  3628               	rlcf	___fldiv@rem+1,f,c
  9378  002F9E  3629               	rlcf	___fldiv@rem+2,f,c
  9379  002FA0  362A               	rlcf	___fldiv@rem+3,f,c
  9380  002FA2  90D8               	bcf	status,0,c
  9381  002FA4  361B               	rlcf	___fldiv@b,f,c
  9382  002FA6  361C               	rlcf	___fldiv@b+1,f,c
  9383  002FA8  361D               	rlcf	___fldiv@b+2,f,c
  9384  002FAA  361E               	rlcf	___fldiv@b+3,f,c
  9385  002FAC  BE31               	btfsc	___fldiv@grs+3,7,c
  9386  002FAE  801B               	bsf	___fldiv@b,0,c
  9387  002FB0  90D8               	bcf	status,0,c
  9388  002FB2  362E               	rlcf	___fldiv@grs,f,c
  9389  002FB4  362F               	rlcf	___fldiv@grs+1,f,c
  9390  002FB6  3630               	rlcf	___fldiv@grs+2,f,c
  9391  002FB8  3631               	rlcf	___fldiv@grs+3,f,c
  9392  002FBA                     l6986:
  9393  002FBA  501F               	movf	___fldiv@a,w,c
  9394  002FBC  5C27               	subwf	___fldiv@rem,w,c
  9395  002FBE  5020               	movf	___fldiv@a+1,w,c
  9396  002FC0  5828               	subwfb	___fldiv@rem+1,w,c
  9397  002FC2  5021               	movf	___fldiv@a+2,w,c
  9398  002FC4  5829               	subwfb	___fldiv@rem+2,w,c
  9399  002FC6  5022               	movf	___fldiv@a+3,w,c
  9400  002FC8  582A               	subwfb	___fldiv@rem+3,w,c
  9401  002FCA  A0D8               	btfss	status,0,c
  9402  002FCC  D009               	goto	l6992
  9403  002FCE  8C31               	bsf	___fldiv@grs+3,6,c
  9404  002FD0  501F               	movf	___fldiv@a,w,c
  9405  002FD2  5E27               	subwf	___fldiv@rem,f,c
  9406  002FD4  5020               	movf	___fldiv@a+1,w,c
  9407  002FD6  5A28               	subwfb	___fldiv@rem+1,f,c
  9408  002FD8  5021               	movf	___fldiv@a+2,w,c
  9409  002FDA  5A29               	subwfb	___fldiv@rem+2,f,c
  9410  002FDC  5022               	movf	___fldiv@a+3,w,c
  9411  002FDE  5A2A               	subwfb	___fldiv@rem+3,f,c
  9412  002FE0                     l6992:
  9413  002FE0  2A33               	incf	___fldiv@aexp,f,c
  9414  002FE2                     l1317:
  9415  002FE2  0E19               	movlw	25
  9416  002FE4  6433               	cpfsgt	___fldiv@aexp,c
  9417  002FE6  D7D5               	goto	l6978
  9418  002FE8  5027               	movf	___fldiv@rem,w,c
  9419  002FEA  1028               	iorwf	___fldiv@rem+1,w,c
  9420  002FEC  1029               	iorwf	___fldiv@rem+2,w,c
  9421  002FEE  102A               	iorwf	___fldiv@rem+3,w,c
  9422  002FF0  B4D8               	btfsc	status,2,c
  9423  002FF2  D011               	goto	l7004
  9424  002FF4  802E               	bsf	___fldiv@grs,0,c
  9425  002FF6  D00F               	goto	l7004
  9426  002FF8                     l6998:
  9427  002FF8  90D8               	bcf	status,0,c
  9428  002FFA  361B               	rlcf	___fldiv@b,f,c
  9429  002FFC  361C               	rlcf	___fldiv@b+1,f,c
  9430  002FFE  361D               	rlcf	___fldiv@b+2,f,c
  9431  003000  361E               	rlcf	___fldiv@b+3,f,c
  9432  003002  BE31               	btfsc	___fldiv@grs+3,7,c
  9433  003004  801B               	bsf	___fldiv@b,0,c
  9434  003006  90D8               	bcf	status,0,c
  9435  003008  362E               	rlcf	___fldiv@grs,f,c
  9436  00300A  362F               	rlcf	___fldiv@grs+1,f,c
  9437  00300C  3630               	rlcf	___fldiv@grs+2,f,c
  9438  00300E  3631               	rlcf	___fldiv@grs+3,f,c
  9439  003010  062C               	decf	___fldiv@new_exp,f,c
  9440  003012  A0D8               	btfss	status,0,c
  9441  003014  062D               	decf	___fldiv@new_exp+1,f,c
  9442  003016                     l7004:
  9443  003016  AE1D               	btfss	___fldiv@b+2,7,c
  9444  003018  D7EF               	goto	l6998
  9445  00301A  0E00               	movlw	0
  9446  00301C  6E33               	movwf	___fldiv@aexp,c
  9447  00301E  AE31               	btfss	___fldiv@grs+3,7,c
  9448  003020  D017               	goto	l1328
  9449  003022  0EFF               	movlw	255
  9450  003024  142E               	andwf	___fldiv@grs,w,c
  9451  003026  6E23               	movwf	??___fldiv& (0+255),c
  9452  003028  0EFF               	movlw	255
  9453  00302A  142F               	andwf	___fldiv@grs+1,w,c
  9454  00302C  6E24               	movwf	(??___fldiv+1)& (0+255),c
  9455  00302E  0EFF               	movlw	255
  9456  003030  1430               	andwf	___fldiv@grs+2,w,c
  9457  003032  6E25               	movwf	(??___fldiv+2)& (0+255),c
  9458  003034  0E7F               	movlw	127
  9459  003036  1431               	andwf	___fldiv@grs+3,w,c
  9460  003038  6E26               	movwf	(??___fldiv+3)& (0+255),c
  9461  00303A  5023               	movf	??___fldiv,w,c
  9462  00303C  1024               	iorwf	??___fldiv+1,w,c
  9463  00303E  1025               	iorwf	??___fldiv+2,w,c
  9464  003040  1026               	iorwf	??___fldiv+3,w,c
  9465  003042  B4D8               	btfsc	status,2,c
  9466  003044  D003               	goto	l1329
  9467  003046                     u7960:
  9468  003046  0E01               	movlw	1
  9469  003048  6E33               	movwf	___fldiv@aexp,c
  9470  00304A  D002               	goto	l1328
  9471  00304C                     l1329:
  9472  00304C  B01B               	btfsc	___fldiv@b,0,c
  9473  00304E  D7FB               	goto	u7960
  9474  003050                     l1328:
  9475  003050  5033               	movf	___fldiv@aexp,w,c
  9476  003052  B4D8               	btfsc	status,2,c
  9477  003054  D01F               	goto	l7024
  9478  003056  0E01               	movlw	1
  9479  003058  261B               	addwf	___fldiv@b,f,c
  9480  00305A  0E00               	movlw	0
  9481  00305C  221C               	addwfc	___fldiv@b+1,f,c
  9482  00305E  221D               	addwfc	___fldiv@b+2,f,c
  9483  003060  221E               	addwfc	___fldiv@b+3,f,c
  9484  003062  A01E               	btfss	___fldiv@b+3,0,c
  9485  003064  D017               	goto	l7024
  9486  003066  C01B  F023         	movff	___fldiv@b,??___fldiv
  9487  00306A  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
  9488  00306E  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
  9489  003072  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
  9490  003076  3426               	rlcf	??___fldiv+3,w,c
  9491  003078  3226               	rrcf	??___fldiv+3,f,c
  9492  00307A  3225               	rrcf	??___fldiv+2,f,c
  9493  00307C  3224               	rrcf	??___fldiv+1,f,c
  9494  00307E  3223               	rrcf	??___fldiv,f,c
  9495  003080  C023  F01B         	movff	??___fldiv,___fldiv@b
  9496  003084  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
  9497  003088  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
  9498  00308C  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
  9499  003090  4A2C               	infsnz	___fldiv@new_exp,f,c
  9500  003092  2A2D               	incf	___fldiv@new_exp+1,f,c
  9501  003094                     l7024:
  9502  003094  BE2D               	btfsc	___fldiv@new_exp+1,7,c
  9503  003096  D010               	goto	l7028
  9504  003098  502D               	movf	___fldiv@new_exp+1,w,c
  9505  00309A  E103               	bnz	u8000
  9506  00309C  282C               	incf	___fldiv@new_exp,w,c
  9507  00309E  A0D8               	btfss	status,0,c
  9508  0030A0  D00B               	goto	l7028
  9509  0030A2                     u8000:
  9510  0030A2  0E00               	movlw	0
  9511  0030A4  6E2D               	movwf	___fldiv@new_exp+1,c
  9512  0030A6  682C               	setf	___fldiv@new_exp,c
  9513  0030A8  0E00               	movlw	0
  9514  0030AA  6E1B               	movwf	___fldiv@b,c
  9515  0030AC  0E00               	movlw	0
  9516  0030AE  6E1C               	movwf	___fldiv@b+1,c
  9517  0030B0  0E00               	movlw	0
  9518  0030B2  6E1D               	movwf	___fldiv@b+2,c
  9519  0030B4  0E00               	movlw	0
  9520  0030B6  6E1E               	movwf	___fldiv@b+3,c
  9521  0030B8                     l7028:
  9522  0030B8  BE2D               	btfsc	___fldiv@new_exp+1,7,c
  9523  0030BA  D005               	goto	u8010
  9524  0030BC  502D               	movf	___fldiv@new_exp+1,w,c
  9525  0030BE  E111               	bnz	l7032
  9526  0030C0  042C               	decf	___fldiv@new_exp,w,c
  9527  0030C2  B0D8               	btfsc	status,0,c
  9528  0030C4  D00E               	goto	l7032
  9529  0030C6                     u8010:
  9530  0030C6  0E00               	movlw	0
  9531  0030C8  6E2D               	movwf	___fldiv@new_exp+1,c
  9532  0030CA  0E00               	movlw	0
  9533  0030CC  6E2C               	movwf	___fldiv@new_exp,c
  9534  0030CE  0E00               	movlw	0
  9535  0030D0  6E1B               	movwf	___fldiv@b,c
  9536  0030D2  0E00               	movlw	0
  9537  0030D4  6E1C               	movwf	___fldiv@b+1,c
  9538  0030D6  0E00               	movlw	0
  9539  0030D8  6E1D               	movwf	___fldiv@b+2,c
  9540  0030DA  0E00               	movlw	0
  9541  0030DC  6E1E               	movwf	___fldiv@b+3,c
  9542  0030DE  0E00               	movlw	0
  9543  0030E0  6E2B               	movwf	___fldiv@sign,c
  9544  0030E2                     l7032:
  9545  0030E2  C02C  F032         	movff	___fldiv@new_exp,___fldiv@bexp
  9546  0030E6  A032               	btfss	___fldiv@bexp,0,c
  9547  0030E8  D002               	goto	l7038
  9548  0030EA  8E1D               	bsf	___fldiv@b+2,7,c
  9549  0030EC  D001               	goto	l7040
  9550  0030EE                     l7038:
  9551  0030EE  9E1D               	bcf	___fldiv@b+2,7,c
  9552  0030F0                     l7040:
  9553  0030F0  90D8               	bcf	status,0,c
  9554  0030F2  3032               	rrcf	___fldiv@bexp,w,c
  9555  0030F4  6E1E               	movwf	___fldiv@b+3,c
  9556  0030F6  D70E               	goto	l6954
  9557  0030F8                     __end_of___fldiv:
  9558                           	opt callstack 0
  9559                           
  9560 ;; *************** function ___fladd *****************
  9561 ;; Defined at:
  9562 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  b               4   51[COMRAM] unsigned char 
  9565 ;;  a               4   55[COMRAM] unsigned char 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  grs             1   66[COMRAM] unsigned char 
  9568 ;;  bexp            1   65[COMRAM] unsigned char 
  9569 ;;  aexp            1   64[COMRAM] unsigned char 
  9570 ;;  signs           1   63[COMRAM] unsigned char 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  4   51[COMRAM] unsigned char 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9580 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9583 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9584 ;;Total ram usage:       16 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    3
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_drive
  9591 ;;		_efgtoa
  9592 ;;		___flsub
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text37
  9597  002858                     __ptext37:
  9598                           	opt callstack 0
  9599  002858                     ___fladd:
  9600                           	opt callstack 22
  9601                           
  9602                           ;incstack = 0
  9603  002858  5037               	movf	___fladd@b+3,w,c
  9604  00285A  0B80               	andlw	128
  9605  00285C  6E40               	movwf	___fladd@signs,c
  9606  00285E  5037               	movf	___fladd@b+3,w,c
  9607  002860  2437               	addwf	___fladd@b+3,w,c
  9608  002862  6E42               	movwf	___fladd@bexp,c
  9609  002864  BE36               	btfsc	___fladd@b+2,7,c
  9610  002866  8042               	bsf	___fladd@bexp,0,c
  9611  002868  5042               	movf	___fladd@bexp,w,c
  9612  00286A  B4D8               	btfsc	status,2,c
  9613  00286C  D00D               	goto	l6628
  9614  00286E  2842               	incf	___fladd@bexp,w,c
  9615  002870  A4D8               	btfss	status,2,c
  9616  002872  D008               	goto	l6624
  9617  002874  0E00               	movlw	0
  9618  002876  6E34               	movwf	___fladd@b,c
  9619  002878  0E00               	movlw	0
  9620  00287A  6E35               	movwf	___fladd@b+1,c
  9621  00287C  0E00               	movlw	0
  9622  00287E  6E36               	movwf	___fladd@b+2,c
  9623  002880  0E00               	movlw	0
  9624  002882  6E37               	movwf	___fladd@b+3,c
  9625  002884                     l6624:
  9626  002884  8E36               	bsf	___fladd@b+2,7,c
  9627  002886  D006               	goto	L11
  9628  002888                     l6628:
  9629  002888  0E00               	movlw	0
  9630  00288A  6E34               	movwf	___fladd@b,c
  9631  00288C  0E00               	movlw	0
  9632  00288E  6E35               	movwf	___fladd@b+1,c
  9633  002890  0E00               	movlw	0
  9634  002892  6E36               	movwf	___fladd@b+2,c
  9635  002894                     L11:
  9636  002894  0E00               	movlw	0
  9637  002896  6E37               	movwf	___fladd@b+3,c
  9638  002898  503B               	movf	___fladd@a+3,w,c
  9639  00289A  0B80               	andlw	128
  9640  00289C  6E41               	movwf	___fladd@aexp,c
  9641  00289E  5040               	movf	___fladd@signs,w,c
  9642  0028A0  1841               	xorwf	___fladd@aexp,w,c
  9643  0028A2  A4D8               	btfss	status,2,c
  9644  0028A4  8C40               	bsf	___fladd@signs,6,c
  9645  0028A6  503B               	movf	___fladd@a+3,w,c
  9646  0028A8  243B               	addwf	___fladd@a+3,w,c
  9647  0028AA  6E41               	movwf	___fladd@aexp,c
  9648  0028AC  BE3A               	btfsc	___fladd@a+2,7,c
  9649  0028AE  8041               	bsf	___fladd@aexp,0,c
  9650  0028B0  5041               	movf	___fladd@aexp,w,c
  9651  0028B2  B4D8               	btfsc	status,2,c
  9652  0028B4  D00D               	goto	l6652
  9653  0028B6  2841               	incf	___fladd@aexp,w,c
  9654  0028B8  A4D8               	btfss	status,2,c
  9655  0028BA  D008               	goto	l6648
  9656  0028BC  0E00               	movlw	0
  9657  0028BE  6E38               	movwf	___fladd@a,c
  9658  0028C0  0E00               	movlw	0
  9659  0028C2  6E39               	movwf	___fladd@a+1,c
  9660  0028C4  0E00               	movlw	0
  9661  0028C6  6E3A               	movwf	___fladd@a+2,c
  9662  0028C8  0E00               	movlw	0
  9663  0028CA  6E3B               	movwf	___fladd@a+3,c
  9664  0028CC                     l6648:
  9665  0028CC  8E3A               	bsf	___fladd@a+2,7,c
  9666  0028CE  D006               	goto	L12
  9667  0028D0                     l6652:
  9668  0028D0  0E00               	movlw	0
  9669  0028D2  6E38               	movwf	___fladd@a,c
  9670  0028D4  0E00               	movlw	0
  9671  0028D6  6E39               	movwf	___fladd@a+1,c
  9672  0028D8  0E00               	movlw	0
  9673  0028DA  6E3A               	movwf	___fladd@a+2,c
  9674  0028DC                     L12:
  9675  0028DC  0E00               	movlw	0
  9676  0028DE  6E3B               	movwf	___fladd@a+3,c
  9677  0028E0  5042               	movf	___fladd@bexp,w,c
  9678  0028E2  5C41               	subwf	___fladd@aexp,w,c
  9679  0028E4  B0D8               	btfsc	status,0,c
  9680  0028E6  D022               	goto	l6690
  9681  0028E8  AC40               	btfss	___fladd@signs,6,c
  9682  0028EA  D002               	goto	l6660
  9683  0028EC  0E80               	movlw	128
  9684  0028EE  1A40               	xorwf	___fladd@signs,f,c
  9685  0028F0                     l6660:
  9686  0028F0  C042  F043         	movff	___fladd@bexp,___fladd@grs
  9687  0028F4  C041  F042         	movff	___fladd@aexp,___fladd@bexp
  9688  0028F8  C043  F041         	movff	___fladd@grs,___fladd@aexp
  9689  0028FC  C034  F043         	movff	___fladd@b,___fladd@grs
  9690  002900  C038  F034         	movff	___fladd@a,___fladd@b
  9691  002904  C043  F038         	movff	___fladd@grs,___fladd@a
  9692  002908  C035  F043         	movff	___fladd@b+1,___fladd@grs
  9693  00290C  C039  F035         	movff	___fladd@a+1,___fladd@b+1
  9694  002910  C043  F039         	movff	___fladd@grs,___fladd@a+1
  9695  002914  C036  F043         	movff	___fladd@b+2,___fladd@grs
  9696  002918  C03A  F036         	movff	___fladd@a+2,___fladd@b+2
  9697  00291C  C043  F03A         	movff	___fladd@grs,___fladd@a+2
  9698  002920  C037  F043         	movff	___fladd@b+3,___fladd@grs
  9699  002924  C03B  F037         	movff	___fladd@a+3,___fladd@b+3
  9700  002928  C043  F03B         	movff	___fladd@grs,___fladd@a+3
  9701  00292C                     l6690:
  9702  00292C  0E00               	movlw	0
  9703  00292E  6E43               	movwf	___fladd@grs,c
  9704  002930  5042               	movf	___fladd@bexp,w,c
  9705  002932  C041  F03C         	movff	___fladd@aexp,??___fladd
  9706  002936  6A3D               	clrf	(??___fladd+1)& (0+255),c
  9707  002938  5E3C               	subwf	??___fladd,f,c
  9708  00293A  0E00               	movlw	0
  9709  00293C  5A3D               	subwfb	??___fladd+1,f,c
  9710  00293E  BE3D               	btfsc	??___fladd+1,7,c
  9711  002940  D02C               	goto	l1262
  9712  002942  503D               	movf	??___fladd+1,w,c
  9713  002944  E104               	bnz	u7220
  9714  002946  0E1A               	movlw	26
  9715  002948  5C3C               	subwf	??___fladd,w,c
  9716  00294A  A0D8               	btfss	status,0,c
  9717  00294C  D026               	goto	l1262
  9718  00294E                     u7220:
  9719  00294E  5034               	movf	___fladd@b,w,c
  9720  002950  1035               	iorwf	___fladd@b+1,w,c
  9721  002952  1036               	iorwf	___fladd@b+2,w,c
  9722  002954  1037               	iorwf	___fladd@b+3,w,c
  9723  002956  B4D8               	btfsc	status,2,c
  9724  002958  D002               	goto	u7230
  9725  00295A  0E01               	movlw	1
  9726  00295C  D001               	goto	u7240
  9727  00295E                     u7230:
  9728  00295E  0E00               	movlw	0
  9729  002960                     u7240:
  9730  002960  6E43               	movwf	___fladd@grs,c
  9731  002962  0E00               	movlw	0
  9732  002964  6E34               	movwf	___fladd@b,c
  9733  002966  0E00               	movlw	0
  9734  002968  6E35               	movwf	___fladd@b+1,c
  9735  00296A  0E00               	movlw	0
  9736  00296C  6E36               	movwf	___fladd@b+2,c
  9737  00296E  0E00               	movlw	0
  9738  002970  6E37               	movwf	___fladd@b+3,c
  9739  002972  C041  F042         	movff	___fladd@aexp,___fladd@bexp
  9740  002976  D015               	goto	u7270
  9741  002978                     l1263:
  9742  002978  A043               	btfss	___fladd@grs,0,c
  9743  00297A  D005               	goto	l6702
  9744  00297C  90D8               	bcf	status,0,c
  9745  00297E  3043               	rrcf	___fladd@grs,w,c
  9746  002980  0901               	iorlw	1
  9747  002982  6E43               	movwf	___fladd@grs,c
  9748  002984  D002               	goto	l6704
  9749  002986                     l6702:
  9750  002986  90D8               	bcf	status,0,c
  9751  002988  3243               	rrcf	___fladd@grs,f,c
  9752  00298A                     l6704:
  9753  00298A  B034               	btfsc	___fladd@b,0,c
  9754  00298C  8E43               	bsf	___fladd@grs,7,c
  9755  00298E  3437               	rlcf	___fladd@b+3,w,c
  9756  002990  3237               	rrcf	___fladd@b+3,f,c
  9757  002992  3236               	rrcf	___fladd@b+2,f,c
  9758  002994  3235               	rrcf	___fladd@b+1,f,c
  9759  002996  3234               	rrcf	___fladd@b,f,c
  9760  002998  2A42               	incf	___fladd@bexp,f,c
  9761  00299A                     l1262:
  9762  00299A  5041               	movf	___fladd@aexp,w,c
  9763  00299C  5C42               	subwf	___fladd@bexp,w,c
  9764  00299E  A0D8               	btfss	status,0,c
  9765  0029A0  D7EB               	goto	l1263
  9766  0029A2                     u7270:
  9767  0029A2  BC40               	btfsc	___fladd@signs,6,c
  9768  0029A4  D028               	goto	l6736
  9769  0029A6  5042               	movf	___fladd@bexp,w,c
  9770  0029A8  A4D8               	btfss	status,2,c
  9771  0029AA  D009               	goto	l6718
  9772  0029AC  0E00               	movlw	0
  9773  0029AE  6E34               	movwf	?___fladd,c
  9774  0029B0  0E00               	movlw	0
  9775  0029B2  6E35               	movwf	?___fladd+1,c
  9776  0029B4  0E00               	movlw	0
  9777  0029B6  6E36               	movwf	?___fladd+2,c
  9778  0029B8  0E00               	movlw	0
  9779  0029BA  6E37               	movwf	?___fladd+3,c
  9780  0029BC  0012               	return	
  9781  0029BE                     l6718:
  9782  0029BE  5038               	movf	___fladd@a,w,c
  9783  0029C0  2634               	addwf	___fladd@b,f,c
  9784  0029C2  5039               	movf	___fladd@a+1,w,c
  9785  0029C4  2235               	addwfc	___fladd@b+1,f,c
  9786  0029C6  503A               	movf	___fladd@a+2,w,c
  9787  0029C8  2236               	addwfc	___fladd@b+2,f,c
  9788  0029CA  503B               	movf	___fladd@a+3,w,c
  9789  0029CC  2237               	addwfc	___fladd@b+3,f,c
  9790  0029CE  A037               	btfss	___fladd@b+3,0,c
  9791  0029D0  D071               	goto	u7400
  9792  0029D2  A043               	btfss	___fladd@grs,0,c
  9793  0029D4  D005               	goto	l6726
  9794  0029D6  90D8               	bcf	status,0,c
  9795  0029D8  3043               	rrcf	___fladd@grs,w,c
  9796  0029DA  0901               	iorlw	1
  9797  0029DC  6E43               	movwf	___fladd@grs,c
  9798  0029DE  D002               	goto	l6728
  9799  0029E0                     l6726:
  9800  0029E0  90D8               	bcf	status,0,c
  9801  0029E2  3243               	rrcf	___fladd@grs,f,c
  9802  0029E4                     l6728:
  9803  0029E4  B034               	btfsc	___fladd@b,0,c
  9804  0029E6  8E43               	bsf	___fladd@grs,7,c
  9805  0029E8  3437               	rlcf	___fladd@b+3,w,c
  9806  0029EA  3237               	rrcf	___fladd@b+3,f,c
  9807  0029EC  3236               	rrcf	___fladd@b+2,f,c
  9808  0029EE  3235               	rrcf	___fladd@b+1,f,c
  9809  0029F0  3234               	rrcf	___fladd@b,f,c
  9810  0029F2  2A42               	incf	___fladd@bexp,f,c
  9811  0029F4  D05F               	goto	u7400
  9812  0029F6                     l6736:
  9813  0029F6  5038               	movf	___fladd@a,w,c
  9814  0029F8  5C34               	subwf	___fladd@b,w,c
  9815  0029FA  5039               	movf	___fladd@a+1,w,c
  9816  0029FC  5835               	subwfb	___fladd@b+1,w,c
  9817  0029FE  503A               	movf	___fladd@a+2,w,c
  9818  002A00  5836               	subwfb	___fladd@b+2,w,c
  9819  002A02  5037               	movf	___fladd@b+3,w,c
  9820  002A04  0A80               	xorlw	128
  9821  002A06  6E3C               	movwf	??___fladd& (0+255),c
  9822  002A08  503B               	movf	___fladd@a+3,w,c
  9823  002A0A  0A80               	xorlw	128
  9824  002A0C  583C               	subwfb	??___fladd& (0+255),w,c
  9825  002A0E  B0D8               	btfsc	status,0,c
  9826  002A10  D025               	goto	l6746
  9827  002A12  5034               	movf	___fladd@b,w,c
  9828  002A14  5C38               	subwf	___fladd@a,w,c
  9829  002A16  6E3C               	movwf	??___fladd& (0+255),c
  9830  002A18  5035               	movf	___fladd@b+1,w,c
  9831  002A1A  5839               	subwfb	___fladd@a+1,w,c
  9832  002A1C  6E3D               	movwf	(??___fladd+1)& (0+255),c
  9833  002A1E  5036               	movf	___fladd@b+2,w,c
  9834  002A20  583A               	subwfb	___fladd@a+2,w,c
  9835  002A22  6E3E               	movwf	(??___fladd+2)& (0+255),c
  9836  002A24  5037               	movf	___fladd@b+3,w,c
  9837  002A26  583B               	subwfb	___fladd@a+3,w,c
  9838  002A28  6E3F               	movwf	(??___fladd+3)& (0+255),c
  9839  002A2A  0EFF               	movlw	255
  9840  002A2C  243C               	addwf	??___fladd,w,c
  9841  002A2E  6E34               	movwf	___fladd@b,c
  9842  002A30  0EFF               	movlw	255
  9843  002A32  203D               	addwfc	??___fladd+1,w,c
  9844  002A34  6E35               	movwf	___fladd@b+1,c
  9845  002A36  0EFF               	movlw	255
  9846  002A38  203E               	addwfc	??___fladd+2,w,c
  9847  002A3A  6E36               	movwf	___fladd@b+2,c
  9848  002A3C  0EFF               	movlw	255
  9849  002A3E  203F               	addwfc	??___fladd+3,w,c
  9850  002A40  6E37               	movwf	___fladd@b+3,c
  9851  002A42  0E80               	movlw	128
  9852  002A44  1A40               	xorwf	___fladd@signs,f,c
  9853  002A46  6C43               	negf	___fladd@grs,c
  9854  002A48  5043               	movf	___fladd@grs,w,c
  9855  002A4A  A4D8               	btfss	status,2,c
  9856  002A4C  D00F               	goto	l1278
  9857  002A4E  0E01               	movlw	1
  9858  002A50  2634               	addwf	___fladd@b,f,c
  9859  002A52  0E00               	movlw	0
  9860  002A54  2235               	addwfc	___fladd@b+1,f,c
  9861  002A56  2236               	addwfc	___fladd@b+2,f,c
  9862  002A58  2237               	addwfc	___fladd@b+3,f,c
  9863  002A5A  D008               	goto	l1278
  9864  002A5C                     l6746:
  9865  002A5C  5038               	movf	___fladd@a,w,c
  9866  002A5E  5E34               	subwf	___fladd@b,f,c
  9867  002A60  5039               	movf	___fladd@a+1,w,c
  9868  002A62  5A35               	subwfb	___fladd@b+1,f,c
  9869  002A64  503A               	movf	___fladd@a+2,w,c
  9870  002A66  5A36               	subwfb	___fladd@b+2,f,c
  9871  002A68  503B               	movf	___fladd@a+3,w,c
  9872  002A6A  5A37               	subwfb	___fladd@b+3,f,c
  9873  002A6C                     l1278:
  9874  002A6C  5034               	movf	___fladd@b,w,c
  9875  002A6E  1035               	iorwf	___fladd@b+1,w,c
  9876  002A70  1036               	iorwf	___fladd@b+2,w,c
  9877  002A72  1037               	iorwf	___fladd@b+3,w,c
  9878  002A74  A4D8               	btfss	status,2,c
  9879  002A76  D01C               	goto	l6770
  9880  002A78  5043               	movf	___fladd@grs,w,c
  9881  002A7A  A4D8               	btfss	status,2,c
  9882  002A7C  D019               	goto	l6770
  9883  002A7E  0E00               	movlw	0
  9884  002A80  6E34               	movwf	?___fladd,c
  9885  002A82  0E00               	movlw	0
  9886  002A84  6E35               	movwf	?___fladd+1,c
  9887  002A86  0E00               	movlw	0
  9888  002A88  6E36               	movwf	?___fladd+2,c
  9889  002A8A  0E00               	movlw	0
  9890  002A8C  6E37               	movwf	?___fladd+3,c
  9891  002A8E  0012               	return	
  9892  002A90                     l6754:
  9893  002A90  90D8               	bcf	status,0,c
  9894  002A92  3634               	rlcf	___fladd@b,f,c
  9895  002A94  3635               	rlcf	___fladd@b+1,f,c
  9896  002A96  3636               	rlcf	___fladd@b+2,f,c
  9897  002A98  3637               	rlcf	___fladd@b+3,f,c
  9898  002A9A  BE43               	btfsc	___fladd@grs,7,c
  9899  002A9C  8034               	bsf	___fladd@b,0,c
  9900  002A9E  A043               	btfss	___fladd@grs,0,c
  9901  002AA0  D002               	goto	l6764
  9902  002AA2  80D8               	bsf	status,0,c
  9903  002AA4  D001               	goto	L13
  9904  002AA6                     l6764:
  9905  002AA6  90D8               	bcf	status,0,c
  9906  002AA8                     L13:
  9907  002AA8  3643               	rlcf	___fladd@grs,f,c
  9908  002AAA  5042               	movf	___fladd@bexp,w,c
  9909  002AAC  A4D8               	btfss	status,2,c
  9910  002AAE  0642               	decf	___fladd@bexp,f,c
  9911  002AB0                     l6770:
  9912  002AB0  AE36               	btfss	___fladd@b+2,7,c
  9913  002AB2  D7EE               	goto	l6754
  9914  002AB4                     u7400:
  9915  002AB4  0E00               	movlw	0
  9916  002AB6  6E41               	movwf	___fladd@aexp,c
  9917  002AB8  AE43               	btfss	___fladd@grs,7,c
  9918  002ABA  D00B               	goto	l1287
  9919  002ABC  C043  F03C         	movff	___fladd@grs,??___fladd
  9920  002AC0  0E7F               	movlw	127
  9921  002AC2  163C               	andwf	??___fladd,f,c
  9922  002AC4  B4D8               	btfsc	status,2,c
  9923  002AC6  D003               	goto	l1288
  9924  002AC8                     u7420:
  9925  002AC8  0E01               	movlw	1
  9926  002ACA  6E41               	movwf	___fladd@aexp,c
  9927  002ACC  D002               	goto	l1287
  9928  002ACE                     l1288:
  9929  002ACE  B034               	btfsc	___fladd@b,0,c
  9930  002AD0  D7FB               	goto	u7420
  9931  002AD2                     l1287:
  9932  002AD2  5041               	movf	___fladd@aexp,w,c
  9933  002AD4  B4D8               	btfsc	status,2,c
  9934  002AD6  D020               	goto	l6790
  9935  002AD8  0E01               	movlw	1
  9936  002ADA  2634               	addwf	___fladd@b,f,c
  9937  002ADC  0E00               	movlw	0
  9938  002ADE  2235               	addwfc	___fladd@b+1,f,c
  9939  002AE0  2236               	addwfc	___fladd@b+2,f,c
  9940  002AE2  2237               	addwfc	___fladd@b+3,f,c
  9941  002AE4  A037               	btfss	___fladd@b+3,0,c
  9942  002AE6  D018               	goto	l6790
  9943  002AE8  C034  F03C         	movff	___fladd@b,??___fladd
  9944  002AEC  C035  F03D         	movff	___fladd@b+1,??___fladd+1
  9945  002AF0  C036  F03E         	movff	___fladd@b+2,??___fladd+2
  9946  002AF4  C037  F03F         	movff	___fladd@b+3,??___fladd+3
  9947  002AF8  343F               	rlcf	??___fladd+3,w,c
  9948  002AFA  323F               	rrcf	??___fladd+3,f,c
  9949  002AFC  323E               	rrcf	??___fladd+2,f,c
  9950  002AFE  323D               	rrcf	??___fladd+1,f,c
  9951  002B00  323C               	rrcf	??___fladd,f,c
  9952  002B02  C03C  F034         	movff	??___fladd,___fladd@b
  9953  002B06  C03D  F035         	movff	??___fladd+1,___fladd@b+1
  9954  002B0A  C03E  F036         	movff	??___fladd+2,___fladd@b+2
  9955  002B0E  C03F  F037         	movff	??___fladd+3,___fladd@b+3
  9956  002B12  2842               	incf	___fladd@bexp,w,c
  9957  002B14  A4D8               	btfss	status,2,c
  9958  002B16  2A42               	incf	___fladd@bexp,f,c
  9959  002B18                     l6790:
  9960  002B18  2842               	incf	___fladd@bexp,w,c
  9961  002B1A  B4D8               	btfsc	status,2,c
  9962  002B1C  D003               	goto	u7480
  9963  002B1E  5042               	movf	___fladd@bexp,w,c
  9964  002B20  A4D8               	btfss	status,2,c
  9965  002B22  D00D               	goto	l6798
  9966  002B24                     u7480:
  9967  002B24  0E00               	movlw	0
  9968  002B26  6E34               	movwf	___fladd@b,c
  9969  002B28  0E00               	movlw	0
  9970  002B2A  6E35               	movwf	___fladd@b+1,c
  9971  002B2C  0E00               	movlw	0
  9972  002B2E  6E36               	movwf	___fladd@b+2,c
  9973  002B30  0E00               	movlw	0
  9974  002B32  6E37               	movwf	___fladd@b+3,c
  9975  002B34  5042               	movf	___fladd@bexp,w,c
  9976  002B36  A4D8               	btfss	status,2,c
  9977  002B38  D002               	goto	l6798
  9978  002B3A  0E00               	movlw	0
  9979  002B3C  6E40               	movwf	___fladd@signs,c
  9980  002B3E                     l6798:
  9981  002B3E  A042               	btfss	___fladd@bexp,0,c
  9982  002B40  D002               	goto	l6802
  9983  002B42  8E36               	bsf	___fladd@b+2,7,c
  9984  002B44  D001               	goto	l6804
  9985  002B46                     l6802:
  9986  002B46  9E36               	bcf	___fladd@b+2,7,c
  9987  002B48                     l6804:
  9988  002B48  90D8               	bcf	status,0,c
  9989  002B4A  3042               	rrcf	___fladd@bexp,w,c
  9990  002B4C  6E37               	movwf	___fladd@b+3,c
  9991  002B4E  BE40               	btfsc	___fladd@signs,7,c
  9992  002B50  8E37               	bsf	___fladd@b+3,7,c
  9993  002B52  C034  F034         	movff	___fladd@b,?___fladd
  9994  002B56  C035  F035         	movff	___fladd@b+1,?___fladd+1
  9995  002B5A  C036  F036         	movff	___fladd@b+2,?___fladd+2
  9996  002B5E  C037  F037         	movff	___fladd@b+3,?___fladd+3
  9997  002B62  0012               	return		;funcret
  9998  002B64                     __end_of___fladd:
  9999                           	opt callstack 0
 10000                           
 10001 ;; *************** function _UART_send_string *****************
 10002 ;; Defined at:
 10003 ;;		line 65 in file "uart.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  message         2   27[COMRAM] PTR unsigned char 
 10006 ;;		 -> main@uart_char_to_send(25), main@buffer(10), STR_1(15), 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;  i               2   31[COMRAM] int 
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1    wreg      void 
 10011 ;; Registers used:
 10012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10022 ;;Total ram usage:        6 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; Hardware stack levels required when called:    4
 10025 ;; This function calls:
 10026 ;;		_UART_send_char
 10027 ;; This function is called by:
 10028 ;;		_main
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text38
 10033  003ED6                     __ptext38:
 10034                           	opt callstack 0
 10035  003ED6                     _UART_send_string:
 10036                           	opt callstack 26
 10037                           
 10038                           ;uart.c: 67:     int i;;uart.c: 68:     i=0;
 10039                           
 10040                           ;incstack = 0
 10041  003ED6  0E00               	movlw	0
 10042  003ED8  6E21               	movwf	UART_send_string@i+1,c
 10043  003EDA  0E00               	movlw	0
 10044  003EDC  6E20               	movwf	UART_send_string@i,c
 10045                           
 10046                           ;uart.c: 69:     while(message[i]!='\0'){
 10047  003EDE  D035               	goto	l6020
 10048  003EE0                     l6012:
 10049                           
 10050                           ;uart.c: 70:         if(message[i] == '\0'){
 10051  003EE0  5020               	movf	UART_send_string@i,w,c
 10052  003EE2  241C               	addwf	UART_send_string@message,w,c
 10053  003EE4  6E1E               	movwf	??_UART_send_string& (0+255),c
 10054  003EE6  5021               	movf	UART_send_string@i+1,w,c
 10055  003EE8  201D               	addwfc	UART_send_string@message+1,w,c
 10056  003EEA  6E1F               	movwf	(??_UART_send_string+1)& (0+255),c
 10057  003EEC  C01E  FFF6         	movff	??_UART_send_string,tblptrl
 10058  003EF0  C01F  FFF7         	movff	??_UART_send_string+1,tblptrh
 10059  003EF4  0E00               	movlw	low (__smallconst shr (0+16))
 10060  003EF6  6EF8               	movwf	tblptru,c
 10061  003EF8  0E0F               	movlw	(high __ramtop+-1)
 10062  003EFA  64F7               	cpfsgt	tblptrh,c
 10063  003EFC  D003               	bra	u6737
 10064  003EFE  0008               	tblrd		*
 10065  003F00  50F5               	movf	tablat,w,c
 10066  003F02  D005               	bra	u6730
 10067  003F04                     u6737:
 10068  003F04  CFF6 FFE1          	movff	tblptrl,fsr1l
 10069  003F08  CFF7 FFE2          	movff	tblptrh,fsr1h
 10070  003F0C  50E7               	movf	indf1,w,c
 10071  003F0E                     u6730:
 10072  003F0E  0900               	iorlw	0
 10073  003F10  B4D8               	btfsc	status,2,c
 10074  003F12  0012               	return	
 10075                           
 10076                           ;uart.c: 76:         UART_send_char(message[i]);
 10077  003F14  5020               	movf	UART_send_string@i,w,c
 10078  003F16  241C               	addwf	UART_send_string@message,w,c
 10079  003F18  6E1E               	movwf	??_UART_send_string& (0+255),c
 10080  003F1A  5021               	movf	UART_send_string@i+1,w,c
 10081  003F1C  201D               	addwfc	UART_send_string@message+1,w,c
 10082  003F1E  6E1F               	movwf	(??_UART_send_string+1)& (0+255),c
 10083  003F20  C01E  FFF6         	movff	??_UART_send_string,tblptrl
 10084  003F24  C01F  FFF7         	movff	??_UART_send_string+1,tblptrh
 10085  003F28  0E00               	movlw	low (__smallconst shr (0+16))
 10086  003F2A  6EF8               	movwf	tblptru,c
 10087  003F2C  0E0F               	movlw	(high __ramtop+-1)
 10088  003F2E  64F7               	cpfsgt	tblptrh,c
 10089  003F30  D003               	bra	u6757
 10090  003F32  0008               	tblrd		*
 10091  003F34  50F5               	movf	tablat,w,c
 10092  003F36  D005               	bra	u6750
 10093  003F38                     u6757:
 10094  003F38  CFF6 FFE1          	movff	tblptrl,fsr1l
 10095  003F3C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10096  003F40  50E7               	movf	indf1,w,c
 10097  003F42                     u6750:
 10098  003F42  EC24  F025         	call	_UART_send_char
 10099                           
 10100                           ;uart.c: 77:         i++;
 10101  003F46  4A20               	infsnz	UART_send_string@i,f,c
 10102  003F48  2A21               	incf	UART_send_string@i+1,f,c
 10103  003F4A                     l6020:
 10104                           
 10105                           ;uart.c: 69:     while(message[i]!='\0'){
 10106  003F4A  5020               	movf	UART_send_string@i,w,c
 10107  003F4C  241C               	addwf	UART_send_string@message,w,c
 10108  003F4E  6E1E               	movwf	??_UART_send_string& (0+255),c
 10109  003F50  5021               	movf	UART_send_string@i+1,w,c
 10110  003F52  201D               	addwfc	UART_send_string@message+1,w,c
 10111  003F54  6E1F               	movwf	(??_UART_send_string+1)& (0+255),c
 10112  003F56  C01E  FFF6         	movff	??_UART_send_string,tblptrl
 10113  003F5A  C01F  FFF7         	movff	??_UART_send_string+1,tblptrh
 10114  003F5E  0E00               	movlw	low (__smallconst shr (0+16))
 10115  003F60  6EF8               	movwf	tblptru,c
 10116  003F62  0E0F               	movlw	(high __ramtop+-1)
 10117  003F64  64F7               	cpfsgt	tblptrh,c
 10118  003F66  D003               	bra	u6767
 10119  003F68  0008               	tblrd		*
 10120  003F6A  50F5               	movf	tablat,w,c
 10121  003F6C  D005               	bra	u6760
 10122  003F6E                     u6767:
 10123  003F6E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10124  003F72  CFF7 FFE2          	movff	tblptrh,fsr1h
 10125  003F76  50E7               	movf	indf1,w,c
 10126  003F78                     u6760:
 10127  003F78  0900               	iorlw	0
 10128  003F7A  B4D8               	btfsc	status,2,c
 10129  003F7C  0012               	return	
 10130  003F7E  D7B0               	goto	l6012
 10131  003F80                     __end_of_UART_send_string:
 10132                           	opt callstack 0
 10133                           
 10134 ;; *************** function _UART_send_char *****************
 10135 ;; Defined at:
 10136 ;;		line 58 in file "uart.c"
 10137 ;; Parameters:    Size  Location     Type
 10138 ;;  c               1    wreg     const unsigned char 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  c               1   26[COMRAM] const unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;Total ram usage:        1 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    3
 10157 ;; This function calls:
 10158 ;;		Nothing
 10159 ;; This function is called by:
 10160 ;;		_UART_send_string
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text39
 10165  004A48                     __ptext39:
 10166                           	opt callstack 0
 10167  004A48                     _UART_send_char:
 10168                           	opt callstack 26
 10169                           
 10170                           ;incstack = 0
 10171                           ;UART_send_char@c stored from wreg
 10172  004A48  6E1B               	movwf	UART_send_char@c,c
 10173                           
 10174                           ;uart.c: 59:     _tx_buffer[_tx_buffer_head] = c;
 10175  004A4A  0E00               	movlw	low __tx_buffer
 10176  004A4C  245E               	addwf	__tx_buffer_head,w,c	;volatile
 10177  004A4E  6ED9               	movwf	fsr2l,c
 10178  004A50  6ADA               	clrf	fsr2h,c
 10179  004A52  0E02               	movlw	high __tx_buffer
 10180  004A54  22DA               	addwfc	fsr2h,f,c
 10181  004A56  C01B  FFDF         	movff	UART_send_char@c,indf2
 10182                           
 10183                           ;uart.c: 60:     _tx_buffer_head = (unsigned char) (_tx_buffer_head + 1) % 64;
 10184  004A5A  285E               	incf	__tx_buffer_head,w,c	;volatile
 10185  004A5C  0B3F               	andlw	63
 10186  004A5E  6E5E               	movwf	__tx_buffer_head,c	;volatile
 10187                           
 10188                           ;uart.c: 61:     TXIE = 1;
 10189  004A60  889D               	bsf	3997,4,c	;volatile
 10190  004A62  0012               	return		;funcret
 10191  004A64                     __end_of_UART_send_char:
 10192                           	opt callstack 0
 10193                           
 10194 ;; *************** function _UART_read *****************
 10195 ;; Defined at:
 10196 ;;		line 90 in file "uart.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;		None
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;  c               1   26[COMRAM] unsigned char 
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      unsigned char 
 10203 ;; Registers used:
 10204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;Total ram usage:        1 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    3
 10217 ;; This function calls:
 10218 ;;		Nothing
 10219 ;; This function is called by:
 10220 ;;		_main
 10221 ;; This function uses a non-reentrant model
 10222 ;;
 10223                           
 10224                           	psect	text40
 10225  004A02                     __ptext40:
 10226                           	opt callstack 0
 10227  004A02                     _UART_read:
 10228                           	opt callstack 27
 10229                           
 10230                           ;uart.c: 91:     if(_rx_buffer_head == _rx_buffer_tail){
 10231                           
 10232                           ;incstack = 0
 10233  004A02  505F               	movf	__rx_buffer_tail,w,c	;volatile
 10234  004A04  1860               	xorwf	__rx_buffer_head,w,c	;volatile
 10235  004A06  A4D8               	btfss	status,2,c
 10236  004A08  D002               	goto	l6060
 10237                           
 10238                           ;uart.c: 92:         return -1;
 10239  004A0A  0EFF               	movlw	255
 10240  004A0C  0012               	return	
 10241  004A0E                     l6060:
 10242                           
 10243                           ;uart.c: 94:         unsigned char c = _rx_buffer[_rx_buffer_tail];
 10244  004A0E  0E40               	movlw	low __rx_buffer
 10245  004A10  245F               	addwf	__rx_buffer_tail,w,c	;volatile
 10246  004A12  6ED9               	movwf	fsr2l,c
 10247  004A14  6ADA               	clrf	fsr2h,c
 10248  004A16  0E02               	movlw	high __rx_buffer
 10249  004A18  22DA               	addwfc	fsr2h,f,c
 10250  004A1A  50DF               	movf	indf2,w,c
 10251  004A1C  6E1B               	movwf	UART_read@c,c
 10252                           
 10253                           ;uart.c: 95:         _rx_buffer_tail = (unsigned char)(_rx_buffer_tail + 1) % 64;
 10254  004A1E  285F               	incf	__rx_buffer_tail,w,c	;volatile
 10255  004A20  0B3F               	andlw	63
 10256  004A22  6E5F               	movwf	__rx_buffer_tail,c	;volatile
 10257                           
 10258                           ;uart.c: 96:         return c;
 10259  004A24  501B               	movf	UART_read@c,w,c
 10260  004A26  0012               	return		;funcret
 10261  004A28                     __end_of_UART_read:
 10262                           	opt callstack 0
 10263                           
 10264 ;; *************** function _UART_available *****************
 10265 ;; Defined at:
 10266 ;;		line 86 in file "uart.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;		None
 10269 ;; Auto vars:     Size  Location     Type
 10270 ;;		None
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  2   26[COMRAM] int 
 10273 ;; Registers used:
 10274 ;;		wreg, status,2, status,0
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10283 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10284 ;;Total ram usage:        4 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    3
 10287 ;; This function calls:
 10288 ;;		Nothing
 10289 ;; This function is called by:
 10290 ;;		_main
 10291 ;; This function uses a non-reentrant model
 10292 ;;
 10293                           
 10294                           	psect	text41
 10295  004A28                     __ptext41:
 10296                           	opt callstack 0
 10297  004A28                     _UART_available:
 10298                           	opt callstack 27
 10299                           
 10300                           ;uart.c: 87:     return ((unsigned int)(64 + _rx_buffer_head - _rx_buffer_tail)) % 64;
 10301                           
 10302                           ;incstack = 0
 10303  004A28  505F               	movf	__rx_buffer_tail,w,c	;volatile
 10304  004A2A  C060  F01D         	movff	__rx_buffer_head,??_UART_available	;volatile
 10305  004A2E  6A1E               	clrf	(??_UART_available+1)& (0+255),c
 10306  004A30  5E1D               	subwf	??_UART_available,f,c
 10307  004A32  0E00               	movlw	0
 10308  004A34  5A1E               	subwfb	??_UART_available+1,f,c
 10309  004A36  0E40               	movlw	64
 10310  004A38  261D               	addwf	??_UART_available,f,c
 10311  004A3A  0E00               	movlw	0
 10312  004A3C  221E               	addwfc	??_UART_available+1,f,c
 10313  004A3E  0E3F               	movlw	63
 10314  004A40  141D               	andwf	??_UART_available,w,c
 10315  004A42  6E1B               	movwf	?_UART_available,c
 10316  004A44  6A1C               	clrf	?_UART_available+1,c
 10317  004A46  0012               	return		;funcret
 10318  004A48                     __end_of_UART_available:
 10319                           	opt callstack 0
 10320                           
 10321 ;; *************** function _UART_Init *****************
 10322 ;; Defined at:
 10323 ;;		line 15 in file "uart.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;		None
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  baudRate        4   44[COMRAM] long 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      void 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10341 ;;Total ram usage:        8 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:    4
 10344 ;; This function calls:
 10345 ;;		___aldiv
 10346 ;; This function is called by:
 10347 ;;		_main
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text42
 10352  0041F4                     __ptext42:
 10353                           	opt callstack 0
 10354  0041F4                     _UART_Init:
 10355                           	opt callstack 26
 10356                           
 10357                           ;uart.c: 16:     _rx_buffer_head = 0;
 10358                           
 10359                           ;incstack = 0
 10360  0041F4  0E00               	movlw	0
 10361  0041F6  6E60               	movwf	__rx_buffer_head,c	;volatile
 10362                           
 10363                           ;uart.c: 17:     _rx_buffer_tail = 0;
 10364  0041F8  0E00               	movlw	0
 10365  0041FA  6E5F               	movwf	__rx_buffer_tail,c	;volatile
 10366                           
 10367                           ;uart.c: 18:     _tx_buffer_head = 0;
 10368  0041FC  0E00               	movlw	0
 10369  0041FE  6E5E               	movwf	__tx_buffer_head,c	;volatile
 10370                           
 10371                           ;uart.c: 19:     _tx_buffer_tail = 0;
 10372  004200  0E00               	movlw	0
 10373  004202  6E5D               	movwf	__tx_buffer_tail,c	;volatile
 10374                           
 10375                           ;uart.c: 20:     long baudRate = 19200;
 10376  004204  0E00               	movlw	0
 10377  004206  6E2D               	movwf	UART_Init@baudRate,c
 10378  004208  0E4B               	movlw	75
 10379  00420A  6E2E               	movwf	UART_Init@baudRate+1,c
 10380  00420C  0E00               	movlw	0
 10381  00420E  6E2F               	movwf	UART_Init@baudRate+2,c
 10382  004210  0E00               	movlw	0
 10383  004212  6E30               	movwf	UART_Init@baudRate+3,c
 10384                           
 10385                           ;uart.c: 28:     SPBRG = (unsigned char)((40000000 / (64 * baudRate)) - 1);
 10386  004214  0E00               	movlw	0
 10387  004216  6E1B               	movwf	___aldiv@dividend,c
 10388  004218  0E5A               	movlw	90
 10389  00421A  6E1C               	movwf	___aldiv@dividend+1,c
 10390  00421C  0E62               	movlw	98
 10391  00421E  6E1D               	movwf	___aldiv@dividend+2,c
 10392  004220  0E02               	movlw	2
 10393  004222  6E1E               	movwf	___aldiv@dividend+3,c
 10394  004224  C02D  F029         	movff	UART_Init@baudRate,??_UART_Init
 10395  004228  C02E  F02A         	movff	UART_Init@baudRate+1,??_UART_Init+1
 10396  00422C  C02F  F02B         	movff	UART_Init@baudRate+2,??_UART_Init+2
 10397  004230  C030  F02C         	movff	UART_Init@baudRate+3,??_UART_Init+3
 10398  004234  0E06               	movlw	6
 10399  004236                     u6725:
 10400  004236  90D8               	bcf	status,0,c
 10401  004238  3629               	rlcf	??_UART_Init,f,c
 10402  00423A  362A               	rlcf	??_UART_Init+1,f,c
 10403  00423C  362B               	rlcf	??_UART_Init+2,f,c
 10404  00423E  362C               	rlcf	??_UART_Init+3,f,c
 10405  004240  2EE8               	decfsz	wreg,f,c
 10406  004242  D7F9               	goto	u6725
 10407  004244  C029  F01F         	movff	??_UART_Init,___aldiv@divisor
 10408  004248  C02A  F020         	movff	??_UART_Init+1,___aldiv@divisor+1
 10409  00424C  C02B  F021         	movff	??_UART_Init+2,___aldiv@divisor+2
 10410  004250  C02C  F022         	movff	??_UART_Init+3,___aldiv@divisor+3
 10411  004254  ECA8  F01E         	call	___aldiv	;wreg free
 10412  004258  041B               	decf	?___aldiv,w,c
 10413  00425A  6EAF               	movwf	4015,c	;volatile
 10414                           
 10415                           ;uart.c: 31:     TRISCbits.TRISC6 = 0;
 10416  00425C  9C94               	bcf	3988,6,c	;volatile
 10417                           
 10418                           ;uart.c: 32:     TRISCbits.TRISC7 = 1;
 10419  00425E  8E94               	bsf	3988,7,c	;volatile
 10420                           
 10421                           ;uart.c: 35:     TXSTAbits.TX9 = 0;
 10422  004260  9CAC               	bcf	4012,6,c	;volatile
 10423                           
 10424                           ;uart.c: 36:     TXSTAbits.SYNC = 0;
 10425  004262  98AC               	bcf	4012,4,c	;volatile
 10426                           
 10427                           ;uart.c: 38:     TXSTAbits.TXEN = 1;
 10428  004264  8AAC               	bsf	4012,5,c	;volatile
 10429                           
 10430                           ;uart.c: 39:     _delay((unsigned long)((5)*(40000000/4000.0)));
 10431  004266  0E41               	movlw	65
 10432  004268  6E29               	movwf	??_UART_Init& (0+255),c
 10433  00426A  0EEE               	movlw	238
 10434  00426C                     u9897:
 10435  00426C  2EE8               	decfsz	wreg,f,c
 10436  00426E  D7FE               	bra	u9897
 10437  004270  2E29               	decfsz	??_UART_Init& (0+255),f,c
 10438  004272  D7FC               	bra	u9897
 10439  004274  D000               	nop2	
 10440                           
 10441                           ;uart.c: 41:     RCSTAbits.SPEN = 1;
 10442  004276  8EAB               	bsf	4011,7,c	;volatile
 10443                           
 10444                           ;uart.c: 42:     RCSTAbits.RX9 = 0;
 10445  004278  9CAB               	bcf	4011,6,c	;volatile
 10446                           
 10447                           ;uart.c: 43:     RCSTAbits.CREN = 1;
 10448  00427A  88AB               	bsf	4011,4,c	;volatile
 10449                           
 10450                           ;uart.c: 45:     PIE1bits.RCIE = 1;
 10451  00427C  8A9D               	bsf	3997,5,c	;volatile
 10452                           
 10453                           ;uart.c: 46:     PIE1bits.TXIE = 1;
 10454  00427E  889D               	bsf	3997,4,c	;volatile
 10455  004280  0012               	return		;funcret
 10456  004282                     __end_of_UART_Init:
 10457                           	opt callstack 0
 10458                           
 10459 ;; *************** function ___aldiv *****************
 10460 ;; Defined at:
 10461 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  dividend        4   26[COMRAM] long 
 10464 ;;  divisor         4   30[COMRAM] long 
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  quotient        4   36[COMRAM] long 
 10467 ;;  sign            1   35[COMRAM] unsigned char 
 10468 ;;  counter         1   34[COMRAM] unsigned char 
 10469 ;; Return value:  Size  Location     Type
 10470 ;;                  4   26[COMRAM] long 
 10471 ;; Registers used:
 10472 ;;		wreg, status,2, status,0
 10473 ;; Tracked objects:
 10474 ;;		On entry : 0/0
 10475 ;;		On exit  : 0/0
 10476 ;;		Unchanged: 0/0
 10477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10478 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;Total ram usage:       14 bytes
 10483 ;; Hardware stack levels used:    1
 10484 ;; Hardware stack levels required when called:    3
 10485 ;; This function calls:
 10486 ;;		Nothing
 10487 ;; This function is called by:
 10488 ;;		_UART_Init
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text43
 10493  003D50                     __ptext43:
 10494                           	opt callstack 0
 10495  003D50                     ___aldiv:
 10496                           	opt callstack 26
 10497                           
 10498                           ;incstack = 0
 10499  003D50  0E00               	movlw	0
 10500  003D52  6E24               	movwf	___aldiv@sign,c
 10501  003D54  AE22               	btfss	___aldiv@divisor+3,7,c
 10502  003D56  D00A               	goto	l5632
 10503  003D58  1E22               	comf	___aldiv@divisor+3,f,c
 10504  003D5A  1E21               	comf	___aldiv@divisor+2,f,c
 10505  003D5C  1E20               	comf	___aldiv@divisor+1,f,c
 10506  003D5E  6C1F               	negf	___aldiv@divisor,c
 10507  003D60  0E00               	movlw	0
 10508  003D62  2220               	addwfc	___aldiv@divisor+1,f,c
 10509  003D64  2221               	addwfc	___aldiv@divisor+2,f,c
 10510  003D66  2222               	addwfc	___aldiv@divisor+3,f,c
 10511  003D68  0E01               	movlw	1
 10512  003D6A  6E24               	movwf	___aldiv@sign,c
 10513  003D6C                     l5632:
 10514  003D6C  AE1E               	btfss	___aldiv@dividend+3,7,c
 10515  003D6E  D00A               	goto	l5638
 10516  003D70  1E1E               	comf	___aldiv@dividend+3,f,c
 10517  003D72  1E1D               	comf	___aldiv@dividend+2,f,c
 10518  003D74  1E1C               	comf	___aldiv@dividend+1,f,c
 10519  003D76  6C1B               	negf	___aldiv@dividend,c
 10520  003D78  0E00               	movlw	0
 10521  003D7A  221C               	addwfc	___aldiv@dividend+1,f,c
 10522  003D7C  221D               	addwfc	___aldiv@dividend+2,f,c
 10523  003D7E  221E               	addwfc	___aldiv@dividend+3,f,c
 10524  003D80  0E01               	movlw	1
 10525  003D82  1A24               	xorwf	___aldiv@sign,f,c
 10526  003D84                     l5638:
 10527  003D84  0E00               	movlw	0
 10528  003D86  6E25               	movwf	___aldiv@quotient,c
 10529  003D88  0E00               	movlw	0
 10530  003D8A  6E26               	movwf	___aldiv@quotient+1,c
 10531  003D8C  0E00               	movlw	0
 10532  003D8E  6E27               	movwf	___aldiv@quotient+2,c
 10533  003D90  0E00               	movlw	0
 10534  003D92  6E28               	movwf	___aldiv@quotient+3,c
 10535  003D94  501F               	movf	___aldiv@divisor,w,c
 10536  003D96  1020               	iorwf	___aldiv@divisor+1,w,c
 10537  003D98  1021               	iorwf	___aldiv@divisor+2,w,c
 10538  003D9A  1022               	iorwf	___aldiv@divisor+3,w,c
 10539  003D9C  B4D8               	btfsc	status,2,c
 10540  003D9E  D02A               	goto	l5660
 10541  003DA0  0E01               	movlw	1
 10542  003DA2  6E23               	movwf	___aldiv@counter,c
 10543  003DA4  D006               	goto	l5646
 10544  003DA6                     l5644:
 10545  003DA6  90D8               	bcf	status,0,c
 10546  003DA8  361F               	rlcf	___aldiv@divisor,f,c
 10547  003DAA  3620               	rlcf	___aldiv@divisor+1,f,c
 10548  003DAC  3621               	rlcf	___aldiv@divisor+2,f,c
 10549  003DAE  3622               	rlcf	___aldiv@divisor+3,f,c
 10550  003DB0  2A23               	incf	___aldiv@counter,f,c
 10551  003DB2                     l5646:
 10552  003DB2  AE22               	btfss	___aldiv@divisor+3,7,c
 10553  003DB4  D7F8               	goto	l5644
 10554  003DB6                     u6240:
 10555  003DB6  90D8               	bcf	status,0,c
 10556  003DB8  3625               	rlcf	___aldiv@quotient,f,c
 10557  003DBA  3626               	rlcf	___aldiv@quotient+1,f,c
 10558  003DBC  3627               	rlcf	___aldiv@quotient+2,f,c
 10559  003DBE  3628               	rlcf	___aldiv@quotient+3,f,c
 10560  003DC0  501F               	movf	___aldiv@divisor,w,c
 10561  003DC2  5C1B               	subwf	___aldiv@dividend,w,c
 10562  003DC4  5020               	movf	___aldiv@divisor+1,w,c
 10563  003DC6  581C               	subwfb	___aldiv@dividend+1,w,c
 10564  003DC8  5021               	movf	___aldiv@divisor+2,w,c
 10565  003DCA  581D               	subwfb	___aldiv@dividend+2,w,c
 10566  003DCC  5022               	movf	___aldiv@divisor+3,w,c
 10567  003DCE  581E               	subwfb	___aldiv@dividend+3,w,c
 10568  003DD0  A0D8               	btfss	status,0,c
 10569  003DD2  D009               	goto	l5656
 10570  003DD4  501F               	movf	___aldiv@divisor,w,c
 10571  003DD6  5E1B               	subwf	___aldiv@dividend,f,c
 10572  003DD8  5020               	movf	___aldiv@divisor+1,w,c
 10573  003DDA  5A1C               	subwfb	___aldiv@dividend+1,f,c
 10574  003DDC  5021               	movf	___aldiv@divisor+2,w,c
 10575  003DDE  5A1D               	subwfb	___aldiv@dividend+2,f,c
 10576  003DE0  5022               	movf	___aldiv@divisor+3,w,c
 10577  003DE2  5A1E               	subwfb	___aldiv@dividend+3,f,c
 10578  003DE4  8025               	bsf	___aldiv@quotient,0,c
 10579  003DE6                     l5656:
 10580  003DE6  90D8               	bcf	status,0,c
 10581  003DE8  3222               	rrcf	___aldiv@divisor+3,f,c
 10582  003DEA  3221               	rrcf	___aldiv@divisor+2,f,c
 10583  003DEC  3220               	rrcf	___aldiv@divisor+1,f,c
 10584  003DEE  321F               	rrcf	___aldiv@divisor,f,c
 10585  003DF0  2E23               	decfsz	___aldiv@counter,f,c
 10586  003DF2  D7E1               	goto	u6240
 10587  003DF4                     l5660:
 10588  003DF4  5024               	movf	___aldiv@sign,w,c
 10589  003DF6  B4D8               	btfsc	status,2,c
 10590  003DF8  D008               	goto	l5664
 10591  003DFA  1E28               	comf	___aldiv@quotient+3,f,c
 10592  003DFC  1E27               	comf	___aldiv@quotient+2,f,c
 10593  003DFE  1E26               	comf	___aldiv@quotient+1,f,c
 10594  003E00  6C25               	negf	___aldiv@quotient,c
 10595  003E02  0E00               	movlw	0
 10596  003E04  2226               	addwfc	___aldiv@quotient+1,f,c
 10597  003E06  2227               	addwfc	___aldiv@quotient+2,f,c
 10598  003E08  2228               	addwfc	___aldiv@quotient+3,f,c
 10599  003E0A                     l5664:
 10600  003E0A  C025  F01B         	movff	___aldiv@quotient,?___aldiv
 10601  003E0E  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
 10602  003E12  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
 10603  003E16  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
 10604  003E1A  0012               	return		;funcret
 10605  003E1C                     __end_of___aldiv:
 10606                           	opt callstack 0
 10607                           
 10608 ;; *************** function _PWMSetup *****************
 10609 ;; Defined at:
 10610 ;;		line 411 in file "main.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;		None
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;		None
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  1    wreg      void 
 10617 ;; Registers used:
 10618 ;;		wreg, status,2
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;Total ram usage:        0 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:    3
 10631 ;; This function calls:
 10632 ;;		Nothing
 10633 ;; This function is called by:
 10634 ;;		_main
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text44
 10639  0049B4                     __ptext44:
 10640                           	opt callstack 0
 10641  0049B4                     _PWMSetup:
 10642                           	opt callstack 27
 10643                           
 10644                           ;main.c: 414:     TRISCbits.TRISC2 = 1;
 10645                           
 10646                           ;incstack = 0
 10647  0049B4  8494               	bsf	3988,2,c	;volatile
 10648                           
 10649                           ;main.c: 415:     TRISCbits.TRISC1 = 1;
 10650  0049B6  8294               	bsf	3988,1,c	;volatile
 10651                           
 10652                           ;main.c: 418:     const unsigned long FREQUENCY = 3100;;main.c: 419:     const unsigned 
      +                          char TIMER2_PRESCALER = 16;;main.c: 420:     PR2 = (40000000 / (FREQUENCY * 4 * TIMER2_P
      +                          RESCALER)) - 1;
 10653  0049B8  0EC8               	movlw	200
 10654  0049BA  6ECB               	movwf	4043,c	;volatile
 10655                           
 10656                           ;main.c: 423:     P1M1 = 0;
 10657  0049BC  9EBD               	bcf	4029,7,c	;volatile
 10658                           
 10659                           ;main.c: 424:     P1M0 = 0;
 10660  0049BE  9CBD               	bcf	4029,6,c	;volatile
 10661                           
 10662                           ;main.c: 425:     CCP1M3 = 1;
 10663  0049C0  86BD               	bsf	4029,3,c	;volatile
 10664                           
 10665                           ;main.c: 426:     CCP1M2 = 1;
 10666  0049C2  84BD               	bsf	4029,2,c	;volatile
 10667                           
 10668                           ;main.c: 427:     CCP1M1 = 0;
 10669  0049C4  92BD               	bcf	4029,1,c	;volatile
 10670                           
 10671                           ;main.c: 428:     CCP1M0 = 0;
 10672  0049C6  90BD               	bcf	4029,0,c	;volatile
 10673                           
 10674                           ;main.c: 431:     CCP2M3 = 1;
 10675  0049C8  86BA               	bsf	4026,3,c	;volatile
 10676                           
 10677                           ;main.c: 432:     CCP2M2 = 1;
 10678  0049CA  84BA               	bsf	4026,2,c	;volatile
 10679                           
 10680                           ;main.c: 433:     CCP2M1 = 0;
 10681  0049CC  92BA               	bcf	4026,1,c	;volatile
 10682                           
 10683                           ;main.c: 434:     CCP2M0 = 0;
 10684  0049CE  90BA               	bcf	4026,0,c	;volatile
 10685                           
 10686                           ;main.c: 437:     T2CKPS0 = 1;
 10687  0049D0  80CA               	bsf	4042,0,c	;volatile
 10688                           
 10689                           ;main.c: 438:     T2CKPS1 = 1;
 10690  0049D2  82CA               	bsf	4042,1,c	;volatile
 10691                           
 10692                           ;main.c: 441:     TMR2ON = 1;
 10693  0049D4  84CA               	bsf	4042,2,c	;volatile
 10694                           
 10695                           ;main.c: 444:     TRISCbits.TRISC2 = 0;
 10696  0049D6  9494               	bcf	3988,2,c	;volatile
 10697                           
 10698                           ;main.c: 445:     TRISCbits.TRISC1 = 0;
 10699  0049D8  9294               	bcf	3988,1,c	;volatile
 10700  0049DA  0012               	return		;funcret
 10701  0049DC                     __end_of_PWMSetup:
 10702                           	opt callstack 0
 10703                           
 10704 ;; *************** function _LCD_write_str *****************
 10705 ;; Defined at:
 10706 ;;		line 123 in file "lcd.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  str             2   29[COMRAM] PTR unsigned char 
 10709 ;;		 -> main@lcdDisplay(16), 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  i               2   32[COMRAM] int 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10724 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10725 ;;Total ram usage:        5 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    6
 10728 ;; This function calls:
 10729 ;;		_send_byte
 10730 ;; This function is called by:
 10731 ;;		_main
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text45
 10736  004786                     __ptext45:
 10737                           	opt callstack 0
 10738  004786                     _LCD_write_str:
 10739                           	opt callstack 24
 10740                           
 10741                           ;lcd.c: 124:     int i=0;
 10742                           
 10743                           ;incstack = 0
 10744  004786  0E00               	movlw	0
 10745  004788  6E22               	movwf	LCD_write_str@i+1,c
 10746  00478A  0E00               	movlw	0
 10747  00478C  6E21               	movwf	LCD_write_str@i,c
 10748                           
 10749                           ;lcd.c: 125:     while(str[i]!=0 && str[i] != '\n'){
 10750  00478E  D00C               	goto	l8068
 10751  004790                     l98:
 10752                           
 10753                           ;lcd.c: 127:         LATDbits.LATD2 = 1;
 10754  004790  848C               	bsf	3980,2,c	;volatile
 10755                           
 10756                           ;lcd.c: 128:         send_byte((unsigned char)str[i]);
 10757  004792  5021               	movf	LCD_write_str@i,w,c
 10758  004794  241E               	addwf	LCD_write_str@str,w,c
 10759  004796  6ED9               	movwf	fsr2l,c
 10760  004798  5022               	movf	LCD_write_str@i+1,w,c
 10761  00479A  201F               	addwfc	LCD_write_str@str+1,w,c
 10762  00479C  6EDA               	movwf	fsr2h,c
 10763  00479E  50DF               	movf	indf2,w,c
 10764  0047A0  EC3D  F025         	call	_send_byte
 10765                           
 10766                           ;lcd.c: 129:         i++;
 10767  0047A4  4A21               	infsnz	LCD_write_str@i,f,c
 10768  0047A6  2A22               	incf	LCD_write_str@i+1,f,c
 10769  0047A8                     l8068:
 10770                           
 10771                           ;lcd.c: 125:     while(str[i]!=0 && str[i] != '\n'){
 10772  0047A8  5021               	movf	LCD_write_str@i,w,c
 10773  0047AA  241E               	addwf	LCD_write_str@str,w,c
 10774  0047AC  6ED9               	movwf	fsr2l,c
 10775  0047AE  5022               	movf	LCD_write_str@i+1,w,c
 10776  0047B0  201F               	addwfc	LCD_write_str@str+1,w,c
 10777  0047B2  6EDA               	movwf	fsr2h,c
 10778  0047B4  50DF               	movf	indf2,w,c
 10779  0047B6  B4D8               	btfsc	status,2,c
 10780  0047B8  0012               	return	
 10781  0047BA  5021               	movf	LCD_write_str@i,w,c
 10782  0047BC  241E               	addwf	LCD_write_str@str,w,c
 10783  0047BE  6ED9               	movwf	fsr2l,c
 10784  0047C0  5022               	movf	LCD_write_str@i+1,w,c
 10785  0047C2  201F               	addwfc	LCD_write_str@str+1,w,c
 10786  0047C4  6EDA               	movwf	fsr2h,c
 10787  0047C6  0E0A               	movlw	10
 10788  0047C8  18DE               	xorwf	postinc2,w,c
 10789  0047CA  B4D8               	btfsc	status,2,c
 10790  0047CC  0012               	return	
 10791  0047CE  D7E0               	goto	l98
 10792  0047D0                     __end_of_LCD_write_str:
 10793                           	opt callstack 0
 10794                           
 10795 ;; *************** function _LCD_set_cursor *****************
 10796 ;; Defined at:
 10797 ;;		line 106 in file "lcd.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  row             2   30[COMRAM] unsigned int 
 10800 ;;  column          2   32[COMRAM] unsigned int 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;		None
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      void 
 10805 ;; Registers used:
 10806 ;;		wreg, status,2, status,0, cstack
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10816 ;;Total ram usage:        4 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; Hardware stack levels required when called:    7
 10819 ;; This function calls:
 10820 ;;		_lcdInst
 10821 ;; This function is called by:
 10822 ;;		_main
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text46
 10827  0046EC                     __ptext46:
 10828                           	opt callstack 0
 10829  0046EC                     _LCD_set_cursor:
 10830                           	opt callstack 23
 10831                           
 10832                           ;lcd.c: 108:     row=row%4;
 10833                           
 10834                           ;incstack = 0
 10835  0046EC  0E03               	movlw	3
 10836  0046EE  141F               	andwf	LCD_set_cursor@row,w,c
 10837  0046F0  6E1F               	movwf	LCD_set_cursor@row,c
 10838  0046F2  6A20               	clrf	LCD_set_cursor@row+1,c
 10839                           
 10840                           ;lcd.c: 109:     column = column %16;
 10841  0046F4  0E0F               	movlw	15
 10842  0046F6  1421               	andwf	LCD_set_cursor@column,w,c
 10843  0046F8  6E21               	movwf	LCD_set_cursor@column,c
 10844  0046FA  6A22               	clrf	LCD_set_cursor@column+1,c
 10845                           
 10846                           ;lcd.c: 110:     if(row==1){
 10847  0046FC  041F               	decf	LCD_set_cursor@row,w,c
 10848  0046FE  1020               	iorwf	LCD_set_cursor@row+1,w,c
 10849  004700  A4D8               	btfss	status,2,c
 10850  004702  D004               	goto	l91
 10851                           
 10852                           ;lcd.c: 111:         column +=LCD_LINE2_ADDR;
 10853  004704  0E40               	movlw	64
 10854  004706  2621               	addwf	LCD_set_cursor@column,f,c
 10855  004708  0E00               	movlw	0
 10856  00470A  2222               	addwfc	LCD_set_cursor@column+1,f,c
 10857  00470C                     l91:
 10858                           
 10859                           ;lcd.c: 113:     if(row==2){
 10860  00470C  0E02               	movlw	2
 10861  00470E  181F               	xorwf	LCD_set_cursor@row,w,c
 10862  004710  1020               	iorwf	LCD_set_cursor@row+1,w,c
 10863  004712  A4D8               	btfss	status,2,c
 10864  004714  D004               	goto	l92
 10865                           
 10866                           ;lcd.c: 114:         column +=LCD_LINE3_ADDR;
 10867  004716  0E10               	movlw	16
 10868  004718  2621               	addwf	LCD_set_cursor@column,f,c
 10869  00471A  0E00               	movlw	0
 10870  00471C  2222               	addwfc	LCD_set_cursor@column+1,f,c
 10871  00471E                     l92:
 10872                           
 10873                           ;lcd.c: 116:     if(row==3){
 10874  00471E  0E03               	movlw	3
 10875  004720  181F               	xorwf	LCD_set_cursor@row,w,c
 10876  004722  1020               	iorwf	LCD_set_cursor@row+1,w,c
 10877  004724  A4D8               	btfss	status,2,c
 10878  004726  D004               	goto	l8060
 10879                           
 10880                           ;lcd.c: 117:         column +=LCD_LINE4_ADDR;
 10881  004728  0E50               	movlw	80
 10882  00472A  2621               	addwf	LCD_set_cursor@column,f,c
 10883  00472C  0E00               	movlw	0
 10884  00472E  2222               	addwfc	LCD_set_cursor@column+1,f,c
 10885  004730                     l8060:
 10886                           
 10887                           ;lcd.c: 120:     { lcdInst(0x80 | column);};
 10888  004730  5021               	movf	LCD_set_cursor@column,w,c
 10889  004732  0980               	iorlw	128
 10890  004734  EC53  F025         	call	_lcdInst
 10891  004738  0012               	return		;funcret
 10892  00473A                     __end_of_LCD_set_cursor:
 10893                           	opt callstack 0
 10894                           
 10895 ;; *************** function _lcdInst *****************
 10896 ;; Defined at:
 10897 ;;		line 62 in file "lcd.c"
 10898 ;; Parameters:    Size  Location     Type
 10899 ;;  data            1    wreg     unsigned char 
 10900 ;; Auto vars:     Size  Location     Type
 10901 ;;  data            1   29[COMRAM] unsigned char 
 10902 ;; Return value:  Size  Location     Type
 10903 ;;                  1    wreg      void 
 10904 ;; Registers used:
 10905 ;;		wreg, status,2, status,0, cstack
 10906 ;; Tracked objects:
 10907 ;;		On entry : 0/0
 10908 ;;		On exit  : 0/0
 10909 ;;		Unchanged: 0/0
 10910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10914 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10915 ;;Total ram usage:        1 bytes
 10916 ;; Hardware stack levels used:    1
 10917 ;; Hardware stack levels required when called:    6
 10918 ;; This function calls:
 10919 ;;		_send_byte
 10920 ;; This function is called by:
 10921 ;;		_initLCD
 10922 ;;		_LCD_set_cursor
 10923 ;;		_lcd_shift_cursor
 10924 ;;		_lcd_shift_display
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text47
 10929  004AA6                     __ptext47:
 10930                           	opt callstack 0
 10931  004AA6                     _lcdInst:
 10932                           	opt callstack 23
 10933                           
 10934                           ;incstack = 0
 10935                           ;lcdInst@data stored from wreg
 10936  004AA6  6E1E               	movwf	lcdInst@data,c
 10937                           
 10938                           ;lcd.c: 63:     LATDbits.LATD2 = 0;
 10939  004AA8  948C               	bcf	3980,2,c	;volatile
 10940                           
 10941                           ;lcd.c: 64:     send_byte(data);
 10942  004AAA  501E               	movf	lcdInst@data,w,c
 10943  004AAC  EC3D  F025         	call	_send_byte
 10944  004AB0  0012               	return		;funcret
 10945  004AB2                     __end_of_lcdInst:
 10946                           	opt callstack 0
 10947                           
 10948 ;; *************** function _send_byte *****************
 10949 ;; Defined at:
 10950 ;;		line 53 in file "lcd.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  data            1    wreg     unsigned char 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  data            1   28[COMRAM] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10968 ;;Total ram usage:        1 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    5
 10971 ;; This function calls:
 10972 ;;		_send_nibble
 10973 ;; This function is called by:
 10974 ;;		_lcdInst
 10975 ;;		_initLCD
 10976 ;;		_putch
 10977 ;;		_LCD_write_str
 10978 ;;		_LCD_write_char
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text48
 10983  004A7A                     __ptext48:
 10984                           	opt callstack 0
 10985  004A7A                     _send_byte:
 10986                           	opt callstack 19
 10987                           
 10988                           ;incstack = 0
 10989                           ;send_byte@data stored from wreg
 10990  004A7A  6E1D               	movwf	send_byte@data,c
 10991                           
 10992                           ;lcd.c: 55:     send_nibble(data >> 4);
 10993  004A7C  381D               	swapf	send_byte@data,w,c
 10994  004A7E  0B0F               	andlw	15
 10995  004A80  EC32  F025         	call	_send_nibble
 10996                           
 10997                           ;lcd.c: 58:     send_nibble(data);
 10998  004A84  501D               	movf	send_byte@data,w,c
 10999  004A86  EC32  F025         	call	_send_nibble
 11000  004A8A  0012               	return		;funcret
 11001  004A8C                     __end_of_send_byte:
 11002                           	opt callstack 0
 11003                           
 11004 ;; *************** function _send_nibble *****************
 11005 ;; Defined at:
 11006 ;;		line 42 in file "lcd.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;  data            1    wreg     unsigned char 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  data            1   27[COMRAM] unsigned char 
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  1    wreg      void 
 11013 ;; Registers used:
 11014 ;;		wreg, status,2, status,0, cstack
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;Total ram usage:        1 bytes
 11025 ;; Hardware stack levels used:    1
 11026 ;; Hardware stack levels required when called:    4
 11027 ;; This function calls:
 11028 ;;		_pulse_e
 11029 ;; This function is called by:
 11030 ;;		_send_byte
 11031 ;;		_initLCD
 11032 ;; This function uses a non-reentrant model
 11033 ;;
 11034                           
 11035                           	psect	text49
 11036  004A64                     __ptext49:
 11037                           	opt callstack 0
 11038  004A64                     _send_nibble:
 11039                           	opt callstack 19
 11040                           
 11041                           ;incstack = 0
 11042                           ;send_nibble@data stored from wreg
 11043  004A64  6E1C               	movwf	send_nibble@data,c
 11044                           
 11045                           ;lcd.c: 44:     LATD = (unsigned char)(LATD & 0x0F);
 11046  004A66  508C               	movf	3980,w,c	;volatile
 11047  004A68  0B0F               	andlw	15
 11048  004A6A  6E8C               	movwf	3980,c	;volatile
 11049                           
 11050                           ;lcd.c: 45:     LATD = (unsigned char)((data << 4) | LATD);
 11051  004A6C  381C               	swapf	send_nibble@data,w,c
 11052  004A6E  0BF0               	andlw	240
 11053  004A70  108C               	iorwf	3980,w,c	;volatile
 11054  004A72  6E8C               	movwf	3980,c	;volatile
 11055                           
 11056                           ;lcd.c: 46:     pulse_e();
 11057  004A74  ECC5  F024         	call	_pulse_e	;wreg free
 11058  004A78  0012               	return		;funcret
 11059  004A7A                     __end_of_send_nibble:
 11060                           	opt callstack 0
 11061                           
 11062 ;; *************** function _pulse_e *****************
 11063 ;; Defined at:
 11064 ;;		line 26 in file "lcd.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;		None
 11067 ;; Auto vars:     Size  Location     Type
 11068 ;;  interruptSta    1   26[COMRAM] unsigned char 
 11069 ;; Return value:  Size  Location     Type
 11070 ;;                  1    wreg      void 
 11071 ;; Registers used:
 11072 ;;		wreg
 11073 ;; Tracked objects:
 11074 ;;		On entry : 0/0
 11075 ;;		On exit  : 0/0
 11076 ;;		Unchanged: 0/0
 11077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;Total ram usage:        1 bytes
 11083 ;; Hardware stack levels used:    1
 11084 ;; Hardware stack levels required when called:    3
 11085 ;; This function calls:
 11086 ;;		Nothing
 11087 ;; This function is called by:
 11088 ;;		_send_nibble
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text50
 11093  00498A                     __ptext50:
 11094                           	opt callstack 0
 11095  00498A                     _pulse_e:
 11096                           	opt callstack 19
 11097                           
 11098                           ;lcd.c: 27:     unsigned char interruptState = INTCONbits.GIE;
 11099                           
 11100                           ;incstack = 0
 11101  00498A  0E00               	movlw	0
 11102  00498C  BEF2               	btfsc	4082,7,c	;volatile
 11103  00498E  0E01               	movlw	1
 11104  004990  6E1B               	movwf	pulse_e@interruptState,c
 11105                           
 11106                           ;lcd.c: 28:     (INTCONbits.GIE = 0);
 11107  004992  9EF2               	bcf	4082,7,c	;volatile
 11108                           
 11109                           ;lcd.c: 29:     LATDbits.LATD3 = 1;
 11110  004994  868C               	bsf	3980,3,c	;volatile
 11111                           
 11112                           ;lcd.c: 32:     _delay((unsigned long)((25)*(40000000/4000000.0)));
 11113  004996  0E53               	movlw	83
 11114  004998                     u9907:
 11115  004998  2EE8               	decfsz	wreg,f,c
 11116  00499A  D7FE               	bra	u9907
 11117  00499C  F000               	nop	
 11118                           
 11119                           ;lcd.c: 33:     LATDbits.LATD3 = 0;
 11120  00499E  968C               	bcf	3980,3,c	;volatile
 11121                           
 11122                           ;lcd.c: 34:     _delay((unsigned long)((100)*(40000000/4000000.0)));
 11123  0049A0  0EC8               	movlw	200
 11124  0049A2                     u9917:
 11125  0049A2  D000               	nop2	
 11126  0049A4  2EE8               	decfsz	wreg,f,c
 11127  0049A6  D7FD               	bra	u9917
 11128                           
 11129                           ;lcd.c: 35:     INTCONbits.GIE = interruptState;
 11130  0049A8  B01B               	btfsc	pulse_e@interruptState,0,c
 11131  0049AA  D002               	bra	u7045
 11132  0049AC  9EF2               	bcf	4082,7,c	;volatile
 11133  0049AE  D001               	bra	u7046
 11134  0049B0                     u7045:
 11135  0049B0  8EF2               	bsf	4082,7,c	;volatile
 11136  0049B2                     u7046:
 11137  0049B2  0012               	return		;funcret
 11138  0049B4                     __end_of_pulse_e:
 11139                           	opt callstack 0
 11140                           
 11141 ;; *************** function _I2C_Master_Init *****************
 11142 ;; Defined at:
 11143 ;;		line 28 in file "I2C.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;  clockFreq       4   39[COMRAM] const unsigned long 
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      void 
 11150 ;; Registers used:
 11151 ;;		wreg, status,2, status,0, cstack
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11160 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11161 ;;Total ram usage:        8 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:    4
 11164 ;; This function calls:
 11165 ;;		___lldiv
 11166 ;; This function is called by:
 11167 ;;		_main
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           	psect	text51
 11172  0044F2                     __ptext51:
 11173                           	opt callstack 0
 11174  0044F2                     _I2C_Master_Init:
 11175                           	opt callstack 26
 11176                           
 11177                           ;I2C.c: 30:     SSPCON1bits.SSPEN = 0;
 11178                           
 11179                           ;incstack = 0
 11180  0044F2  9AC6               	bcf	4038,5,c	;volatile
 11181                           
 11182                           ;I2C.c: 33:     TRISCbits.TRISC3 = 1;
 11183  0044F4  8694               	bsf	3988,3,c	;volatile
 11184                           
 11185                           ;I2C.c: 34:     TRISCbits.TRISC4 = 1;
 11186  0044F6  8894               	bsf	3988,4,c	;volatile
 11187                           
 11188                           ;I2C.c: 39:     SSPADD = (40000000 / (4 * clockFreq)) - 1;
 11189  0044F8  0E00               	movlw	0
 11190  0044FA  6E1B               	movwf	___lldiv@dividend,c
 11191  0044FC  0E5A               	movlw	90
 11192  0044FE  6E1C               	movwf	___lldiv@dividend+1,c
 11193  004500  0E62               	movlw	98
 11194  004502  6E1D               	movwf	___lldiv@dividend+2,c
 11195  004504  0E02               	movlw	2
 11196  004506  6E1E               	movwf	___lldiv@dividend+3,c
 11197  004508  C028  F02C         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 11198  00450C  C029  F02D         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 11199  004510  C02A  F02E         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 11200  004514  C02B  F02F         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 11201  004518  0E02               	movlw	2
 11202  00451A                     u6665:
 11203  00451A  90D8               	bcf	status,0,c
 11204  00451C  362C               	rlcf	??_I2C_Master_Init,f,c
 11205  00451E  362D               	rlcf	??_I2C_Master_Init+1,f,c
 11206  004520  362E               	rlcf	??_I2C_Master_Init+2,f,c
 11207  004522  362F               	rlcf	??_I2C_Master_Init+3,f,c
 11208  004524  2EE8               	decfsz	wreg,f,c
 11209  004526  D7F9               	goto	u6665
 11210  004528  C02C  F01F         	movff	??_I2C_Master_Init,___lldiv@divisor
 11211  00452C  C02D  F020         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 11212  004530  C02E  F021         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 11213  004534  C02F  F022         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 11214  004538  ECC8  F021         	call	___lldiv	;wreg free
 11215  00453C  041B               	decf	?___lldiv,w,c
 11216  00453E  6EC8               	movwf	4040,c	;volatile
 11217                           
 11218                           ;I2C.c: 42:     SSPSTAT = 0b10000000;
 11219  004540  0E80               	movlw	128
 11220  004542  6EC7               	movwf	4039,c	;volatile
 11221                           
 11222                           ;I2C.c: 45:     SSPCON1 = 0b00101000;
 11223  004544  0E28               	movlw	40
 11224  004546  6EC6               	movwf	4038,c	;volatile
 11225                           
 11226                           ;I2C.c: 48:     SSPCON2 = 0b00000000;
 11227  004548  0E00               	movlw	0
 11228  00454A  6EC5               	movwf	4037,c	;volatile
 11229  00454C  0012               	return		;funcret
 11230  00454E                     __end_of_I2C_Master_Init:
 11231                           	opt callstack 0
 11232                           
 11233 ;; *************** function ___lldiv *****************
 11234 ;; Defined at:
 11235 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  dividend        4   26[COMRAM] unsigned long 
 11238 ;;  divisor         4   30[COMRAM] unsigned long 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  quotient        4   34[COMRAM] unsigned long 
 11241 ;;  counter         1   38[COMRAM] unsigned char 
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  4   26[COMRAM] unsigned long 
 11244 ;; Registers used:
 11245 ;;		wreg, status,2, status,0
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11252 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;Total ram usage:       13 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; Hardware stack levels required when called:    3
 11258 ;; This function calls:
 11259 ;;		Nothing
 11260 ;; This function is called by:
 11261 ;;		_I2C_Master_Init
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text52
 11266  004390                     __ptext52:
 11267                           	opt callstack 0
 11268  004390                     ___lldiv:
 11269                           	opt callstack 26
 11270                           
 11271                           ;incstack = 0
 11272  004390  0E00               	movlw	0
 11273  004392  6E23               	movwf	___lldiv@quotient,c
 11274  004394  0E00               	movlw	0
 11275  004396  6E24               	movwf	___lldiv@quotient+1,c
 11276  004398  0E00               	movlw	0
 11277  00439A  6E25               	movwf	___lldiv@quotient+2,c
 11278  00439C  0E00               	movlw	0
 11279  00439E  6E26               	movwf	___lldiv@quotient+3,c
 11280  0043A0  501F               	movf	___lldiv@divisor,w,c
 11281  0043A2  1020               	iorwf	___lldiv@divisor+1,w,c
 11282  0043A4  1021               	iorwf	___lldiv@divisor+2,w,c
 11283  0043A6  1022               	iorwf	___lldiv@divisor+3,w,c
 11284  0043A8  B4D8               	btfsc	status,2,c
 11285  0043AA  D02A               	goto	l760
 11286  0043AC  0E01               	movlw	1
 11287  0043AE  6E27               	movwf	___lldiv@counter,c
 11288  0043B0  D006               	goto	l5610
 11289  0043B2                     l5608:
 11290  0043B2  90D8               	bcf	status,0,c
 11291  0043B4  361F               	rlcf	___lldiv@divisor,f,c
 11292  0043B6  3620               	rlcf	___lldiv@divisor+1,f,c
 11293  0043B8  3621               	rlcf	___lldiv@divisor+2,f,c
 11294  0043BA  3622               	rlcf	___lldiv@divisor+3,f,c
 11295  0043BC  2A27               	incf	___lldiv@counter,f,c
 11296  0043BE                     l5610:
 11297  0043BE  AE22               	btfss	___lldiv@divisor+3,7,c
 11298  0043C0  D7F8               	goto	l5608
 11299  0043C2                     u6190:
 11300  0043C2  90D8               	bcf	status,0,c
 11301  0043C4  3623               	rlcf	___lldiv@quotient,f,c
 11302  0043C6  3624               	rlcf	___lldiv@quotient+1,f,c
 11303  0043C8  3625               	rlcf	___lldiv@quotient+2,f,c
 11304  0043CA  3626               	rlcf	___lldiv@quotient+3,f,c
 11305  0043CC  501F               	movf	___lldiv@divisor,w,c
 11306  0043CE  5C1B               	subwf	___lldiv@dividend,w,c
 11307  0043D0  5020               	movf	___lldiv@divisor+1,w,c
 11308  0043D2  581C               	subwfb	___lldiv@dividend+1,w,c
 11309  0043D4  5021               	movf	___lldiv@divisor+2,w,c
 11310  0043D6  581D               	subwfb	___lldiv@dividend+2,w,c
 11311  0043D8  5022               	movf	___lldiv@divisor+3,w,c
 11312  0043DA  581E               	subwfb	___lldiv@dividend+3,w,c
 11313  0043DC  A0D8               	btfss	status,0,c
 11314  0043DE  D009               	goto	l5620
 11315  0043E0  501F               	movf	___lldiv@divisor,w,c
 11316  0043E2  5E1B               	subwf	___lldiv@dividend,f,c
 11317  0043E4  5020               	movf	___lldiv@divisor+1,w,c
 11318  0043E6  5A1C               	subwfb	___lldiv@dividend+1,f,c
 11319  0043E8  5021               	movf	___lldiv@divisor+2,w,c
 11320  0043EA  5A1D               	subwfb	___lldiv@dividend+2,f,c
 11321  0043EC  5022               	movf	___lldiv@divisor+3,w,c
 11322  0043EE  5A1E               	subwfb	___lldiv@dividend+3,f,c
 11323  0043F0  8023               	bsf	___lldiv@quotient,0,c
 11324  0043F2                     l5620:
 11325  0043F2  90D8               	bcf	status,0,c
 11326  0043F4  3222               	rrcf	___lldiv@divisor+3,f,c
 11327  0043F6  3221               	rrcf	___lldiv@divisor+2,f,c
 11328  0043F8  3220               	rrcf	___lldiv@divisor+1,f,c
 11329  0043FA  321F               	rrcf	___lldiv@divisor,f,c
 11330  0043FC  2E27               	decfsz	___lldiv@counter,f,c
 11331  0043FE  D7E1               	goto	u6190
 11332  004400                     l760:
 11333  004400  C023  F01B         	movff	___lldiv@quotient,?___lldiv
 11334  004404  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
 11335  004408  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
 11336  00440C  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
 11337  004410  0012               	return		;funcret
 11338  004412                     __end_of___lldiv:
 11339                           	opt callstack 0
 11340                           
 11341 ;; *************** function _DCMotorLeftRightFwdON *****************
 11342 ;; Defined at:
 11343 ;;		line 59 in file "motors.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;		None
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;		None
 11348 ;; Return value:  Size  Location     Type
 11349 ;;                  1    wreg      void 
 11350 ;; Registers used:
 11351 ;;		cstack
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11361 ;;Total ram usage:        0 bytes
 11362 ;; Hardware stack levels used:    1
 11363 ;; Hardware stack levels required when called:    4
 11364 ;; This function calls:
 11365 ;;		_DCMotorLeftFwd
 11366 ;;		_DCMotorRightFwd
 11367 ;; This function is called by:
 11368 ;;		_main
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372                           	psect	text53
 11373  004AB2                     __ptext53:
 11374                           	opt callstack 0
 11375  004AB2                     _DCMotorLeftRightFwdON:
 11376                           	opt callstack 26
 11377                           
 11378                           ;motors.c: 60:     DCMotorLeftFwd();
 11379                           
 11380                           ;incstack = 0
 11381  004AB2  EC67  F025         	call	_DCMotorLeftFwd	;wreg free
 11382                           
 11383                           ;motors.c: 61:     DCMotorRightFwd();
 11384  004AB6  EC63  F025         	call	_DCMotorRightFwd	;wreg free
 11385  004ABA  0012               	return		;funcret
 11386  004ABC                     __end_of_DCMotorLeftRightFwdON:
 11387                           	opt callstack 0
 11388                           
 11389 ;; *************** function _DCMotorRightFwd *****************
 11390 ;; Defined at:
 11391 ;;		line 29 in file "motors.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;		None
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		None
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    3
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_main
 11416 ;;		_DCMotorLeftRightFwdON
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text54
 11421  004AC6                     __ptext54:
 11422                           	opt callstack 0
 11423  004AC6                     _DCMotorRightFwd:
 11424                           	opt callstack 27
 11425                           
 11426                           ;motors.c: 30:     LATAbits.LATA1 = 0;
 11427                           
 11428                           ;incstack = 0
 11429  004AC6  9289               	bcf	3977,1,c	;volatile
 11430                           
 11431                           ;motors.c: 31:     LATAbits.LATA3 = 0;
 11432  004AC8  9689               	bcf	3977,3,c	;volatile
 11433                           
 11434                           ;motors.c: 33:     LATAbits.LATA0 = 1;
 11435  004ACA  8089               	bsf	3977,0,c	;volatile
 11436  004ACC  0012               	return		;funcret
 11437  004ACE                     __end_of_DCMotorRightFwd:
 11438                           	opt callstack 0
 11439                           
 11440 ;; *************** function _DCMotorLeftFwd *****************
 11441 ;; Defined at:
 11442 ;;		line 23 in file "motors.c"
 11443 ;; Parameters:    Size  Location     Type
 11444 ;;		None
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;		None
 11447 ;; Return value:  Size  Location     Type
 11448 ;;                  1    wreg      void 
 11449 ;; Registers used:
 11450 ;;		None
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11460 ;;Total ram usage:        0 bytes
 11461 ;; Hardware stack levels used:    1
 11462 ;; Hardware stack levels required when called:    3
 11463 ;; This function calls:
 11464 ;;		Nothing
 11465 ;; This function is called by:
 11466 ;;		_main
 11467 ;;		_DCMotorLeftRightFwdON
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           	psect	text55
 11472  004ACE                     __ptext55:
 11473                           	opt callstack 0
 11474  004ACE                     _DCMotorLeftFwd:
 11475                           	opt callstack 26
 11476                           
 11477                           ;motors.c: 24:     LATAbits.LATA1 = 0;
 11478                           
 11479                           ;incstack = 0
 11480  004ACE  9289               	bcf	3977,1,c	;volatile
 11481                           
 11482                           ;motors.c: 25:     LATAbits.LATA3 = 0;
 11483  004AD0  9689               	bcf	3977,3,c	;volatile
 11484                           
 11485                           ;motors.c: 27:     LATAbits.LATA2 = 1;
 11486  004AD2  8489               	bsf	3977,2,c	;volatile
 11487  004AD4  0012               	return		;funcret
 11488  004AD6                     __end_of_DCMotorLeftFwd:
 11489                           	opt callstack 0
 11490                           
 11491 ;; *************** function _DCMotorLeftRightBkwdON *****************
 11492 ;; Defined at:
 11493 ;;		line 63 in file "motors.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;		None
 11496 ;; Auto vars:     Size  Location     Type
 11497 ;;		None
 11498 ;; Return value:  Size  Location     Type
 11499 ;;                  1    wreg      void 
 11500 ;; Registers used:
 11501 ;;		cstack
 11502 ;; Tracked objects:
 11503 ;;		On entry : 0/0
 11504 ;;		On exit  : 0/0
 11505 ;;		Unchanged: 0/0
 11506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;Total ram usage:        0 bytes
 11512 ;; Hardware stack levels used:    1
 11513 ;; Hardware stack levels required when called:    4
 11514 ;; This function calls:
 11515 ;;		_DCMotorLeftBkwd
 11516 ;;		_DCMotorRightBkwd
 11517 ;; This function is called by:
 11518 ;;		_main
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           
 11522                           	psect	text56
 11523  004ABC                     __ptext56:
 11524                           	opt callstack 0
 11525  004ABC                     _DCMotorLeftRightBkwdON:
 11526                           	opt callstack 26
 11527                           
 11528                           ;motors.c: 64:     DCMotorLeftBkwd();
 11529                           
 11530                           ;incstack = 0
 11531  004ABC  EC6F  F025         	call	_DCMotorLeftBkwd	;wreg free
 11532                           
 11533                           ;motors.c: 65:     DCMotorRightBkwd();
 11534  004AC0  EC6B  F025         	call	_DCMotorRightBkwd	;wreg free
 11535  004AC4  0012               	return		;funcret
 11536  004AC6                     __end_of_DCMotorLeftRightBkwdON:
 11537                           	opt callstack 0
 11538                           
 11539 ;; *************** function _DCMotorRightBkwd *****************
 11540 ;; Defined at:
 11541 ;;		line 41 in file "motors.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;		None
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;		None
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  1    wreg      void 
 11548 ;; Registers used:
 11549 ;;		None
 11550 ;; Tracked objects:
 11551 ;;		On entry : 0/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;Total ram usage:        0 bytes
 11560 ;; Hardware stack levels used:    1
 11561 ;; Hardware stack levels required when called:    3
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		_main
 11566 ;;		_DCMotorLeftRightBkwdON
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           	psect	text57
 11571  004AD6                     __ptext57:
 11572                           	opt callstack 0
 11573  004AD6                     _DCMotorRightBkwd:
 11574                           	opt callstack 27
 11575                           
 11576                           ;motors.c: 42:     LATAbits.LATA0 = 0;
 11577                           
 11578                           ;incstack = 0
 11579  004AD6  9089               	bcf	3977,0,c	;volatile
 11580                           
 11581                           ;motors.c: 43:     LATAbits.LATA2 = 0;
 11582  004AD8  9489               	bcf	3977,2,c	;volatile
 11583                           
 11584                           ;motors.c: 45:     LATAbits.LATA1 = 1;
 11585  004ADA  8289               	bsf	3977,1,c	;volatile
 11586  004ADC  0012               	return		;funcret
 11587  004ADE                     __end_of_DCMotorRightBkwd:
 11588                           	opt callstack 0
 11589                           
 11590 ;; *************** function _DCMotorLeftBkwd *****************
 11591 ;; Defined at:
 11592 ;;		line 35 in file "motors.c"
 11593 ;; Parameters:    Size  Location     Type
 11594 ;;		None
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;		None
 11597 ;; Return value:  Size  Location     Type
 11598 ;;                  1    wreg      void 
 11599 ;; Registers used:
 11600 ;;		None
 11601 ;; Tracked objects:
 11602 ;;		On entry : 0/0
 11603 ;;		On exit  : 0/0
 11604 ;;		Unchanged: 0/0
 11605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;Total ram usage:        0 bytes
 11611 ;; Hardware stack levels used:    1
 11612 ;; Hardware stack levels required when called:    3
 11613 ;; This function calls:
 11614 ;;		Nothing
 11615 ;; This function is called by:
 11616 ;;		_main
 11617 ;;		_DCMotorLeftRightBkwdON
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text58
 11622  004ADE                     __ptext58:
 11623                           	opt callstack 0
 11624  004ADE                     _DCMotorLeftBkwd:
 11625                           	opt callstack 26
 11626                           
 11627                           ;motors.c: 36:     LATAbits.LATA0 = 0;
 11628                           
 11629                           ;incstack = 0
 11630  004ADE  9089               	bcf	3977,0,c	;volatile
 11631                           
 11632                           ;motors.c: 37:     LATAbits.LATA2 = 0;
 11633  004AE0  9489               	bcf	3977,2,c	;volatile
 11634                           
 11635                           ;motors.c: 39:     LATAbits.LATA3 = 1;
 11636  004AE2  8689               	bsf	3977,3,c	;volatile
 11637  004AE4  0012               	return		;funcret
 11638  004AE6                     __end_of_DCMotorLeftBkwd:
 11639                           	opt callstack 0
 11640                           
 11641 ;; *************** function _DCMotorCenterRight *****************
 11642 ;; Defined at:
 11643 ;;		line 18 in file "motors.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;		None
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  1    wreg      void 
 11650 ;; Registers used:
 11651 ;;		None
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11661 ;;Total ram usage:        0 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    3
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_main
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text59
 11672  004AEE                     __ptext59:
 11673                           	opt callstack 0
 11674  004AEE                     _DCMotorCenterRight:
 11675                           	opt callstack 27
 11676                           
 11677                           ;motors.c: 19:     LATAbits.LATA4 = 0;
 11678                           
 11679                           ;incstack = 0
 11680  004AEE  9889               	bcf	3977,4,c	;volatile
 11681                           
 11682                           ;motors.c: 20:     LATAbits.LATA5 = 1;
 11683  004AF0  8A89               	bsf	3977,5,c	;volatile
 11684  004AF2  0012               	return		;funcret
 11685  004AF4                     __end_of_DCMotorCenterRight:
 11686                           	opt callstack 0
 11687                           
 11688 ;; *************** function _DCMotorCenterLeft *****************
 11689 ;; Defined at:
 11690 ;;		line 13 in file "motors.c"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		None
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:    3
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_main
 11715 ;; This function uses a non-reentrant model
 11716 ;;
 11717                           
 11718                           	psect	text60
 11719  004AF4                     __ptext60:
 11720                           	opt callstack 0
 11721  004AF4                     _DCMotorCenterLeft:
 11722                           	opt callstack 27
 11723                           
 11724                           ;motors.c: 14:     LATAbits.LATA5 = 0;
 11725                           
 11726                           ;incstack = 0
 11727  004AF4  9A89               	bcf	3977,5,c	;volatile
 11728                           
 11729                           ;motors.c: 15:     LATAbits.LATA4 = 1;
 11730  004AF6  8889               	bsf	3977,4,c	;volatile
 11731  004AF8  0012               	return		;funcret
 11732  004AFA                     __end_of_DCMotorCenterLeft:
 11733                           	opt callstack 0
 11734                           
 11735 ;; *************** function _DCMotorAllOff *****************
 11736 ;; Defined at:
 11737 ;;		line 47 in file "motors.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;		None
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;		None
 11742 ;; Return value:  Size  Location     Type
 11743 ;;                  1    wreg      void 
 11744 ;; Registers used:
 11745 ;;		None
 11746 ;; Tracked objects:
 11747 ;;		On entry : 0/0
 11748 ;;		On exit  : 0/0
 11749 ;;		Unchanged: 0/0
 11750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11755 ;;Total ram usage:        0 bytes
 11756 ;; Hardware stack levels used:    1
 11757 ;; Hardware stack levels required when called:    3
 11758 ;; This function calls:
 11759 ;;		Nothing
 11760 ;; This function is called by:
 11761 ;;		_main
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text61
 11766  004A8C                     __ptext61:
 11767                           	opt callstack 0
 11768  004A8C                     _DCMotorAllOff:
 11769                           	opt callstack 27
 11770                           
 11771                           ;motors.c: 48:     LATAbits.LATA0 = 0;
 11772                           
 11773                           ;incstack = 0
 11774  004A8C  9089               	bcf	3977,0,c	;volatile
 11775                           
 11776                           ;motors.c: 49:     LATAbits.LATA2 = 0;
 11777  004A8E  9489               	bcf	3977,2,c	;volatile
 11778                           
 11779                           ;motors.c: 51:     LATAbits.LATA1 = 0;
 11780  004A90  9289               	bcf	3977,1,c	;volatile
 11781                           
 11782                           ;motors.c: 52:     LATAbits.LATA3 = 0;
 11783  004A92  9689               	bcf	3977,3,c	;volatile
 11784                           
 11785                           ;motors.c: 54:     LATAbits.LATA4 = 0;
 11786  004A94  9889               	bcf	3977,4,c	;volatile
 11787                           
 11788                           ;motors.c: 55:     LATAbits.LATA5 = 0;
 11789  004A96  9A89               	bcf	3977,5,c	;volatile
 11790  004A98  0012               	return		;funcret
 11791  004A9A                     __end_of_DCMotorAllOff:
 11792                           	opt callstack 0
 11793                           
 11794 ;; *************** function _high_isr *****************
 11795 ;; Defined at:
 11796 ;;		line 275 in file "main.c"
 11797 ;; Parameters:    Size  Location     Type
 11798 ;;		None
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;		None
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;Total ram usage:        2 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    2
 11817 ;; This function calls:
 11818 ;;		i2___fladd
 11819 ;;		i2___flsub
 11820 ;; This function is called by:
 11821 ;;		Interrupt level 2
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           	psect	intcode
 11826  000008                     __pintcode:
 11827                           	opt callstack 0
 11828  000008                     _high_isr:
 11829                           	opt callstack 17
 11830                           
 11831                           ;incstack = 0
 11832  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11833  00000A  ED2F  F01A         	call	int_func,f	;refresh shadow registers
 11834                           
 11835                           	psect	intcode_body
 11836  00345E                     __pintcode_body:
 11837                           	opt callstack 17
 11838  00345E                     int_func:
 11839                           	opt callstack 17
 11840  00345E  0006               	pop		; remove dummy address from shadow register refresh
 11841  003460  CFD9 F019          	movff	fsr2l,??_high_isr
 11842  003464  CFDA F01A          	movff	fsr2h,??_high_isr+1
 11843                           
 11844                           ;main.c: 278:     if (INT0IE && INT0IF){
 11845  003468  B8F2               	btfsc	4082,4,c	;volatile
 11846  00346A  A2F2               	btfss	4082,1,c	;volatile
 11847  00346C  D045               	goto	i2l6330
 11848                           
 11849                           ;main.c: 279:         if(PORTDbits.RD0){
 11850  00346E  A083               	btfss	3971,0,c	;volatile
 11851  003470  D020               	goto	i2l6324
 11852                           
 11853                           ;main.c: 280:             tickL++;
 11854  003472  C187  F001         	movff	_tickL,i2___fladd@b	;volatile
 11855  003476  C188  F002         	movff	_tickL+1,i2___fladd@b+1	;volatile
 11856  00347A  C189  F003         	movff	_tickL+2,i2___fladd@b+2	;volatile
 11857  00347E  C18A  F004         	movff	_tickL+3,i2___fladd@b+3	;volatile
 11858  003482  0E00               	movlw	0
 11859  003484  6E05               	movwf	i2___fladd@a,c
 11860  003486  0E00               	movlw	0
 11861  003488  6E06               	movwf	i2___fladd@a+1,c
 11862  00348A  0E80               	movlw	128
 11863  00348C  6E07               	movwf	i2___fladd@a+2,c
 11864  00348E  0E3F               	movlw	63
 11865  003490  6E08               	movwf	i2___fladd@a+3,c
 11866  003492  ECB2  F015         	call	i2___fladd	;wreg free
 11867  003496  C001  F187         	movff	?i2___fladd,_tickL	;volatile
 11868  00349A  C002  F188         	movff	?i2___fladd+1,_tickL+1	;volatile
 11869  00349E  C003  F189         	movff	?i2___fladd+2,_tickL+2	;volatile
 11870  0034A2  C004  F18A         	movff	?i2___fladd+3,_tickL+3	;volatile
 11871                           
 11872                           ;main.c: 281:             tickLeftTemp++;
 11873  0034A6  0E01               	movlw	1
 11874  0034A8  2650               	addwf	_tickLeftTemp,f,c	;volatile
 11875  0034AA  0E00               	movlw	0
 11876  0034AC  2251               	addwfc	_tickLeftTemp+1,f,c	;volatile
 11877  0034AE  2252               	addwfc	_tickLeftTemp+2,f,c	;volatile
 11878  0034B0  D021               	goto	L14
 11879  0034B2                     i2l6324:
 11880                           
 11881                           ;main.c: 283:             tickL--;
 11882  0034B2  C187  F011         	movff	_tickL,i2___flsub@b	;volatile
 11883  0034B6  C188  F012         	movff	_tickL+1,i2___flsub@b+1	;volatile
 11884  0034BA  C189  F013         	movff	_tickL+2,i2___flsub@b+2	;volatile
 11885  0034BE  C18A  F014         	movff	_tickL+3,i2___flsub@b+3	;volatile
 11886  0034C2  0E00               	movlw	0
 11887  0034C4  6E15               	movwf	i2___flsub@a,c
 11888  0034C6  0E00               	movlw	0
 11889  0034C8  6E16               	movwf	i2___flsub@a+1,c
 11890  0034CA  0E80               	movlw	128
 11891  0034CC  6E17               	movwf	i2___flsub@a+2,c
 11892  0034CE  0E3F               	movlw	63
 11893  0034D0  6E18               	movwf	i2___flsub@a+3,c
 11894  0034D2  EC0B  F024         	call	i2___flsub	;wreg free
 11895  0034D6  C011  F187         	movff	?i2___flsub,_tickL	;volatile
 11896  0034DA  C012  F188         	movff	?i2___flsub+1,_tickL+1	;volatile
 11897  0034DE  C013  F189         	movff	?i2___flsub+2,_tickL+2	;volatile
 11898  0034E2  C014  F18A         	movff	?i2___flsub+3,_tickL+3	;volatile
 11899                           
 11900                           ;main.c: 284:             tickLeftTemp--;
 11901  0034E6  0EFF               	movlw	255
 11902  0034E8  2650               	addwf	_tickLeftTemp,f,c	;volatile
 11903  0034EA  0EFF               	movlw	255
 11904  0034EC  2251               	addwfc	_tickLeftTemp+1,f,c	;volatile
 11905  0034EE  0EFF               	movlw	255
 11906  0034F0  2252               	addwfc	_tickLeftTemp+2,f,c	;volatile
 11907  0034F2  0EFF               	movlw	255
 11908  0034F4                     L14:
 11909  0034F4  2253               	addwfc	_tickLeftTemp+3,f,c	;volatile
 11910                           
 11911                           ;main.c: 286:         INT0IF = 0;
 11912  0034F6  92F2               	bcf	4082,1,c	;volatile
 11913  0034F8                     i2l6330:
 11914                           
 11915                           ;main.c: 289:     if (INT2IE && INT2IF){
 11916  0034F8  B8F0               	btfsc	4080,4,c	;volatile
 11917  0034FA  A2F0               	btfss	4080,1,c	;volatile
 11918  0034FC  D045               	goto	i2l6346
 11919                           
 11920                           ;main.c: 290:         if(PORTDbits.RD1){
 11921  0034FE  A283               	btfss	3971,1,c	;volatile
 11922  003500  D020               	goto	i2l6340
 11923                           
 11924                           ;main.c: 291:             tickR++;
 11925  003502  C183  F001         	movff	_tickR,i2___fladd@b	;volatile
 11926  003506  C184  F002         	movff	_tickR+1,i2___fladd@b+1	;volatile
 11927  00350A  C185  F003         	movff	_tickR+2,i2___fladd@b+2	;volatile
 11928  00350E  C186  F004         	movff	_tickR+3,i2___fladd@b+3	;volatile
 11929  003512  0E00               	movlw	0
 11930  003514  6E05               	movwf	i2___fladd@a,c
 11931  003516  0E00               	movlw	0
 11932  003518  6E06               	movwf	i2___fladd@a+1,c
 11933  00351A  0E80               	movlw	128
 11934  00351C  6E07               	movwf	i2___fladd@a+2,c
 11935  00351E  0E3F               	movlw	63
 11936  003520  6E08               	movwf	i2___fladd@a+3,c
 11937  003522  ECB2  F015         	call	i2___fladd	;wreg free
 11938  003526  C001  F183         	movff	?i2___fladd,_tickR	;volatile
 11939  00352A  C002  F184         	movff	?i2___fladd+1,_tickR+1	;volatile
 11940  00352E  C003  F185         	movff	?i2___fladd+2,_tickR+2	;volatile
 11941  003532  C004  F186         	movff	?i2___fladd+3,_tickR+3	;volatile
 11942                           
 11943                           ;main.c: 292:             tickRightTemp++;
 11944  003536  0E01               	movlw	1
 11945  003538  264C               	addwf	_tickRightTemp,f,c	;volatile
 11946  00353A  0E00               	movlw	0
 11947  00353C  224D               	addwfc	_tickRightTemp+1,f,c	;volatile
 11948  00353E  224E               	addwfc	_tickRightTemp+2,f,c	;volatile
 11949  003540  D021               	goto	L15
 11950  003542                     i2l6340:
 11951                           
 11952                           ;main.c: 294:             tickR--;
 11953  003542  C183  F011         	movff	_tickR,i2___flsub@b	;volatile
 11954  003546  C184  F012         	movff	_tickR+1,i2___flsub@b+1	;volatile
 11955  00354A  C185  F013         	movff	_tickR+2,i2___flsub@b+2	;volatile
 11956  00354E  C186  F014         	movff	_tickR+3,i2___flsub@b+3	;volatile
 11957  003552  0E00               	movlw	0
 11958  003554  6E15               	movwf	i2___flsub@a,c
 11959  003556  0E00               	movlw	0
 11960  003558  6E16               	movwf	i2___flsub@a+1,c
 11961  00355A  0E80               	movlw	128
 11962  00355C  6E17               	movwf	i2___flsub@a+2,c
 11963  00355E  0E3F               	movlw	63
 11964  003560  6E18               	movwf	i2___flsub@a+3,c
 11965  003562  EC0B  F024         	call	i2___flsub	;wreg free
 11966  003566  C011  F183         	movff	?i2___flsub,_tickR	;volatile
 11967  00356A  C012  F184         	movff	?i2___flsub+1,_tickR+1	;volatile
 11968  00356E  C013  F185         	movff	?i2___flsub+2,_tickR+2	;volatile
 11969  003572  C014  F186         	movff	?i2___flsub+3,_tickR+3	;volatile
 11970                           
 11971                           ;main.c: 295:             tickRightTemp--;
 11972  003576  0EFF               	movlw	255
 11973  003578  264C               	addwf	_tickRightTemp,f,c	;volatile
 11974  00357A  0EFF               	movlw	255
 11975  00357C  224D               	addwfc	_tickRightTemp+1,f,c	;volatile
 11976  00357E  0EFF               	movlw	255
 11977  003580  224E               	addwfc	_tickRightTemp+2,f,c	;volatile
 11978  003582  0EFF               	movlw	255
 11979  003584                     L15:
 11980  003584  224F               	addwfc	_tickRightTemp+3,f,c	;volatile
 11981                           
 11982                           ;main.c: 297:         INT2IF = 0;
 11983  003586  92F0               	bcf	4080,1,c	;volatile
 11984  003588                     i2l6346:
 11985                           
 11986                           ;main.c: 300:     if(INT1IF && INT1IE){
 11987  003588  B0F0               	btfsc	4080,0,c	;volatile
 11988  00358A  A6F0               	btfss	4080,3,c	;volatile
 11989  00358C  D004               	goto	i2l6354
 11990                           
 11991                           ;main.c: 303:         key_was_pressed = 1;
 11992  00358E  0E01               	movlw	1
 11993  003590  0101               	movlb	1	; () banked
 11994  003592  6F8C               	movwf	_key_was_pressed& (0+255),b	;volatile
 11995                           
 11996                           ; BSR set to: 1
 11997                           ;main.c: 304:         INT1IF = 0;
 11998  003594  90F0               	bcf	4080,0,c	;volatile
 11999  003596                     i2l6354:
 12000                           
 12001                           ;main.c: 306:      if(RCIE && RCIF){
 12002  003596  BA9D               	btfsc	3997,5,c	;volatile
 12003  003598  AA9E               	btfss	3998,5,c	;volatile
 12004  00359A  D00C               	goto	i2l6364
 12005                           
 12006                           ;main.c: 307:         _rx_buffer[_rx_buffer_head] = RCREG;
 12007  00359C  0E40               	movlw	low __rx_buffer
 12008  00359E  2460               	addwf	__rx_buffer_head,w,c	;volatile
 12009  0035A0  6ED9               	movwf	fsr2l,c
 12010  0035A2  6ADA               	clrf	fsr2h,c
 12011  0035A4  0E02               	movlw	high __rx_buffer
 12012  0035A6  22DA               	addwfc	fsr2h,f,c
 12013  0035A8  CFAE FFDF          	movff	4014,indf2	;volatile
 12014                           
 12015                           ;main.c: 308:         _rx_buffer_head = (unsigned char)(_rx_buffer_head + 1) % 64;
 12016  0035AC  2860               	incf	__rx_buffer_head,w,c	;volatile
 12017  0035AE  0B3F               	andlw	63
 12018  0035B0  6E60               	movwf	__rx_buffer_head,c	;volatile
 12019                           
 12020                           ;main.c: 309:         RCIF = 0;
 12021  0035B2  9A9E               	bcf	3998,5,c	;volatile
 12022  0035B4                     i2l6364:
 12023                           
 12024                           ;main.c: 311:     if(TXIE && TXIF){
 12025  0035B4  B89D               	btfsc	3997,4,c	;volatile
 12026  0035B6  A89E               	btfss	3998,4,c	;volatile
 12027  0035B8  D013               	goto	i2l351
 12028                           
 12029                           ;main.c: 312:         if((_tx_buffer_tail != _tx_buffer_head)){
 12030  0035BA  505E               	movf	__tx_buffer_head,w,c	;volatile
 12031  0035BC  185D               	xorwf	__tx_buffer_tail,w,c	;volatile
 12032  0035BE  B4D8               	btfsc	status,2,c
 12033  0035C0  D00D               	goto	i2l349
 12034                           
 12035                           ;main.c: 313:             TXREG = _tx_buffer[_tx_buffer_tail];
 12036  0035C2  0E00               	movlw	low __tx_buffer
 12037  0035C4  245D               	addwf	__tx_buffer_tail,w,c	;volatile
 12038  0035C6  6ED9               	movwf	fsr2l,c
 12039  0035C8  6ADA               	clrf	fsr2h,c
 12040  0035CA  0E02               	movlw	high __tx_buffer
 12041  0035CC  22DA               	addwfc	fsr2h,f,c
 12042  0035CE  50DF               	movf	indf2,w,c
 12043  0035D0  6EAD               	movwf	4013,c	;volatile
 12044                           
 12045                           ;main.c: 314:             _tx_buffer_tail = (unsigned char)(_tx_buffer_tail + 1) % 64;
 12046  0035D2  285D               	incf	__tx_buffer_tail,w,c	;volatile
 12047  0035D4  0B3F               	andlw	63
 12048  0035D6  6E5D               	movwf	__tx_buffer_tail,c	;volatile
 12049                           
 12050                           ;main.c: 315:             TXIF = 0;
 12051  0035D8  989E               	bcf	3998,4,c	;volatile
 12052                           
 12053                           ;main.c: 316:         }else{
 12054  0035DA  D002               	goto	i2l351
 12055  0035DC                     i2l349:
 12056                           
 12057                           ;main.c: 317:             TXIF = 0;
 12058  0035DC  989E               	bcf	3998,4,c	;volatile
 12059                           
 12060                           ;main.c: 318:             TXIE = 0;
 12061  0035DE  989D               	bcf	3997,4,c	;volatile
 12062  0035E0                     i2l351:
 12063  0035E0  C01A  FFDA         	movff	??_high_isr+1,fsr2h
 12064  0035E4  C019  FFD9         	movff	??_high_isr,fsr2l
 12065  0035E8  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 12066  0035EA  0011               	retfie		f
 12067  0035EC                     __end_of_high_isr:
 12068                           	opt callstack 0
 12069                           
 12070 ;; *************** function i2___flsub *****************
 12071 ;; Defined at:
 12072 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;  b               4   16[COMRAM] void 
 12075 ;;  a               4   20[COMRAM] void 
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;		None
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  4   16[COMRAM] void 
 12080 ;; Registers used:
 12081 ;;		wreg, status,2, status,0, cstack
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12087 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12090 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12091 ;;Total ram usage:        8 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; Hardware stack levels required when called:    1
 12094 ;; This function calls:
 12095 ;;		i2___fladd
 12096 ;; This function is called by:
 12097 ;;		_high_isr
 12098 ;; This function uses a non-reentrant model
 12099 ;;
 12100                           
 12101                           	psect	text63
 12102  004816                     __ptext63:
 12103                           	opt callstack 0
 12104  004816                     i2___flsub:
 12105                           	opt callstack 17
 12106                           
 12107                           ;incstack = 0
 12108  004816  0E00               	movlw	0
 12109  004818  1A15               	xorwf	i2___flsub@a,f,c
 12110  00481A  0E00               	movlw	0
 12111  00481C  1A16               	xorwf	i2___flsub@a+1,f,c
 12112  00481E  0E00               	movlw	0
 12113  004820  1A17               	xorwf	i2___flsub@a+2,f,c
 12114  004822  0E80               	movlw	128
 12115  004824  1A18               	xorwf	i2___flsub@a+3,f,c
 12116  004826  C011  F001         	movff	i2___flsub@b,i2___fladd@b
 12117  00482A  C012  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
 12118  00482E  C013  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
 12119  004832  C014  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
 12120  004836  C015  F005         	movff	i2___flsub@a,i2___fladd@a
 12121  00483A  C016  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
 12122  00483E  C017  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
 12123  004842  C018  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
 12124  004846  ECB2  F015         	call	i2___fladd	;wreg free
 12125  00484A  C001  F011         	movff	?i2___fladd,?i2___flsub
 12126  00484E  C002  F012         	movff	?i2___fladd+1,?i2___flsub+1
 12127  004852  C003  F013         	movff	?i2___fladd+2,?i2___flsub+2
 12128  004856  C004  F014         	movff	?i2___fladd+3,?i2___flsub+3
 12129  00485A  0012               	return		;funcret
 12130  00485C                     __end_ofi2___flsub:
 12131                           	opt callstack 0
 12132                           
 12133 ;; *************** function i2___fladd *****************
 12134 ;; Defined at:
 12135 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  b               4    0[COMRAM] void 
 12138 ;;  a               4    4[COMRAM] void 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;  __fladd         1   15[COMRAM] unsigned char 
 12141 ;;  __fladd         1   14[COMRAM] unsigned char 
 12142 ;;  __fladd         1   13[COMRAM] unsigned char 
 12143 ;;  __fladd         1   12[COMRAM] unsigned char 
 12144 ;; Return value:  Size  Location     Type
 12145 ;;                  4    0[COMRAM] unsigned char 
 12146 ;; Registers used:
 12147 ;;		wreg, status,2, status,0
 12148 ;; Tracked objects:
 12149 ;;		On entry : 0/0
 12150 ;;		On exit  : 0/0
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12157 ;;Total ram usage:       16 bytes
 12158 ;; Hardware stack levels used:    1
 12159 ;; This function calls:
 12160 ;;		Nothing
 12161 ;; This function is called by:
 12162 ;;		_high_isr
 12163 ;;		i2___flsub
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167                           	psect	text64
 12168  002B64                     __ptext64:
 12169                           	opt callstack 0
 12170  002B64                     i2___fladd:
 12171                           	opt callstack 17
 12172                           
 12173                           ;incstack = 0
 12174  002B64  5004               	movf	i2___fladd@b+3,w,c
 12175  002B66  0B80               	andlw	128
 12176  002B68  6E0D               	movwf	i2___fladd@signs,c
 12177  002B6A  5004               	movf	i2___fladd@b+3,w,c
 12178  002B6C  2404               	addwf	i2___fladd@b+3,w,c
 12179  002B6E  6E0F               	movwf	i2___fladd@bexp,c
 12180  002B70  BE03               	btfsc	i2___fladd@b+2,7,c
 12181  002B72  800F               	bsf	i2___fladd@bexp,0,c
 12182  002B74  500F               	movf	i2___fladd@bexp,w,c
 12183  002B76  B4D8               	btfsc	status,2,c
 12184  002B78  D00D               	goto	i2l5684
 12185  002B7A  280F               	incf	i2___fladd@bexp,w,c
 12186  002B7C  A4D8               	btfss	status,2,c
 12187  002B7E  D008               	goto	i2l5680
 12188  002B80  0E00               	movlw	0
 12189  002B82  6E01               	movwf	i2___fladd@b,c
 12190  002B84  0E00               	movlw	0
 12191  002B86  6E02               	movwf	i2___fladd@b+1,c
 12192  002B88  0E00               	movlw	0
 12193  002B8A  6E03               	movwf	i2___fladd@b+2,c
 12194  002B8C  0E00               	movlw	0
 12195  002B8E  6E04               	movwf	i2___fladd@b+3,c
 12196  002B90                     i2l5680:
 12197  002B90  8E03               	bsf	i2___fladd@b+2,7,c
 12198  002B92  D006               	goto	L16
 12199  002B94                     i2l5684:
 12200  002B94  0E00               	movlw	0
 12201  002B96  6E01               	movwf	i2___fladd@b,c
 12202  002B98  0E00               	movlw	0
 12203  002B9A  6E02               	movwf	i2___fladd@b+1,c
 12204  002B9C  0E00               	movlw	0
 12205  002B9E  6E03               	movwf	i2___fladd@b+2,c
 12206  002BA0                     L16:
 12207  002BA0  0E00               	movlw	0
 12208  002BA2  6E04               	movwf	i2___fladd@b+3,c
 12209  002BA4  5008               	movf	i2___fladd@a+3,w,c
 12210  002BA6  0B80               	andlw	128
 12211  002BA8  6E0E               	movwf	i2___fladd@aexp,c
 12212  002BAA  500D               	movf	i2___fladd@signs,w,c
 12213  002BAC  180E               	xorwf	i2___fladd@aexp,w,c
 12214  002BAE  A4D8               	btfss	status,2,c
 12215  002BB0  8C0D               	bsf	i2___fladd@signs,6,c
 12216  002BB2  5008               	movf	i2___fladd@a+3,w,c
 12217  002BB4  2408               	addwf	i2___fladd@a+3,w,c
 12218  002BB6  6E0E               	movwf	i2___fladd@aexp,c
 12219  002BB8  BE07               	btfsc	i2___fladd@a+2,7,c
 12220  002BBA  800E               	bsf	i2___fladd@aexp,0,c
 12221  002BBC  500E               	movf	i2___fladd@aexp,w,c
 12222  002BBE  B4D8               	btfsc	status,2,c
 12223  002BC0  D00D               	goto	i2l5708
 12224  002BC2  280E               	incf	i2___fladd@aexp,w,c
 12225  002BC4  A4D8               	btfss	status,2,c
 12226  002BC6  D008               	goto	i2l5704
 12227  002BC8  0E00               	movlw	0
 12228  002BCA  6E05               	movwf	i2___fladd@a,c
 12229  002BCC  0E00               	movlw	0
 12230  002BCE  6E06               	movwf	i2___fladd@a+1,c
 12231  002BD0  0E00               	movlw	0
 12232  002BD2  6E07               	movwf	i2___fladd@a+2,c
 12233  002BD4  0E00               	movlw	0
 12234  002BD6  6E08               	movwf	i2___fladd@a+3,c
 12235  002BD8                     i2l5704:
 12236  002BD8  8E07               	bsf	i2___fladd@a+2,7,c
 12237  002BDA  D006               	goto	L17
 12238  002BDC                     i2l5708:
 12239  002BDC  0E00               	movlw	0
 12240  002BDE  6E05               	movwf	i2___fladd@a,c
 12241  002BE0  0E00               	movlw	0
 12242  002BE2  6E06               	movwf	i2___fladd@a+1,c
 12243  002BE4  0E00               	movlw	0
 12244  002BE6  6E07               	movwf	i2___fladd@a+2,c
 12245  002BE8                     L17:
 12246  002BE8  0E00               	movlw	0
 12247  002BEA  6E08               	movwf	i2___fladd@a+3,c
 12248  002BEC  500F               	movf	i2___fladd@bexp,w,c
 12249  002BEE  5C0E               	subwf	i2___fladd@aexp,w,c
 12250  002BF0  B0D8               	btfsc	status,0,c
 12251  002BF2  D022               	goto	i2l5746
 12252  002BF4  AC0D               	btfss	i2___fladd@signs,6,c
 12253  002BF6  D002               	goto	i2l5716
 12254  002BF8  0E80               	movlw	128
 12255  002BFA  1A0D               	xorwf	i2___fladd@signs,f,c
 12256  002BFC                     i2l5716:
 12257  002BFC  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 12258  002C00  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 12259  002C04  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 12260  002C08  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 12261  002C0C  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 12262  002C10  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 12263  002C14  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 12264  002C18  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 12265  002C1C  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 12266  002C20  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 12267  002C24  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 12268  002C28  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 12269  002C2C  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 12270  002C30  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 12271  002C34  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 12272  002C38                     i2l5746:
 12273  002C38  0E00               	movlw	0
 12274  002C3A  6E10               	movwf	i2___fladd@grs,c
 12275  002C3C  500F               	movf	i2___fladd@bexp,w,c
 12276  002C3E  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 12277  002C42  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
 12278  002C44  5E09               	subwf	??i2___fladd,f,c
 12279  002C46  0E00               	movlw	0
 12280  002C48  5A0A               	subwfb	??i2___fladd+1,f,c
 12281  002C4A  BE0A               	btfsc	??i2___fladd+1,7,c
 12282  002C4C  D02C               	goto	i2l1262
 12283  002C4E  500A               	movf	??i2___fladd+1,w,c
 12284  002C50  E104               	bnz	i2u636_40
 12285  002C52  0E1A               	movlw	26
 12286  002C54  5C09               	subwf	??i2___fladd,w,c
 12287  002C56  A0D8               	btfss	status,0,c
 12288  002C58  D026               	goto	i2l1262
 12289  002C5A                     i2u636_40:
 12290  002C5A  5001               	movf	i2___fladd@b,w,c
 12291  002C5C  1002               	iorwf	i2___fladd@b+1,w,c
 12292  002C5E  1003               	iorwf	i2___fladd@b+2,w,c
 12293  002C60  1004               	iorwf	i2___fladd@b+3,w,c
 12294  002C62  B4D8               	btfsc	status,2,c
 12295  002C64  D002               	goto	i2u637_40
 12296  002C66  0E01               	movlw	1
 12297  002C68  D001               	goto	i2u638_40
 12298  002C6A                     i2u637_40:
 12299  002C6A  0E00               	movlw	0
 12300  002C6C                     i2u638_40:
 12301  002C6C  6E10               	movwf	i2___fladd@grs,c
 12302  002C6E  0E00               	movlw	0
 12303  002C70  6E01               	movwf	i2___fladd@b,c
 12304  002C72  0E00               	movlw	0
 12305  002C74  6E02               	movwf	i2___fladd@b+1,c
 12306  002C76  0E00               	movlw	0
 12307  002C78  6E03               	movwf	i2___fladd@b+2,c
 12308  002C7A  0E00               	movlw	0
 12309  002C7C  6E04               	movwf	i2___fladd@b+3,c
 12310  002C7E  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 12311  002C82  D015               	goto	i2u641_40
 12312  002C84                     i2l1263:
 12313  002C84  A010               	btfss	i2___fladd@grs,0,c
 12314  002C86  D005               	goto	i2l5758
 12315  002C88  90D8               	bcf	status,0,c
 12316  002C8A  3010               	rrcf	i2___fladd@grs,w,c
 12317  002C8C  0901               	iorlw	1
 12318  002C8E  6E10               	movwf	i2___fladd@grs,c
 12319  002C90  D002               	goto	i2l5760
 12320  002C92                     i2l5758:
 12321  002C92  90D8               	bcf	status,0,c
 12322  002C94  3210               	rrcf	i2___fladd@grs,f,c
 12323  002C96                     i2l5760:
 12324  002C96  B001               	btfsc	i2___fladd@b,0,c
 12325  002C98  8E10               	bsf	i2___fladd@grs,7,c
 12326  002C9A  3404               	rlcf	i2___fladd@b+3,w,c
 12327  002C9C  3204               	rrcf	i2___fladd@b+3,f,c
 12328  002C9E  3203               	rrcf	i2___fladd@b+2,f,c
 12329  002CA0  3202               	rrcf	i2___fladd@b+1,f,c
 12330  002CA2  3201               	rrcf	i2___fladd@b,f,c
 12331  002CA4  2A0F               	incf	i2___fladd@bexp,f,c
 12332  002CA6                     i2l1262:
 12333  002CA6  500E               	movf	i2___fladd@aexp,w,c
 12334  002CA8  5C0F               	subwf	i2___fladd@bexp,w,c
 12335  002CAA  A0D8               	btfss	status,0,c
 12336  002CAC  D7EB               	goto	i2l1263
 12337  002CAE                     i2u641_40:
 12338  002CAE  BC0D               	btfsc	i2___fladd@signs,6,c
 12339  002CB0  D028               	goto	i2l5792
 12340  002CB2  500F               	movf	i2___fladd@bexp,w,c
 12341  002CB4  A4D8               	btfss	status,2,c
 12342  002CB6  D009               	goto	i2l5774
 12343  002CB8  0E00               	movlw	0
 12344  002CBA  6E01               	movwf	?i2___fladd,c
 12345  002CBC  0E00               	movlw	0
 12346  002CBE  6E02               	movwf	?i2___fladd+1,c
 12347  002CC0  0E00               	movlw	0
 12348  002CC2  6E03               	movwf	?i2___fladd+2,c
 12349  002CC4  0E00               	movlw	0
 12350  002CC6  6E04               	movwf	?i2___fladd+3,c
 12351  002CC8  0012               	return	
 12352  002CCA                     i2l5774:
 12353  002CCA  5005               	movf	i2___fladd@a,w,c
 12354  002CCC  2601               	addwf	i2___fladd@b,f,c
 12355  002CCE  5006               	movf	i2___fladd@a+1,w,c
 12356  002CD0  2202               	addwfc	i2___fladd@b+1,f,c
 12357  002CD2  5007               	movf	i2___fladd@a+2,w,c
 12358  002CD4  2203               	addwfc	i2___fladd@b+2,f,c
 12359  002CD6  5008               	movf	i2___fladd@a+3,w,c
 12360  002CD8  2204               	addwfc	i2___fladd@b+3,f,c
 12361  002CDA  A004               	btfss	i2___fladd@b+3,0,c
 12362  002CDC  D071               	goto	i2u654_40
 12363  002CDE  A010               	btfss	i2___fladd@grs,0,c
 12364  002CE0  D005               	goto	i2l5782
 12365  002CE2  90D8               	bcf	status,0,c
 12366  002CE4  3010               	rrcf	i2___fladd@grs,w,c
 12367  002CE6  0901               	iorlw	1
 12368  002CE8  6E10               	movwf	i2___fladd@grs,c
 12369  002CEA  D002               	goto	i2l5784
 12370  002CEC                     i2l5782:
 12371  002CEC  90D8               	bcf	status,0,c
 12372  002CEE  3210               	rrcf	i2___fladd@grs,f,c
 12373  002CF0                     i2l5784:
 12374  002CF0  B001               	btfsc	i2___fladd@b,0,c
 12375  002CF2  8E10               	bsf	i2___fladd@grs,7,c
 12376  002CF4  3404               	rlcf	i2___fladd@b+3,w,c
 12377  002CF6  3204               	rrcf	i2___fladd@b+3,f,c
 12378  002CF8  3203               	rrcf	i2___fladd@b+2,f,c
 12379  002CFA  3202               	rrcf	i2___fladd@b+1,f,c
 12380  002CFC  3201               	rrcf	i2___fladd@b,f,c
 12381  002CFE  2A0F               	incf	i2___fladd@bexp,f,c
 12382  002D00  D05F               	goto	i2u654_40
 12383  002D02                     i2l5792:
 12384  002D02  5005               	movf	i2___fladd@a,w,c
 12385  002D04  5C01               	subwf	i2___fladd@b,w,c
 12386  002D06  5006               	movf	i2___fladd@a+1,w,c
 12387  002D08  5802               	subwfb	i2___fladd@b+1,w,c
 12388  002D0A  5007               	movf	i2___fladd@a+2,w,c
 12389  002D0C  5803               	subwfb	i2___fladd@b+2,w,c
 12390  002D0E  5004               	movf	i2___fladd@b+3,w,c
 12391  002D10  0A80               	xorlw	128
 12392  002D12  6E09               	movwf	??i2___fladd& (0+255),c
 12393  002D14  5008               	movf	i2___fladd@a+3,w,c
 12394  002D16  0A80               	xorlw	128
 12395  002D18  5809               	subwfb	??i2___fladd& (0+255),w,c
 12396  002D1A  B0D8               	btfsc	status,0,c
 12397  002D1C  D025               	goto	i2l5802
 12398  002D1E  5001               	movf	i2___fladd@b,w,c
 12399  002D20  5C05               	subwf	i2___fladd@a,w,c
 12400  002D22  6E09               	movwf	??i2___fladd& (0+255),c
 12401  002D24  5002               	movf	i2___fladd@b+1,w,c
 12402  002D26  5806               	subwfb	i2___fladd@a+1,w,c
 12403  002D28  6E0A               	movwf	(??i2___fladd+1)& (0+255),c
 12404  002D2A  5003               	movf	i2___fladd@b+2,w,c
 12405  002D2C  5807               	subwfb	i2___fladd@a+2,w,c
 12406  002D2E  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
 12407  002D30  5004               	movf	i2___fladd@b+3,w,c
 12408  002D32  5808               	subwfb	i2___fladd@a+3,w,c
 12409  002D34  6E0C               	movwf	(??i2___fladd+3)& (0+255),c
 12410  002D36  0EFF               	movlw	255
 12411  002D38  2409               	addwf	??i2___fladd,w,c
 12412  002D3A  6E01               	movwf	i2___fladd@b,c
 12413  002D3C  0EFF               	movlw	255
 12414  002D3E  200A               	addwfc	??i2___fladd+1,w,c
 12415  002D40  6E02               	movwf	i2___fladd@b+1,c
 12416  002D42  0EFF               	movlw	255
 12417  002D44  200B               	addwfc	??i2___fladd+2,w,c
 12418  002D46  6E03               	movwf	i2___fladd@b+2,c
 12419  002D48  0EFF               	movlw	255
 12420  002D4A  200C               	addwfc	??i2___fladd+3,w,c
 12421  002D4C  6E04               	movwf	i2___fladd@b+3,c
 12422  002D4E  0E80               	movlw	128
 12423  002D50  1A0D               	xorwf	i2___fladd@signs,f,c
 12424  002D52  6C10               	negf	i2___fladd@grs,c
 12425  002D54  5010               	movf	i2___fladd@grs,w,c
 12426  002D56  A4D8               	btfss	status,2,c
 12427  002D58  D00F               	goto	i2l1278
 12428  002D5A  0E01               	movlw	1
 12429  002D5C  2601               	addwf	i2___fladd@b,f,c
 12430  002D5E  0E00               	movlw	0
 12431  002D60  2202               	addwfc	i2___fladd@b+1,f,c
 12432  002D62  2203               	addwfc	i2___fladd@b+2,f,c
 12433  002D64  2204               	addwfc	i2___fladd@b+3,f,c
 12434  002D66  D008               	goto	i2l1278
 12435  002D68                     i2l5802:
 12436  002D68  5005               	movf	i2___fladd@a,w,c
 12437  002D6A  5E01               	subwf	i2___fladd@b,f,c
 12438  002D6C  5006               	movf	i2___fladd@a+1,w,c
 12439  002D6E  5A02               	subwfb	i2___fladd@b+1,f,c
 12440  002D70  5007               	movf	i2___fladd@a+2,w,c
 12441  002D72  5A03               	subwfb	i2___fladd@b+2,f,c
 12442  002D74  5008               	movf	i2___fladd@a+3,w,c
 12443  002D76  5A04               	subwfb	i2___fladd@b+3,f,c
 12444  002D78                     i2l1278:
 12445  002D78  5001               	movf	i2___fladd@b,w,c
 12446  002D7A  1002               	iorwf	i2___fladd@b+1,w,c
 12447  002D7C  1003               	iorwf	i2___fladd@b+2,w,c
 12448  002D7E  1004               	iorwf	i2___fladd@b+3,w,c
 12449  002D80  A4D8               	btfss	status,2,c
 12450  002D82  D01C               	goto	i2l5826
 12451  002D84  5010               	movf	i2___fladd@grs,w,c
 12452  002D86  A4D8               	btfss	status,2,c
 12453  002D88  D019               	goto	i2l5826
 12454  002D8A  0E00               	movlw	0
 12455  002D8C  6E01               	movwf	?i2___fladd,c
 12456  002D8E  0E00               	movlw	0
 12457  002D90  6E02               	movwf	?i2___fladd+1,c
 12458  002D92  0E00               	movlw	0
 12459  002D94  6E03               	movwf	?i2___fladd+2,c
 12460  002D96  0E00               	movlw	0
 12461  002D98  6E04               	movwf	?i2___fladd+3,c
 12462  002D9A  0012               	return	
 12463  002D9C                     i2l5810:
 12464  002D9C  90D8               	bcf	status,0,c
 12465  002D9E  3601               	rlcf	i2___fladd@b,f,c
 12466  002DA0  3602               	rlcf	i2___fladd@b+1,f,c
 12467  002DA2  3603               	rlcf	i2___fladd@b+2,f,c
 12468  002DA4  3604               	rlcf	i2___fladd@b+3,f,c
 12469  002DA6  BE10               	btfsc	i2___fladd@grs,7,c
 12470  002DA8  8001               	bsf	i2___fladd@b,0,c
 12471  002DAA  A010               	btfss	i2___fladd@grs,0,c
 12472  002DAC  D002               	goto	i2l5820
 12473  002DAE  80D8               	bsf	status,0,c
 12474  002DB0  D001               	goto	L18
 12475  002DB2                     i2l5820:
 12476  002DB2  90D8               	bcf	status,0,c
 12477  002DB4                     L18:
 12478  002DB4  3610               	rlcf	i2___fladd@grs,f,c
 12479  002DB6  500F               	movf	i2___fladd@bexp,w,c
 12480  002DB8  A4D8               	btfss	status,2,c
 12481  002DBA  060F               	decf	i2___fladd@bexp,f,c
 12482  002DBC                     i2l5826:
 12483  002DBC  AE03               	btfss	i2___fladd@b+2,7,c
 12484  002DBE  D7EE               	goto	i2l5810
 12485  002DC0                     i2u654_40:
 12486  002DC0  0E00               	movlw	0
 12487  002DC2  6E0E               	movwf	i2___fladd@aexp,c
 12488  002DC4  AE10               	btfss	i2___fladd@grs,7,c
 12489  002DC6  D00B               	goto	i2l1287
 12490  002DC8  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 12491  002DCC  0E7F               	movlw	127
 12492  002DCE  1609               	andwf	??i2___fladd,f,c
 12493  002DD0  B4D8               	btfsc	status,2,c
 12494  002DD2  D003               	goto	i2l1288
 12495  002DD4                     i2u656_40:
 12496  002DD4  0E01               	movlw	1
 12497  002DD6  6E0E               	movwf	i2___fladd@aexp,c
 12498  002DD8  D002               	goto	i2l1287
 12499  002DDA                     i2l1288:
 12500  002DDA  B001               	btfsc	i2___fladd@b,0,c
 12501  002DDC  D7FB               	goto	i2u656_40
 12502  002DDE                     i2l1287:
 12503  002DDE  500E               	movf	i2___fladd@aexp,w,c
 12504  002DE0  B4D8               	btfsc	status,2,c
 12505  002DE2  D020               	goto	i2l5846
 12506  002DE4  0E01               	movlw	1
 12507  002DE6  2601               	addwf	i2___fladd@b,f,c
 12508  002DE8  0E00               	movlw	0
 12509  002DEA  2202               	addwfc	i2___fladd@b+1,f,c
 12510  002DEC  2203               	addwfc	i2___fladd@b+2,f,c
 12511  002DEE  2204               	addwfc	i2___fladd@b+3,f,c
 12512  002DF0  A004               	btfss	i2___fladd@b+3,0,c
 12513  002DF2  D018               	goto	i2l5846
 12514  002DF4  C001  F009         	movff	i2___fladd@b,??i2___fladd
 12515  002DF8  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 12516  002DFC  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 12517  002E00  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 12518  002E04  340C               	rlcf	??i2___fladd+3,w,c
 12519  002E06  320C               	rrcf	??i2___fladd+3,f,c
 12520  002E08  320B               	rrcf	??i2___fladd+2,f,c
 12521  002E0A  320A               	rrcf	??i2___fladd+1,f,c
 12522  002E0C  3209               	rrcf	??i2___fladd,f,c
 12523  002E0E  C009  F001         	movff	??i2___fladd,i2___fladd@b
 12524  002E12  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 12525  002E16  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 12526  002E1A  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 12527  002E1E  280F               	incf	i2___fladd@bexp,w,c
 12528  002E20  A4D8               	btfss	status,2,c
 12529  002E22  2A0F               	incf	i2___fladd@bexp,f,c
 12530  002E24                     i2l5846:
 12531  002E24  280F               	incf	i2___fladd@bexp,w,c
 12532  002E26  B4D8               	btfsc	status,2,c
 12533  002E28  D003               	goto	i2u662_40
 12534  002E2A  500F               	movf	i2___fladd@bexp,w,c
 12535  002E2C  A4D8               	btfss	status,2,c
 12536  002E2E  D00D               	goto	i2l5854
 12537  002E30                     i2u662_40:
 12538  002E30  0E00               	movlw	0
 12539  002E32  6E01               	movwf	i2___fladd@b,c
 12540  002E34  0E00               	movlw	0
 12541  002E36  6E02               	movwf	i2___fladd@b+1,c
 12542  002E38  0E00               	movlw	0
 12543  002E3A  6E03               	movwf	i2___fladd@b+2,c
 12544  002E3C  0E00               	movlw	0
 12545  002E3E  6E04               	movwf	i2___fladd@b+3,c
 12546  002E40  500F               	movf	i2___fladd@bexp,w,c
 12547  002E42  A4D8               	btfss	status,2,c
 12548  002E44  D002               	goto	i2l5854
 12549  002E46  0E00               	movlw	0
 12550  002E48  6E0D               	movwf	i2___fladd@signs,c
 12551  002E4A                     i2l5854:
 12552  002E4A  A00F               	btfss	i2___fladd@bexp,0,c
 12553  002E4C  D002               	goto	i2l5858
 12554  002E4E  8E03               	bsf	i2___fladd@b+2,7,c
 12555  002E50  D001               	goto	i2l5860
 12556  002E52                     i2l5858:
 12557  002E52  9E03               	bcf	i2___fladd@b+2,7,c
 12558  002E54                     i2l5860:
 12559  002E54  90D8               	bcf	status,0,c
 12560  002E56  300F               	rrcf	i2___fladd@bexp,w,c
 12561  002E58  6E04               	movwf	i2___fladd@b+3,c
 12562  002E5A  BE0D               	btfsc	i2___fladd@signs,7,c
 12563  002E5C  8E04               	bsf	i2___fladd@b+3,7,c
 12564  002E5E  C001  F001         	movff	i2___fladd@b,?i2___fladd
 12565  002E62  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 12566  002E66  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 12567  002E6A  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 12568  002E6E  0012               	return		;funcret
 12569  002E70                     __end_ofi2___fladd:
 12570                           	opt callstack 0
 12571                           
 12572                           	psect	rparam
 12573  0000                     
 12574                           	psect	temp
 12575  000065                     btemp:
 12576                           	opt callstack 0
 12577  000065                     	ds	1
 12578  0000                     int$flags	set	btemp
 12579  0000                     wtemp8	set	btemp+1
 12580  0000                     ttemp5	set	btemp+1
 12581  0000                     ttemp6	set	btemp+4
 12582  0000                     ttemp7	set	btemp+8
 12583                           tosu	equ	0xFFF
 12584                           tosh	equ	0xFFE
 12585                           tosl	equ	0xFFD
 12586                           stkptr	equ	0xFFC
 12587                           pclatu	equ	0xFFB
 12588                           pclath	equ	0xFFA
 12589                           pcl	equ	0xFF9
 12590                           tblptru	equ	0xFF8
 12591                           tblptrh	equ	0xFF7
 12592                           tblptrl	equ	0xFF6
 12593                           tablat	equ	0xFF5
 12594                           prodh	equ	0xFF4
 12595                           prodl	equ	0xFF3
 12596                           indf0	equ	0xFEF
 12597                           postinc0	equ	0xFEE
 12598                           postdec0	equ	0xFED
 12599                           preinc0	equ	0xFEC
 12600                           plusw0	equ	0xFEB
 12601                           fsr0h	equ	0xFEA
 12602                           fsr0l	equ	0xFE9
 12603                           wreg	equ	0xFE8
 12604                           indf1	equ	0xFE7
 12605                           postinc1	equ	0xFE6
 12606                           postdec1	equ	0xFE5
 12607                           preinc1	equ	0xFE4
 12608                           plusw1	equ	0xFE3
 12609                           fsr1h	equ	0xFE2
 12610                           fsr1l	equ	0xFE1
 12611                           bsr	equ	0xFE0
 12612                           indf2	equ	0xFDF
 12613                           postinc2	equ	0xFDE
 12614                           postdec2	equ	0xFDD
 12615                           preinc2	equ	0xFDC
 12616                           plusw2	equ	0xFDB
 12617                           fsr2h	equ	0xFDA
 12618                           fsr2l	equ	0xFD9
 12619                           status	equ	0xFD8


Data Sizes:
    Strings     55
    Constant    32
    Data        15
    BSS         259
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     75     100
    BANK0           128    117     125
    BANK1           256    115     228
    BANK2           256      0     128
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), main@command(BANK1[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_sprintf(BANK1[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[80]), main@command(BANK1[25]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK1[25]), main@buffer(BANK1[10]), main@lcdDisplay(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK1[25]), main@buffer(BANK1[10]), main@lcdDisplay(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1704_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK1[25]), main@buffer(BANK1[10]), main@lcdDisplay(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK1[25]), main@buffer(BANK1[10]), main@lcdDisplay(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_7(CODE[6]), STR_6(CODE[10]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), main@command(BANK1[25]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), main@command(BANK1[25]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK1[2]), stoa@nuls(COMRAM[7]), main@command(BANK1[25]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    UART_send_string@message	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK1[25]), main@buffer(BANK1[10]), STR_1(CODE[15]), 

    LCD_write_str@str	PTR unsigned char  size(2) Largest target is 16
		 -> main@lcdDisplay(BANK1[16]), 


Critical Paths under _main in COMRAM

    _stoa->_fputc
    _efgtoa->___flge
    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    _set_pwm_duty_cycle_RC2_RightSlave->___flge
    _set_pwm_duty_cycle_RC1_LeftMaster->___flge
    ___fltol->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fladd->___fldiv
    _UART_send_string->_UART_send_char
    _UART_Init->___aldiv
    _LCD_write_str->_send_byte
    _LCD_set_cursor->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Init->___lldiv

Critical Paths under _high_isr in COMRAM

    _high_isr->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flmul
    ___flsub->___flmul
    _drive->_set_pwm_duty_cycle_RC1_LeftMaster
    _drive->_set_pwm_duty_cycle_RC2_RightSlave
    _set_pwm_duty_cycle_RC2_RightSlave->___flmul
    _set_pwm_duty_cycle_RC1_LeftMaster->___flmul
    ___fltol->___flmul
    ___flge->___flmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                96    96      0  100190
                                             20 BANK1     95    95      0
                      _DCMotorAllOff
                  _DCMotorCenterLeft
                 _DCMotorCenterRight
                    _DCMotorLeftBkwd
                     _DCMotorLeftFwd
             _DCMotorLeftRightBkwdON
              _DCMotorLeftRightFwdON
                   _DCMotorRightBkwd
                    _DCMotorRightFwd
                    _I2C_Master_Init
                     _LCD_set_cursor
                      _LCD_write_str
                           _PWMSetup
                          _UART_Init
                     _UART_available
                          _UART_read
                   _UART_send_string
                            ___fldiv
                            ___flmul
                              _drive
                            _initLCD
                          _portSetup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   54279
                                              0 BANK1     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   52857
                                            109 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           49    43      6   52255
                                             81 BANK0     28    22      6
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             26 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2890
                                             39 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   34703
                                             13 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             32 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             26 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             51 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             26 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4807
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             26 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             26 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             26 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    5992
                                             57 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5713
                                             46 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     310
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2235
                                             39 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1735
                                             30 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     158
                                             29 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1795
                                             33 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             26 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     512
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _portSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                             30 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _drive                                                4     4      0   31174
                                             27 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
  _set_pwm_duty_cycle_RC1_LeftMaster
  _set_pwm_duty_cycle_RC2_RightSlave
 ---------------------------------------------------------------------------------
 (2) _set_pwm_duty_cycle_RC2_RightSlave                   14    10      4   11221
                                             13 BANK0     14    10      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _set_pwm_duty_cycle_RC1_LeftMaster                   14    10      4   11221
                                             13 BANK0     14    10      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     836
                                             26 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     697
                                             63 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             51 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1166
                                             63 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3803
                                             26 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4022
                                             51 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     6     4      2     384
                                             27 COMRAM     6     4      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            1     1      0      23
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_available                                       4     2      2       0
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     8      0     475
                                             40 COMRAM     8     8      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             26 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _PWMSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_str                                        5     3      2     679
                                             29 COMRAM     5     3      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor                                       4     0      4    3239
                                             30 COMRAM     4     0      4
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     158
                                             29 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (7) _send_byte                                            1     1      0     127
                                             28 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (8) _send_nibble                                          1     1      0      65
                                             27 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (9) _pulse_e                                              1     1      0      34
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             39 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             26 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _DCMotorLeftRightFwdON                                0     0      0       0
                     _DCMotorLeftFwd
                    _DCMotorRightFwd
 ---------------------------------------------------------------------------------
 (1) _DCMotorRightFwd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DCMotorLeftFwd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorLeftRightBkwdON                               0     0      0       0
                    _DCMotorLeftBkwd
                   _DCMotorRightBkwd
 ---------------------------------------------------------------------------------
 (1) _DCMotorRightBkwd                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DCMotorLeftBkwd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorCenterRight                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorCenterLeft                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorAllOff                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                            2     2      0    4429
                                             24 COMRAM     2     2      0
                          i2___fladd
                          i2___flsub
 ---------------------------------------------------------------------------------
 (13) i2___flsub                                           8     0      8    2289
                                             16 COMRAM     8     0      8
                          i2___fladd
 ---------------------------------------------------------------------------------
 (14) i2___fladd                                          16     8      8    2140
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCMotorAllOff
   _DCMotorCenterLeft
   _DCMotorCenterRight
   _DCMotorLeftBkwd
   _DCMotorLeftFwd
   _DCMotorLeftRightBkwdON
     _DCMotorLeftBkwd
     _DCMotorRightBkwd
   _DCMotorLeftRightFwdON
     _DCMotorLeftFwd
     _DCMotorRightFwd
   _DCMotorRightBkwd
   _DCMotorRightFwd
   _I2C_Master_Init
     ___lldiv
   _LCD_set_cursor
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
   _LCD_write_str
     _send_byte
       _send_nibble
         _pulse_e
   _PWMSetup
   _UART_Init
     ___aldiv
   _UART_available
   _UART_read
   _UART_send_string
     _UART_send_char
   ___fldiv
   ___flmul
     ___fldiv (ARG)
     ___xxtofl (ARG)
   _drive
     ___fladd
       ___fldiv (ARG)
     ___fldiv
     ___xxtofl
     _set_pwm_duty_cycle_RC1_LeftMaster
       ___fldiv
       ___flge
         ___flmul (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _set_pwm_duty_cycle_RC2_RightSlave
       ___fldiv
       ___flge
         ___flmul (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
       ___flmul
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _portSetup
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen
         _strncmp
         _tolower
           _isupper

 _high_isr (ROOT)
   i2___fladd
   i2___flsub
     i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      80       9       50.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     73      E4       7       89.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     75      7D       5       97.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4B      64       1       79.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     245      34        0.0%
DATA                 0      0     245       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 12:33:12 2019

                                 ___fldiv@aexp 0033                                   ___fldiv@bexp 0032  
                                 ___fldiv@sign 002B                        UART_send_string@message 001C  
                                           l91 470C                                             l92 471E  
                                           l98 4790                                    __CFG_CPD$ON 000000  
                                 ___awdiv@sign 0020                                             _kp 1012  
                          ___wmul@multiplicand 001D                                    __CFG_BORV$3 000000  
                                 __CFG_CP0$OFF 000000                                   __CFG_CP1$OFF 000000  
                                 __CFG_CP2$OFF 000000                                   __CFG_CP3$OFF 000000  
                                          l321 24B2                                            l291 2166  
                                          l623 1678                                            l549 418C  
                                          l661 38D2                                            l760 4400  
                                          l597 1396      set_pwm_duty_cycle_RC2_RightSlave@duty_val 0099  
                                          l998 3C48                                   __CFG_CPB$OFF 000000  
                                          _PR2 000FCB                                    i2___fladd@a 0005  
                                  i2___fladd@b 0001                                            _pad 415E  
                                 ___awmod@sign 0020                                            wreg 000FE8  
                                  i2___flsub@a 0015                                    i2___flsub@b 0011  
                                 ___flmul@aexp 0081                                   ___flmul@bexp 0086  
                                 ___flmul@sign 0080                                   ___flmul@temp 008B  
                                 ___flmul@prod 0087                                   __CFG_LVP$OFF 000000  
                                 ___fltol@exp1 0049                                    main@command 013C  
                                 __CFG_WDT$OFF 000000                                           l1317 2FE2  
                                         l1262 299A                                           l1263 2978  
                                         l1328 3050                                           l1329 304C  
                                         l1347 2586                                           l1443 3722  
                                         l1364 2824                                           l1356 279E  
                                         l1532 477C                                           l1357 279A  
                                         l1278 2A6C                                           l1287 2AD2  
                                         l1455 320E                                           l1288 2ACE  
                                         l1395 37E8                                           l1388 376A  
                                         l6012 3EE0                                           l6020 3F4A  
                                         l6060 4A0E                                           l7004 3016  
                                         ?_pad 002F                                           l7040 30F0  
                                         l7032 30E2                                           l7024 3094  
                                         l5610 43BE                                           l7130 2746  
                                         l5620 43F2                                           l7028 30B8  
                                         l7060 2532                                           l7204 4346  
                                         l7220 4378                                           l7038 30EE  
                                         l7062 2536                                           l7206 434E  
                                         l8030 4588                                           l5608 43B2  
                                         l5632 3D6C                                           l7160 2800  
                                         l7136 2764                                           l7080 2576  
                                         l7064 2546                                           l6600 496A  
                                         l7224 4386                                           l7216 436E  
                                         l7240 4432                                           l6602 496E  
                                         l7306 494E                                           l7402 10D2  
                                         l7410 10E8                                           l8210 21EE  
                                         l8202 21CE                                           l8060 4730  
                                         l5644 3DA6                                           l5660 3DF4  
                                         l7172 2842                                           l7156 27E2  
                                         l7332 3E84                                           l7316 3E3A  
                                         l7260 4478                                           l7252 4460  
                                         l7244 4440                                           l7236 4426  
                                         l7420 1154                                           l8028 4562  
                                         l8220 2240                                           l8212 2218  
                                         l5646 3DB2                                           l5638 3D84  
                                         l6702 2986                                           l7078 2572  
                                         l7350 3EC4                                           l7342 3E9C  
                                         l7246 4448                                           l7510 1434  
                                         l7422 116C                                           l8206 21E8  
                                         l5664 3E0A                                           l5656 3DE6  
                                         l6704 298A                                           l6624 2884  
                                         l7088 25A4                                           l7344 3EA8  
                                         l7336 3E94                                           l7192 4320  
                                         l7256 446A                                           l7272 42EA  
                                         l7600 1820                                           l7520 146E  
                                         l7504 1410                                           l7424 1176  
                                         l8224 225A                                           l6802 2B46  
                                         l7362 4892                                           l7370 46B0  
                                         l7514 1444                                           l8242 22B8  
                                         l8068 47A8                                           l6804 2B48  
                                         l6660 28F0                                           l6652 28D0  
                                         l6628 2888                                           l7292 3C32  
                                         l7284 3BE8                                           l7372 46BC  
                                         l7276 4308                                           l7268 42B6  
                                         l7612 1862                                           l7452 1266  
                                         l7428 119C                                           l7700 3900  
                                         l8252 22E8                                           l8236 2274  
                                         l6726 29E0                                           l6718 29BE  
                                         l8086 3384                                           l6582 403A  
                                         l6822 4184                                           l7198 4330  
                                         l7630 18B8                                           l7550 1670  
                                         l7542 1618                                           l7462 132A  
                                         l7438 1208                                           l7446 1222  
                                         l7390 10A4                                           l7710 3944  
                                         l8270 23B4                                           l8262 236A  
                                         l8246 22D2                                           l8238 229E  
                                         l8158 2012                                           l6728 29E4  
                                         l6736 29F6                                           l6648 28CC  
                                         l7288 3C1C                                           l6592 48A4  
                                         l6832 41DA                                           l6824 4196  
                                         l7640 190E                                           l7552 1692  
                                         l7536 15DA                                           l7528 1564  
                                         l7456 12A0                                           l7704 391E  
                                         l7800 1A34                                           l8264 2378  
                                         l8256 230C                                           l8176 211E  
                                         l8168 20DA                                           l6754 2A90  
                                         l6770 2AB0                                           l6746 2A5C  
                                         l6690 292C                                           l6922 2E9C  
                                         l7298 3C80                                           l7722 35FE  
                                         l6818 4176                                           l7650 193A  
                                         l7474 137E                                           l7458 12EE  
                                         l7714 395E                                           l8258 2330  
                                         l8194 219A                                           l8186 2172  
                                         l6764 2AA6                                           l7740 3660  
                                         l7732 3648                                           l7724 3602  
                                         l6596 48BA                                           l6828 41AE  
                                         l6844 3CFC                                           l6860 4608  
                                         l7628 18AE                                           l7564 1714  
                                         l7492 13EE                                           l7484 13A6  
                                         l7812 1A40                                           l7804 1A38  
                                         l8284 242C                                           l8276 23F0  
                                         l8292 2490                                           l6790 2B18  
                                         l6942 2EDC                                           l6926 2EA0  
                                         l7742 3666                                           l6854 3D46  
                                         l7494 13F2                                           l7478 13A0  
                                         l7718 3976                                           l7830 1AF8  
                                         l8286 2456                                           l8198 21B4  
                                         l6960 2F2A                                           l7744 368E  
                                         l6848 3D06                                           l7576 1744  
                                         l7584 1764                                           l7592 1788  
                                         l7920 1F5A                                           l7832 1B16  
                                         l7816 1A4A                                           l7808 1A3C  
                                         l6954 2F14                                           l6946 2EE0  
                                         l7738 3658                                           l7666 199A  
                                         l7770 3FB8                                           l7914 1F1E  
                                         l7906 1EB0                                           l7850 1BEE  
                                         l7834 1B24                                           l7818 1A8C  
                                         l7930 1F80                                           l7748 36C2  
                                         l6892 326E                                           l7924 1F66  
                                         l7852 1C0C                                           l6798 2B3E  
                                         l6878 3170                                           l7686 3896  
                                         l7870 1CF4                                           l7854 1C1A  
                                         l6992 2FE0                                           l6968 2F42  
                                         l7960 379E                                           l7952 377A  
                                         l6896 329C                                           l6888 3230  
                                         l7696 38E8                                           l7768 3FAA  
                                         l7792 1A1E                                           l6986 2FBA  
                                         l6978 2F92                                           l7970 380E  
                                         l7962 37AA                                           l7890 1DE0  
                                         l7794 1A20                                           l7972 381A  
                                         l7964 37D0                                           l7796 1A30  
set_pwm_duty_cycle_RC2_RightSlave@max_duty_val 0097                                           l6998 2FF8  
                                         l7958 3798                                           l7886 1DB6  
                                         l7878 1D5A                                           _P1M0 007DEE  
                                         _P1M1 007DEF                                           l7988 385A  
                                         STR_1 1021                                           STR_2 1040  
                                         STR_3 1040                                           STR_4 1040  
                                         STR_5 1040                                           STR_6 1030  
                                         STR_7 103A                                           STR_8 1045  
                                         STR_9 104D                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         _LATD 000F8C                                           _LATE 000F8D  
                                         u7110 48FA                                           u6240 3DB6  
                                         u8000 30A2                                           u7120 48FC  
                                         u8010 30C6                                           _RCIE 007CED  
                                         u7220 294E                                           u8100 2592  
                                         u7060 4032                                           _RCIF 007CF5  
                                         u7045 49B0                                           u6190 43C2  
                                         u7046 49B2                                           u7230 295E  
                                         u8110 2708                                           u7400 2AB4  
                                         u7240 2960                                           u8200 280E  
                                         u7080 407A                                           u9000 1924  
                                         u8115 26FE                                           u7420 2AC8  
                                         u9020 1984                                           u9100 3914  
                                         u7270 29A2                                           u8150 2794  
                                         u8310 444C                                           u9030 1986  
                                         u6730 3F0E                                           u8250 4352  
                                         u7610 3D3E                                           u9130 398A  
                                         u9051 3876                                           u7620 3D40  
                                         u6725 4236                                           u7605 3D20  
                                         u6750 3F42                                           u8190 27F0  
                                         u8430 3E28                                           u8510 488E  
                                         u9150 3644                                           u7630 4642  
                                         u9310 1B5E                                           u6760 3F78  
                                         u7480 2B24                                           u8440 3E58  
                                         u8360 4304                                           u7560 3CC2  
                                         u9320 1B60                                           u6665 451A  
                                         u6737 3F04                                           u9170 36F2  
                                         u7730 31EE                                           u7650 4762  
                                         u9250 3FFE                                           u9330 1B6C  
                                         u7715 3188                                           u9180 36F4  
                                         u7716 318E                                           u7660 4764  
                                         u8700 138C                                           u8620 11E0  
                                         u6757 3F38                                           u8445 3E4E  
                                         u7565 3CB8                                           u7717 319C  
                                         u7637 4638                                           u7750 324E  
                                         u8630 11E2                                           u8550 10C2  
                                         u6767 3F6E                                           u7735 31E4  
                                         u8480 3EAE                                           u7680 313E  
                                         u9440 1E64                                           u9360 1C54  
                                         u9610 3A86                                           u7690 315E  
                                         u8730 13BE                                           u9450 1E66  
                                         u9370 1C56                                           u7755 3244  
                                         u7780 492A                                           u8580 112C  
                                         u9380 1C62                                           u7685 3134  
                                         u9550 3824                                           u7790 492C  
                                         u8670 1352                                           u8590 112E  
                                         u7960 3046                                           u9800 2102  
                                         u9625 3A88                                           u9650 3B96  
                                         u8770 140C                                           u9810 212E  
                                         u8940 1844                                           u9665 3B98  
                                         u9907 4998                                           u9771 200C  
                                         u9917 49A2                                           u9791 20D4  
                                         u9857 4488                                           u9867 44A0  
                                         u9877 44B2                                           u9887 44DA  
                                         u9897 426C                                           _TXIE 007CEC  
                                         _TXIF 007CF4  set_pwm_duty_cycle_RC1_LeftMaster@max_duty_val 0097  
                                         _dbuf 018D                                           _atoi 35EC  
                                         _ctoa 469E                                           _main 1FB4  
                                         _keys 1001                                           _prec 0056  
                                         _nout 00F5                                           pad@i 0036  
                                         pad@p 0033                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0038                                           fsr2l 000FD9  
                                         _stoa 386C                                           btemp 0065  
                                ___fpclassifyf 3C84                                           prodh 000FF4  
                                         prodl 000FF3                                           start 000E  
                                __CFG_IESO$OFF 000000                                ___fldiv@new_exp 002C  
                                 _tolower$1770 0027                                  __CFG_MCLRE$ON 000000  
                                 ___param_bank 000000                      __size_of_UART_send_string 00AA  
                                        ??_pad 0035                               ?_I2C_Master_Init 0028  
                   __end_of_DCMotorCenterRight 4AF4                                  ___fltol@sign1 0048  
                              __end_of___aldiv 3E1C                                          ?_atoi 0022  
                                        ?_ctoa 003A                                __end_of___fladd 2B64  
                                        ?_main 0001                                          _CCP1X 007DED  
                              __end_of___fldiv 30F8                                          _CCP1Y 007DEC  
                                        _CCP2X 007DD5                                          _CCP2Y 007DD4  
                              __end_of___awdiv 4390                                __end_of___flneg 4960  
                                        STR_12 1049                                          STR_13 1051  
                                        STR_16 1055                                          STR_18 1055  
                              __end_of___awmod 4482                                __end_of___flmul 2858  
                              __end_of___flsub 4816                                __end_of___fltol 3ED6  
                                        ?_stoa 0028                                __end_of___lldiv 4412  
                              ___awdiv@divisor 001D                                          i2l351 35E0  
                                        i2l349 35DC                                ___awdiv@counter 001F  
                                        _RCREG 000FAE                                   vfpfcnvrt@fmt 00D3  
                                        _SPBRG 000FAF                                          _PORTB 000F81  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TXREG 000FAD                                  __CFG_PWRT$OFF 000000  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                  __CFG_WRT3$OFF 000000  
                                i2___fladd@grs 0010                                __end_of_lcdInst 4AB2  
                               __CFG_EBTR0$OFF 000000                                 __CFG_FCMEN$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                                 main@keypress 016F                                 __CFG_EBTR3$OFF 000000  
                           __size_of_UART_Init 008E                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                              __end_of_initLCD 44F2                                 __CFG_EBTRB$OFF 000000  
                           __size_of_UART_read 0026                                          _flags 0058  
                              ??_DCMotorAllOff 001B                                          _drive 32AE  
                                        _fputc 4022                                          _fputs 489A  
                       __size_of_LCD_write_str 004A                                __end_of_isdigit 4932  
                                        _tickL 0187                                          _tickR 0183  
                                        atoi@n 002F                                          pad@fp 002F  
                                        atoi@s 0022                                          _width 0054  
                                        ctoa@c 003C                                          _putch 4A9A  
                                        ctoa@w 003D                                          main@k 0167  
                              __end_of_isspace 489A                                __end_of_isupper 4902  
                                        tablat 000FF5                               __end_of_PWMSetup 49DC  
                              send_nibble@data 001C                                          plusw1 000FE3  
                                        plusw2 000FDB                                          stoa@i 0034  
                                        stoa@l 003C                                          stoa@p 003A  
                                        stoa@s 002A                                          stoa@w 0036  
                              __end_of_pulse_e 49B4                                          ttemp5 0066  
                                        ttemp6 0069                                          ttemp7 006D  
                                        status 000FD8                                          wtemp8 0066  
                              __end_of_sprintf 45F8                                 ?___fpclassifyf 001B  
                              __end_of_tolower 4786                                __end_of_strncmp 4022  
                           __size_ofi2___fladd 030C                                 __CFG_PBADEN$ON 000000  
                           __size_ofi2___flsub 0046                        __size_of_LCD_set_cursor 004E  
                              __initialization 40C2         _set_pwm_duty_cycle_RC1_LeftMaster$2031 0093  
                                 __end_of_atoi 372C                                   __end_of_ctoa 46EC  
                                 __end_of_main 2504                                   __end_of_keys 1012  
                                 __end_of_stoa 3994                                 __CFG_OSC$HSPLL 000000  
                                       ??_atoi 0024                                         ??_ctoa 003D  
                                       ??_main 0114                                         ??_stoa 002C  
                                __activetblptr 000002          set_pwm_duty_cycle_RC1_LeftMaster@duty 008D  
                                       _ADCON0 000FC2                                         _ADCON1 000FC1  
                                       _ADCON2 000FC0                                         _CCP1M0 007DE8  
                                       _CCP1M1 007DE9                                         _CCP1M2 007DEA  
                                       _CCP1M3 007DEB                                         _CCP2M0 007DD0  
                                       _CCP2M1 007DD1                                         _CCP2M2 007DD2  
                                       ?_drive 0001                                         _CCP2M3 007DD3  
                                 ?_send_nibble 0001                                         ?_fputc 001F  
                                       ?_fputs 0028                                         _CCPR1L 000FBE  
                                       _CCPR2L 000FBB                               ___awdiv@dividend 001B  
                      ??_DCMotorLeftRightFwdON 001B                                         ?_putch 0001  
                                       _INT0IE 007F94                                         _INT0IF 007F91  
                                       _INT1IE 007F83                                         _INT1IF 007F80  
                                       _INT2IE 007F84                                         _INT2IF 007F81  
                                       _CVRCON 000FB5                                         i2l1262 2CA6  
                                       i2l1263 2C84                                         i2l1278 2D78  
                                       i2l1287 2DDE                                         i2l1288 2DDA  
                                       i2l6330 34F8                                         i2l6340 3542  
                                       i2l6324 34B2                                         i2l5704 2BD8  
                                       i2l5810 2D9C                                         i2l5802 2D68  
                                       i2l6354 3596                                         i2l6346 3588  
                                       i2l5820 2DB2                                         i2l5716 2BFC  
                                       i2l5708 2BDC                                         i2l6364 35B4  
                                       i2l5760 2C96                                         i2l5680 2B90  
                                       i2l5826 2DBC                                         i2l5746 2C38  
                                       i2l5860 2E54                                         i2l5684 2B94  
                                       i2l5854 2E4A                                         i2l5846 2E24  
                                       i2l5782 2CEC                                         i2l5774 2CCA  
                                       i2l5758 2C92                                         i2l5784 2CF0  
                                       i2l5792 2D02                                         i2l5858 2E52  
                                vfpfcnvrt@done 00DD                                         _TMR2ON 007E52  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 386C                                 i2___fladd@aexp 000E  
                               i2___fladd@bexp 000F                                 __CFG_XINST$OFF 000000  
                                 vfprintf@cfmt 00F3                              __end_of_UART_Init 4282  
                             __end_of_high_isr 35EC                      __size_of_DCMotorRightBkwd 0008  
                                       ___flge 3BB4                                         ___fleq 4282  
                                    ??___aldiv 0023                                      ??___fladd 003C  
                                _LCD_write_str 4786                                         ___wmul 49DC  
                            __end_of_UART_read 4A28                                      ??___fldiv 0023  
                                    ??___awdiv 001F                                      ??___flneg 001F  
                               __CFG_STVREN$ON 000000                                      ??___awmod 001F  
                                    ??___flmul 003C                                      ??___flsub 004C  
                                    ??___fltol 0044                                      ??___lldiv 0023  
                                       _efgtoa 105A                                         _floorf 30F8  
                                       clear_0 4128                                         clear_1 4134  
                                       clear_2 414A                               ___awdiv@quotient 0021  
                              ___awmod@divisor 001D                                         _moving 018B  
                              ___awmod@counter 001F                                      ??_lcdInst 001E  
                                       pad@buf 0031                                         ctoa@fp 003A  
                             ??_DCMotorLeftFwd 001B                                         _strcpy 45F8  
                                       _strlen 4960                                      ??_initLCD 001F  
                                       fputc@c 001F                                         fputs@c 002C  
                                       fputs@i 002D                                   __pdataCOMRAM 0061  
                                       fputs@s 0028                              __end_ofi2___fladd 2E70  
                                    ??_isdigit 001D                              __end_ofi2___flsub 485C  
                              ___fpclassifyf@e 0023                                ___fpclassifyf@u 0025  
                              ___fpclassifyf@x 001B                                   __mediumconst 0000  
                                    ??_isspace 001D                                         tblptrh 000FF7  
                                    ??_isupper 001D                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 0038  
                                       stoa@fp 0028                               __end_of_vfprintf 45A4  
                                    ??_pulse_e 001B                                      ??_sprintf 004C  
                                    ??_tolower 0023                                _travelDirection 005A  
                                    ??_strncmp 0021                                     ___flge@ff1 0040  
                                   ___flge@ff2 0044                                ??___fpclassifyf 001F  
                                 ___xxtofl@arg 0025                          pulse_e@interruptState 001B  
                                 ___xxtofl@exp 0024                                   ___xxtofl@val 001B  
                                   ___fleq@ff1 001B                                     ___fleq@ff2 001F  
                                   __accesstop 0080                        __end_of__initialization 4150  
                                   ___flneg@f1 001B                                  ___rparam_used 000001  
                                   ___fltol@f1 0040                                 __pcstackCOMRAM 0001  
                               ?_LCD_write_str 001E                                   __pidataBANK0 4AFE  
                                 __pidataBANK1 4AE6                               _UART_send_string 3ED6  
                                __end_of_drive 345E                                  __end_of_fputc 40C2  
                                __end_of_fputs 48D2                                  __end_of_putch 4AA6  
                              _key_was_pressed 018C                                     __end_of_kp 1016  
                                    ?_PWMSetup 0001                       __size_of_DCMotorLeftBkwd 0008  
                               main@lcdDisplay 0155                                        ??_drive 004C  
                     __size_of_DCMotorRightFwd 0008                                        ??_fputc 0023  
                                      ??_fputs 002C                                        ??_putch 001E  
                                   __pbssBANK0 00F5                                     __pbssBANK1 0173  
                                   __pbssBANK2 0200                        __size_of_UART_available 0020  
                               _LCD_set_cursor 46EC               __end_ofPWMSetup@TIMER2_PRESCALER 1017  
                                      ?___flge 0040                                        ?___fleq 001B  
                            PWMSetup@FREQUENCY 101D                                        ?___wmul 001B  
                              UART_send_char@c 001B                                        ?_efgtoa 008D  
                                      ?_floorf 0034                             __size_of_send_byte 0012  
                     ??_DCMotorLeftRightBkwdON 001B                                     ??_PWMSetup 001B  
                                      ?_strcpy 001B                                        ?_strlen 001B  
                                      _T2CKPS0 007E50                                        _T2CKPS1 007E51  
                                   __rx_buffer 0240                                        _INTEDG0 007F8E  
                                      _INTEDG1 007F8D                                      ?___xxtofl 001B  
                               LCD_write_str@i 0021                             __size_of_portSetup 0052  
                           __size_of_vfpfcnvrt 05DC                                     __tx_buffer 0200  
                      __size_of_UART_send_char 001C                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                      ?_high_isr 0001  
                           _DCMotorCenterRight 4AEE                                        _SSPSTAT 000FC7  
                         __size_of_send_nibble 0016                         __end_of_LCD_set_cursor 473A  
                          ?_DCMotorCenterRight 0001                                i2___fladd@signs 000D  
                              ??_LCD_write_str 0020                                        __Hparam 0000  
                    __end_ofPWMSetup@FREQUENCY 1021                                        __Lparam 0000  
                             _DCMotorRightBkwd 4AD6                                        ___aldiv 3D50  
                              __size_of___flge 00D0                                __size_of___fleq 008A  
                                      ___fladd 2858                                        ___fldiv 2E70  
                                      ___awdiv 430C                                        ___flneg 4932  
                                      ___awmod 4412                                        ___flmul 2504  
                                      ___flsub 47D0                                        ___fltol 3E1C  
                                      ___lldiv 4390                                __size_of___wmul 0026  
                                    ?_vfprintf 00ED                                      _CMCONbits 000FB4  
                                 __psmallconst 1000                                __size_of_efgtoa 097E  
                              __size_of_floorf 01B6                                        __pcinit 40C2  
                                      __ramtop 1000                                        _lcdInst 4AA6  
                                      __ptext0 1FB4                                        __ptext1 45A4  
                                      __ptext2 454E                                        __ptext3 19D8  
                                      __ptext4 3F80                                        __ptext5 386C  
                                      __ptext6 105A                                        __ptext7 473A  
                                      __ptext8 48D2                                        __ptext9 45F8  
                            UART_send_string@i 0020                           ??_DCMotorCenterRight 001B  
                              __size_of_strcpy 0054                                __size_of_strlen 002A  
                                      _initLCD 4482                                   __size_of_pad 0096  
                                      _isdigit 4902                                     ??___xxtofl 001F  
                             ___awmod@dividend 001B                               ___aldiv@dividend 001B  
                                      _isspace 485C                                        _isupper 48D2  
                     __size_of_I2C_Master_Init 005C                                        efgtoa@c 0093  
                                      efgtoa@d 00B1                                        efgtoa@e 00C9  
                                      efgtoa@f 008F                                        efgtoa@g 00C5  
                                      efgtoa@h 00BB                                        efgtoa@i 00C3  
                                      efgtoa@l 00BF                                        efgtoa@m 00AD  
                                      efgtoa@n 00CB                                        efgtoa@p 00B5  
                                      efgtoa@t 00A9                                        efgtoa@u 00CD  
                                      efgtoa@w 00B8                                        atoi@neg 0028  
                                      _pulse_e 498A                              ??_DCMotorLeftBkwd 001B  
                                      _sprintf 45A4                                        _tolower 473A  
                                   ??_high_isr 0019                                        _strncmp 3F80  
                               __pintcode_body 345E                           end_of_initialization 4150  
                        __end_of_DCMotorAllOff 4A9A                                        floorf@e 0042  
                                      floorf@m 003E                                        floorf@u 0044  
                                      floorf@x 0034                          __end_of_LCD_SIZE_HORZ 101D  
                            __end_of_send_byte 4A8C                          __end_of_LCD_SIZE_VERT 101C  
               __size_of_DCMotorLeftRightFwdON 000A                  __end_of_DCMotorLeftRightFwdON 4ABC  
                                      fputc@fp 0021                               LCD_write_str@str 001E  
                                __Lmediumconst 0000                                        int_func 345E  
                                      fputs@fp 002A                                ?_LCD_set_cursor 001F  
                            ??_DCMotorRightFwd 001B                                ___lldiv@divisor 001F  
                              ___lldiv@counter 0027                              __end_of_portSetup 469E  
                            __end_of_vfpfcnvrt 1FB4                                     efgtoa@mode 00BA  
                                   efgtoa@sign 00B3                                      _RCSTAbits 000FAB  
                             ___aldiv@quotient 0025      __end_of_set_pwm_duty_cycle_RC1_LeftMaster 3BB4  
   __size_of_set_pwm_duty_cycle_RC1_LeftMaster 0110            ??_set_pwm_duty_cycle_RC1_LeftMaster 0091  
           ?_set_pwm_duty_cycle_RC1_LeftMaster 008D              _set_pwm_duty_cycle_RC1_LeftMaster 3AA4  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                   _slavePower 0061                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                                   ??_vfprintf 004C                       PWMSetup@TIMER2_PRESCALER 1016  
                                      strcpy@d 0023                                        strlen@a 001D  
                                      strcpy@s 0021                                        strlen@s 001B  
                                    _UART_Init 41F4                                __rx_buffer_head 0060  
                                    _UART_read 4A02                __size_of_DCMotorLeftRightBkwdON 000A  
                                    _PORTDbits 000F83                                __rx_buffer_tail 005F  
                                  ___fladd@grs 0043                                  ___xxtofl@sign 0023  
                                    _TRISCbits 000F94                                    ___fldiv@grs 002E  
                                  ___fldiv@rem 0027                                      i2___fladd 2B64  
                                    i2___flsub 4816                       __end_of_UART_send_string 3F80  
                                  ___flmul@grs 0082                                 _UART_available 4A28  
                                   main@buffer 0132                                      _TXSTAbits 000FAC  
                                send_byte@data 001D         _set_pwm_duty_cycle_RC2_RightSlave$2030 0093  
                               __end_of___flge 3C84                                 __end_of___fleq 430C  
                                  vfpfcnvrt@ap 00D5                                    vfpfcnvrt@cp 00DB  
                                  vfpfcnvrt@ct 00E9                                    vfpfcnvrt@fp 00D1  
                               __end_of___wmul 4A02                                     ?_UART_Init 0001  
                                __pidataCOMRAM 4AFA                                     drive@error 009B  
                               __end_of_efgtoa 19D8                                 __end_of_floorf 32AE  
                                   ?_UART_read 0001          set_pwm_duty_cycle_RC2_RightSlave@duty 008D  
                                   floorf@F524 0173                                 __end_of_strcpy 464C  
                               __end_of_strlen 498A                            start_initialization 40C2  
                            __size_of_PWMSetup 0028                                 _UART_send_char 4A48  
                                  __end_of_pad 41F4                                     ?i2___fladd 0001  
                                   ?i2___flsub 0011                         __end_of_UART_available 4A48  
                            LCD_set_cursor@row 001F      __end_of_set_pwm_duty_cycle_RC2_RightSlave 3AA4  
   __size_of_set_pwm_duty_cycle_RC2_RightSlave 0110            ??_set_pwm_duty_cycle_RC2_RightSlave 0091  
           ?_set_pwm_duty_cycle_RC2_RightSlave 008D              _set_pwm_duty_cycle_RC2_RightSlave 3994  
                       _DCMotorLeftRightBkwdON 4ABC                              ??_I2C_Master_Init 002C  
                        __end_of___fpclassifyf 3D50                                  _sideTurnedOff 00F7  
                                  vfprintf@fmt 00EF                                       ??___flge 0048  
                                     ??___fleq 0023                                       ??___wmul 001F  
                         LCD_set_cursor@column 0021                                       ??_efgtoa 0094  
                     I2C_Master_Init@clockFreq 0028                                    __pdataBANK0 00F9  
                                  __pdataBANK1 01DD                                       ??_floorf 0038  
                             __CFG_LPT1OSC$OFF 000000                                       ??_strcpy 001F  
                                     ??_strlen 001D                                      ___fladd@a 0038  
                                    ___fladd@b 0034                         __end_of_UART_send_char 4A64  
                                    ___fldiv@a 001F                                      ___fldiv@b 001B  
                                    ___flmul@a 0038                                      ___flmul@b 0034  
                                  __pbssCOMRAM 004C                                      ___flsub@a 0048  
                                    ___flsub@b 0044                                  __pcstackBANK0 0080  
                                __pcstackBANK1 0100                       __end_of_DCMotorRightBkwd 4ADE  
                            __size_of___xxtofl 0140                                ?_UART_available 001B  
                      __size_of_DCMotorLeftFwd 0008                                  _tickRightTemp 004C  
                            __size_of_high_isr 35E4                                      _atoi$1660 002A  
                                    _atoi$1661 002E                                      _atoi$1662 002C  
                                  _efgtoa$1151 00A1                                    _efgtoa$1146 009D  
                                  _efgtoa$1155 00A3                                    _efgtoa$1147 009F  
                                  _efgtoa$1156 00A5                                    _efgtoa$1157 00A7  
                            __CFG_CCP2MX$PORTC 000000                                      __pintcode 0008  
                                     ?___aldiv 001B                                       ?___fladd 0034  
                                     ?___fldiv 001B                                       ?___awdiv 001B  
                                     ?___flneg 001B                                       ?___awmod 001B  
                                     ?___flmul 0034                                       ?___flsub 0044  
                                     ?___fltol 0040                                       ?___lldiv 001B  
                                  ??_UART_Init 0029                                _DCMotorLeftBkwd 4ADE  
                          main@commandReceived 0170                                       ?_lcdInst 0001  
                                  ??_UART_read 001B                                      _distanceL 017F  
                                    _distanceR 017B                              _DCMotorCenterLeft 4AF4  
                            __size_of_vfprintf 0056                                       ?_initLCD 0001  
                                  __smallconst 1000                                ?_UART_send_char 0001  
                                     ?_isdigit 001B                             ?_DCMotorCenterLeft 0001  
                                     ?_isspace 001B                                       ?_isupper 001B  
                              _DCMotorRightFwd 4AC6                          main@uart_char_to_send 0119  
                                ??_send_nibble 001C                                       ?_pulse_e 0001  
                                  ??i2___fladd 0009                               ??_LCD_set_cursor 0023  
                                     ?_sprintf 0100                                       ?_tolower 0021  
                               __size_of_drive 01B0                                    ??i2___flsub 0019  
                               __size_of_fputc 00A0                                 __size_of_fputs 0038  
                                     ?_strncmp 001B      set_pwm_duty_cycle_RC1_LeftMaster@duty_val 0099  
                          ??_DCMotorCenterLeft 001B                                 __size_of_putch 000C  
                              ___aldiv@divisor 001F                                ___aldiv@counter 0023  
                               ___wmul@product 001F                                       _LATAbits 000F89  
                                     _LATDbits 000F8C                                       _PIE1bits 000F9D  
                                   UART_read@c 001B                                      _send_byte 4A7A  
                               _LCD_LINE1_ADDR 101A                                 _LCD_LINE2_ADDR 1019  
                               _LCD_LINE3_ADDR 1018                                 _LCD_LINE4_ADDR 1017  
                                     i2u641_40 2CAE                                       i2u636_40 2C5A  
                                     i2u637_40 2C6A                                       i2u662_40 2E30  
                                     i2u654_40 2DC0                                       i2u638_40 2C6C  
                                     i2u656_40 2DD4                          __end_of_LCD_write_str 47D0  
                             __CFG_WDTPS$32768 000000                              UART_Init@baudRate 002D  
                    __end_of_DCMotorCenterLeft 4AFA                                      _portSetup 464C  
                                    _vfpfcnvrt 19D8                                     _ADCON2bits 000FC0  
                            ___wmul@multiplier 001B                                       _PWMSetup 49B4  
                              __tx_buffer_head 005E                                __tx_buffer_tail 005D  
                  __size_of_DCMotorCenterRight 0006                                      main@index 0171  
                                 _isspace$1691 0021                                     vfpfcnvrt@c 00EC  
                                   vfpfcnvrt@f 00E5                                      copy_data0 40D6  
                                    copy_data1 40F6                                      copy_data2 4116  
                          _correctingDirection 005C                              ?_UART_send_string 001C  
                       __end_of_LCD_LINE1_ADDR 101B                             ??_UART_send_string 001E  
                       __end_of_LCD_LINE2_ADDR 101A                         __end_of_LCD_LINE3_ADDR 1019  
                       __end_of_LCD_LINE4_ADDR 1018                            __end_of_send_nibble 4A7A  
                        _DCMotorLeftRightFwdON 4AB2                                     ?_send_byte 0001  
                                     __Hrparam 0000                        __end_of_DCMotorLeftBkwd 4AE6  
                                   vfprintf@ap 00F1                                       __Lrparam 0000  
                                   vfprintf@fp 00ED                             __CFG_BOREN$SBORDIS 000000  
                                 _tickLeftTemp 0050                               __size_of___aldiv 00CC  
                             __size_of___fladd 030C                               __size_of___fldiv 0288  
                             __size_of___awdiv 0084                                     ?_portSetup 0001  
                             __size_of___flneg 002E                               __size_of___awmod 0070  
                             __size_of___flmul 0354                               __size_of___flsub 0046  
                             __size_of___fltol 00BA                               __size_of___lldiv 0082  
                                   ?_vfpfcnvrt 00D1                         __size_of_DCMotorAllOff 000E  
                      __end_of_DCMotorRightFwd 4ACE                             ___fpclassifyf@F463 0177  
                             __size_of_lcdInst 000C                                     sprintf@fmt 0102  
                              _I2C_Master_Init 44F2                               __size_of_initLCD 0070  
                                     ___xxtofl 372C                               __size_of_isdigit 0030  
                                  _masterPower 00F9                               __size_of_isspace 003E  
                                     __ptext10 30F8                                       __ptext11 3C84  
                                     __ptext20 489A                                       __ptext12 47D0  
                                     __ptext21 4022                                       __ptext13 4932  
                                     __ptext30 3994                                       __ptext22 4A9A  
                                     __ptext14 4282                                       __ptext31 3AA4  
                                     __ptext23 35EC                                       __ptext15 4412  
                                     __ptext40 4A02                                       __ptext32 372C  
                                     __ptext24 485C                                       __ptext16 430C  
                                     __ptext41 4A28                                       __ptext33 3E1C  
                                     __ptext25 4902                                       __ptext17 469E  
                                     __ptext50 498A                                       __ptext42 41F4  
                                     __ptext34 2504                                       __ptext26 49DC  
                                     __ptext18 415E                                       __ptext51 44F2  
                                     __ptext43 3D50                                       __ptext35 3BB4  
                                     __ptext27 464C                                       __ptext19 4960  
                                     __ptext60 4AF4                                       __ptext52 4390  
                                     __ptext44 49B4                                       __ptext36 2E70  
                                     __ptext28 4482                                       __ptext61 4A8C  
                                     __ptext53 4AB2                                       __ptext45 4786  
                                     __ptext37 2858                                       __ptext29 32AE  
                                     __ptext54 4AC6                                       __ptext46 46EC  
                                     __ptext38 3ED6                                       __ptext63 4816  
                                     __ptext55 4ACE                                       __ptext47 4AA6  
                                     __ptext39 4A48                                       __ptext64 2B64  
                                     __ptext56 4ABC                                       __ptext48 4A7A  
                                     __ptext57 4AD6                                       __ptext49 4A64  
                                     __ptext58 4ADE                                       __ptext59 4AEE  
                             __size_of_isupper 0030                        ?_DCMotorLeftRightBkwdON 0001  
                               _DCMotorLeftFwd 4ACE                                       _high_isr 0008  
                             __size_of_pulse_e 002A                               __size_of_sprintf 0054  
                             __size_of_tolower 004C                                     strcpy@dest 001B  
                             __size_of_strncmp 00A2                                  __size_of_atoi 0140  
                                __size_of_ctoa 004E                                  __size_of_main 0550  
                                __size_of_stoa 0128                                       efgtoa@fp 008D  
                                     efgtoa@ne 00AF                                       efgtoa@pp 00AB  
                                     efgtoa@ou 0099                                      stoa@F1158 01DD  
                                     int$flags 0065                                       _vfprintf 454E  
                   __size_of_DCMotorCenterLeft 0006                                      putch@data 001E  
                               _vfpfcnvrt$1182 00DF                                 _vfpfcnvrt$1183 00E1  
                               _vfpfcnvrt$1188 00E3                                     _INTCONbits 000FF2  
                             ??_UART_available 001D                 __end_of_DCMotorLeftRightBkwdON 4AC6  
                       __end_of_DCMotorLeftFwd 4AD6                                       isdigit@c 001B  
                            ?_DCMotorRightBkwd 0001                                    _send_nibble 4A64  
                                     intlevel2 0000                                      sprintf@ap 010C  
                           ??_DCMotorRightBkwd 001B                                  _DCMotorAllOff 4A8C  
                                _LCD_SIZE_HORZ 101C                                  _LCD_SIZE_VERT 101B  
                                     isspace@c 001B                               ___lldiv@dividend 001B  
                       ?_DCMotorLeftRightFwdON 0001                                      strcpy@src 001D  
                                  ??_send_byte 001D                                       isupper@c 001B  
                                    strncmp@_l 001B                                      strncmp@_r 001D  
                             ?_DCMotorLeftBkwd 0001                                    efgtoa@nmode 00B7  
                             ??_UART_send_char 001B                                    ??_portSetup 001B  
                      __end_of_I2C_Master_Init 454E                                    ??_vfpfcnvrt 00D7  
                                  lcdInst@data 001E                                       stoa@nuls 002D  
                             ?_DCMotorRightFwd 0001                                       sprintf@f 010E  
                                     tolower@c 0021                                       sprintf@s 0100  
                       __size_of___fpclassifyf 00CC                               ___lldiv@quotient 0023  
                                     strncmp@l 0022                                       strncmp@n 001F  
                                     strncmp@r 0024                                   ___aldiv@sign 0024  
                              ?_DCMotorLeftFwd 0001                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0040  
                               ?_DCMotorAllOff 0001                                   ___fladd@aexp 0041  
                                 ___fladd@bexp 0042  
