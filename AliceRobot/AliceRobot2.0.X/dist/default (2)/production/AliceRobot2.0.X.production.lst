

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Mar 08 20:42:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73  0000                     
    74                           ; Version 2.05
    75                           ; Generated 20/12/2018 GMT
    76                           ; 
    77                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4620 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataCOMRAM
   110  003602                     __pidataCOMRAM:
   111                           	opt callstack 0
   112                           
   113                           ;initializer for stoa@F1136
   114  003602  28                 	db	40
   115  003603  6E                 	db	110
   116  003604  75                 	db	117
   117  003605  6C                 	db	108
   118  003606  6C                 	db	108
   119  003607  29                 	db	41
   120  003608  00                 	db	0
   121                           
   122                           	psect	smallconst
   123  001000                     __psmallconst:
   124                           	opt callstack 0
   125  001000  00                 	db	0
   126  001001                     _keys:
   127                           	opt callstack 0
   128  001001  31                 	db	49
   129  001002  32                 	db	50
   130  001003  33                 	db	51
   131  001004  41                 	db	65
   132  001005  34                 	db	52
   133  001006  35                 	db	53
   134  001007  36                 	db	54
   135  001008  42                 	db	66
   136  001009  37                 	db	55
   137  00100A  38                 	db	56
   138  00100B  39                 	db	57
   139  00100C  43                 	db	67
   140  00100D  2A                 	db	42
   141  00100E  30                 	db	48
   142  00100F  23                 	db	35
   143  001010  44                 	db	68
   144  001011  00                 	db	0
   145  001012                     __end_of_keys:
   146                           	opt callstack 0
   147  001012  50                 	db	80
   148  001013                     __end_of_LCD_LINE4_ADDR:
   149                           	opt callstack 0
   150  001013  10                 	db	16
   151  001014                     __end_of_LCD_LINE3_ADDR:
   152                           	opt callstack 0
   153  001014  40                 	db	64
   154  001015                     __end_of_LCD_LINE2_ADDR:
   155                           	opt callstack 0
   156  001015                     _LCD_LINE1_ADDR:
   157                           	opt callstack 0
   158  001015  00                 	db	0
   159  001016                     __end_of_LCD_LINE1_ADDR:
   160                           	opt callstack 0
   161  001016                     _LCD_SIZE_VERT:
   162                           	opt callstack 0
   163  001016  04                 	db	4
   164  001017                     __end_of_LCD_SIZE_VERT:
   165                           	opt callstack 0
   166  001017                     _LCD_SIZE_HORZ:
   167                           	opt callstack 0
   168  001017  10                 	db	16
   169  001018                     __end_of_LCD_SIZE_HORZ:
   170                           	opt callstack 0
   171  0000                     _LATAbits	set	3977
   172  0000                     _PIE1bits	set	3997
   173  0000                     _RCSTAbits	set	4011
   174  0000                     _TXSTAbits	set	4012
   175  0000                     _SPBRG	set	4015
   176  0000                     _ADCON2	set	4032
   177  0000                     _CMCONbits	set	4020
   178  0000                     _CVRCON	set	4021
   179  0000                     _ADCON2bits	set	4032
   180  0000                     _ADCON1	set	4033
   181  0000                     _ADCON0	set	4034
   182  0000                     _TRISD	set	3989
   183  0000                     _TRISC	set	3988
   184  0000                     _TRISB	set	3987
   185  0000                     _TRISA	set	3986
   186  0000                     _LATE	set	3981
   187  0000                     _LATC	set	3979
   188  0000                     _LATB	set	3978
   189  0000                     _LATA	set	3977
   190  0000                     _TXREG	set	4013
   191  0000                     _RCREG	set	4014
   192  0000                     _PORTDbits	set	3971
   193  0000                     _PORTB	set	3969
   194  0000                     _LATD	set	3980
   195  0000                     _LATDbits	set	3980
   196  0000                     _INTCONbits	set	4082
   197  0000                     _SSPBUF	set	4041
   198  0000                     _SSPCON2bits	set	4037
   199  0000                     _SSPCON1	set	4038
   200  0000                     _SSPADD	set	4040
   201  0000                     _TRISCbits	set	3988
   202  0000                     _SSPCON1bits	set	4038
   203  0000                     _SSPCON2	set	4037
   204  0000                     _SSPSTAT	set	4039
   205  0000                     _INTEDG1	set	32653
   206  0000                     _INTEDG0	set	32654
   207  0000                     _TXIF	set	31988
   208  0000                     _TXIE	set	31980
   209  0000                     _RCIF	set	31989
   210  0000                     _RCIE	set	31981
   211  0000                     _INT1IE	set	32643
   212  0000                     _INT1IF	set	32640
   213  0000                     _INT2IF	set	32641
   214  0000                     _INT2IE	set	32644
   215  0000                     _INT0IF	set	32657
   216  0000                     _INT0IE	set	32660
   217  001018                     STR_1:
   218  001018  49                 	db	73	;'I'
   219  001019  6E                 	db	110	;'n'
   220  00101A  69                 	db	105	;'i'
   221  00101B  74                 	db	116	;'t'
   222  00101C  20                 	db	32
   223  00101D  63                 	db	99	;'c'
   224  00101E  6F                 	db	111	;'o'
   225  00101F  6D                 	db	109	;'m'
   226  001020  70                 	db	112	;'p'
   227  001021  6C                 	db	108	;'l'
   228  001022  65                 	db	101	;'e'
   229  001023  74                 	db	116	;'t'
   230  001024  65                 	db	101	;'e'
   231  001025  0A                 	db	10
   232  001026  00                 	db	0
   233  001027                     STR_6:
   234  001027  25                 	db	37
   235  001028  63                 	db	99	;'c'
   236  001029  25                 	db	37
   237  00102A  63                 	db	99	;'c'
   238  00102B  0A                 	db	10
   239  00102C  00                 	db	0
   240  00102D                     STR_2:
   241  00102D  25                 	db	37
   242  00102E  2E                 	db	46
   243  00102F  2A                 	db	42
   244  001030  73                 	db	115	;'s'
   245  001031  00                 	db	0
   246  0000                     
   247                           ; #config settings
   248  001032  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           	psect	cinit
   251  0030EE                     __pcinit:
   252                           	opt callstack 0
   253  0030EE                     start_initialization:
   254                           	opt callstack 0
   255  0030EE                     __initialization:
   256                           	opt callstack 0
   257                           
   258                           ; Initialize objects allocated to COMRAM (7 bytes)
   259                           ; load TBLPTR registers with __pidataCOMRAM
   260  0030EE  0E02               	movlw	low __pidataCOMRAM
   261  0030F0  6EF6               	movwf	tblptrl,c
   262  0030F2  0E36               	movlw	high __pidataCOMRAM
   263  0030F4  6EF7               	movwf	tblptrh,c
   264  0030F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   265  0030F8  6EF8               	movwf	tblptru,c
   266  0030FA  EE00  F05E         	lfsr	0,__pdataCOMRAM
   267  0030FE  EE10 F007          	lfsr	1,7
   268  003102                     copy_data0:
   269  003102  0009               	tblrd		*+
   270  003104  CFF5 FFEE          	movff	tablat,postinc0
   271  003108  50E5               	movf	postdec1,w,c
   272  00310A  50E1               	movf	fsr1l,w,c
   273  00310C  E1FA               	bnz	copy_data0
   274                           
   275                           ; Clear objects allocated to BANK1 (160 bytes)
   276  00310E  EE01  F000         	lfsr	0,__pbssBANK1
   277  003112  0EA0               	movlw	160
   278  003114                     clear_0:
   279  003114  6AEE               	clrf	postinc0,c
   280  003116  06E8               	decf	wreg,f,c
   281  003118  E1FD               	bnz	clear_0
   282                           
   283                           ; Clear objects allocated to BANK0 (21 bytes)
   284  00311A  EE00  F0E7         	lfsr	0,__pbssBANK0
   285  00311E  0E15               	movlw	21
   286  003120                     clear_1:
   287  003120  6AEE               	clrf	postinc0,c
   288  003122  06E8               	decf	wreg,f,c
   289  003124  E1FD               	bnz	clear_1
   290                           
   291                           ; Clear objects allocated to COMRAM (12 bytes)
   292  003126  EE00  F052         	lfsr	0,__pbssCOMRAM
   293  00312A  0E0C               	movlw	12
   294  00312C                     clear_2:
   295  00312C  6AEE               	clrf	postinc0,c
   296  00312E  06E8               	decf	wreg,f,c
   297  003130  E1FD               	bnz	clear_2
   298  003132                     end_of_initialization:
   299                           	opt callstack 0
   300  003132                     __end_of__initialization:
   301                           	opt callstack 0
   302  003132  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   303  003134  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   304  003136  0E00               	movlw	low (__Lmediumconst shr (0+16))
   305  003138  6EF8               	movwf	tblptru,c
   306  00313A  0100               	movlb	0
   307  00313C  EF1A  F008         	goto	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMRAM
   310  000052                     __pbssCOMRAM:
   311                           	opt callstack 0
   312  000052                     _nout:
   313                           	opt callstack 0
   314  000052                     	ds	2
   315  000054                     _width:
   316                           	opt callstack 0
   317  000054                     	ds	2
   318  000056                     _prec:
   319                           	opt callstack 0
   320  000056                     	ds	2
   321  000058                     _flags:
   322                           	opt callstack 0
   323  000058                     	ds	2
   324  00005A                     __tx_buffer_tail:
   325                           	opt callstack 0
   326  00005A                     	ds	1
   327  00005B                     __tx_buffer_head:
   328                           	opt callstack 0
   329  00005B                     	ds	1
   330  00005C                     __rx_buffer_tail:
   331                           	opt callstack 0
   332  00005C                     	ds	1
   333  00005D                     __rx_buffer_head:
   334                           	opt callstack 0
   335  00005D                     	ds	1
   336                           
   337                           	psect	dataCOMRAM
   338  00005E                     __pdataCOMRAM:
   339                           	opt callstack 0
   340  00005E                     stoa@F1136:
   341                           	opt callstack 0
   342  00005E                     	ds	7
   343                           
   344                           	psect	bssBANK0
   345  0000E7                     __pbssBANK0:
   346                           	opt callstack 0
   347  0000E7                     _distanceR:
   348                           	opt callstack 0
   349  0000E7                     	ds	4
   350  0000EB                     _distanceL:
   351                           	opt callstack 0
   352  0000EB                     	ds	4
   353  0000EF                     _tickR:
   354                           	opt callstack 0
   355  0000EF                     	ds	4
   356  0000F3                     _tickL:
   357                           	opt callstack 0
   358  0000F3                     	ds	4
   359  0000F7                     _sideTurnedOff:
   360                           	opt callstack 0
   361  0000F7                     	ds	2
   362  0000F9                     _travelDirection:
   363                           	opt callstack 0
   364  0000F9                     	ds	2
   365  0000FB                     _key_was_pressed:
   366                           	opt callstack 0
   367  0000FB                     	ds	1
   368                           
   369                           	psect	bssBANK1
   370  000100                     __pbssBANK1:
   371                           	opt callstack 0
   372  000100                     __tx_buffer:
   373                           	opt callstack 0
   374  000100                     	ds	64
   375  000140                     __rx_buffer:
   376                           	opt callstack 0
   377  000140                     	ds	64
   378  000180                     _dbuf:
   379                           	opt callstack 0
   380  000180                     	ds	32
   381                           
   382                           	psect	cstackBANK0
   383  000080                     __pcstackBANK0:
   384                           	opt callstack 0
   385  000080                     ?_vfprintf:
   386                           	opt callstack 0
   387  000080                     vfprintf@fp:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x0
   391  000080                     	ds	2
   392  000082                     vfprintf@fmt:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x2
   396  000082                     	ds	2
   397  000084                     vfprintf@ap:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x4
   401  000084                     	ds	2
   402  000086                     ?_sprintf:
   403                           	opt callstack 0
   404  000086                     sprintf@s:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x6
   408  000086                     	ds	2
   409  000088                     sprintf@fmt:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x8
   413  000088                     	ds	8
   414  000090                     sprintf@ap:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x10
   418  000090                     	ds	2
   419  000092                     sprintf@f:
   420                           	opt callstack 0
   421                           
   422                           ; 6 bytes @ 0x12
   423  000092                     	ds	6
   424  000098                     ??_main:
   425                           
   426                           ; 1 bytes @ 0x18
   427  000098                     	ds	5
   428  00009D                     main@uart_char_to_send:
   429                           	opt callstack 0
   430                           
   431                           ; 25 bytes @ 0x1D
   432  00009D                     	ds	25
   433  0000B6                     main@command:
   434                           	opt callstack 0
   435                           
   436                           ; 25 bytes @ 0x36
   437  0000B6                     	ds	25
   438  0000CF                     main@lcdDisplay:
   439                           	opt callstack 0
   440                           
   441                           ; 16 bytes @ 0x4F
   442  0000CF                     	ds	18
   443  0000E1                     main@keypress:
   444                           	opt callstack 0
   445                           
   446                           ; 1 bytes @ 0x61
   447  0000E1                     	ds	1
   448  0000E2                     main@commandReceived:
   449                           	opt callstack 0
   450                           
   451                           ; 1 bytes @ 0x62
   452  0000E2                     	ds	1
   453  0000E3                     main@moving:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x63
   457  0000E3                     	ds	1
   458  0000E4                     main@index:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x64
   462  0000E4                     	ds	2
   463  0000E6                     main@correctingDirection:
   464                           	opt callstack 0
   465                           
   466                           ; 1 bytes @ 0x66
   467  0000E6                     	ds	1
   468                           
   469                           	psect	cstackCOMRAM
   470  000001                     __pcstackCOMRAM:
   471                           	opt callstack 0
   472  000001                     ?i2___fladd:
   473                           	opt callstack 0
   474  000001                     i2___fladd@b:
   475                           	opt callstack 0
   476                           
   477                           ; 4 bytes @ 0x0
   478  000001                     	ds	4
   479  000005                     i2___fladd@a:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x4
   483  000005                     	ds	4
   484  000009                     ??i2___fladd:
   485                           
   486                           ; 1 bytes @ 0x8
   487  000009                     	ds	4
   488  00000D                     i2___fladd@signs:
   489                           	opt callstack 0
   490                           
   491                           ; 1 bytes @ 0xC
   492  00000D                     	ds	1
   493  00000E                     i2___fladd@aexp:
   494                           	opt callstack 0
   495                           
   496                           ; 1 bytes @ 0xD
   497  00000E                     	ds	1
   498  00000F                     i2___fladd@bexp:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0xE
   502  00000F                     	ds	1
   503  000010                     i2___fladd@grs:
   504                           	opt callstack 0
   505                           
   506                           ; 1 bytes @ 0xF
   507  000010                     	ds	1
   508  000011                     ?i2___flsub:
   509                           	opt callstack 0
   510  000011                     i2___flsub@b:
   511                           	opt callstack 0
   512                           
   513                           ; 4 bytes @ 0x10
   514  000011                     	ds	4
   515  000015                     i2___flsub@a:
   516                           	opt callstack 0
   517                           
   518                           ; 4 bytes @ 0x14
   519  000015                     	ds	4
   520  000019                     ??_high_isr:
   521  000019                     
   522                           ; 1 bytes @ 0x18
   523  000019                     	ds	2
   524  00001B                     ??_I2C_Master_Wait:
   525  00001B                     ?_UART_available:
   526                           	opt callstack 0
   527  00001B                     ?_strlen:
   528                           	opt callstack 0
   529  00001B                     ?_isdigit:
   530                           	opt callstack 0
   531  00001B                     ?_isspace:
   532                           	opt callstack 0
   533  00001B                     ?___wmul:
   534                           	opt callstack 0
   535  00001B                     ?___fladd:
   536                           	opt callstack 0
   537  00001B                     ?___fldiv:
   538                           	opt callstack 0
   539  00001B                     ?___lldiv:
   540                           	opt callstack 0
   541  00001B                     ?___aldiv:
   542                           	opt callstack 0
   543  00001B                     pulse_e@interruptState:
   544                           	opt callstack 0
   545  00001B                     UART_send_char@c:
   546                           	opt callstack 0
   547  00001B                     UART_read@c:
   548                           	opt callstack 0
   549  00001B                     ___wmul@multiplier:
   550                           	opt callstack 0
   551  00001B                     isdigit@c:
   552                           	opt callstack 0
   553  00001B                     isspace@c:
   554                           	opt callstack 0
   555  00001B                     strlen@s:
   556                           	opt callstack 0
   557  00001B                     ___lldiv@dividend:
   558                           	opt callstack 0
   559  00001B                     ___aldiv@dividend:
   560                           	opt callstack 0
   561  00001B                     ___fladd@b:
   562                           	opt callstack 0
   563  00001B                     ___fldiv@b:
   564                           	opt callstack 0
   565                           
   566                           ; 4 bytes @ 0x1A
   567  00001B                     	ds	1
   568  00001C                     send_nibble@data:
   569                           	opt callstack 0
   570  00001C                     I2C_Master_Write@byteToWrite:
   571                           	opt callstack 0
   572  00001C                     UART_send_string@message:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x1B
   576  00001C                     	ds	1
   577  00001D                     ??_UART_available:
   578  00001D                     ??_isdigit:
   579  00001D                     ??_isspace:
   580  00001D                     send_byte@data:
   581                           	opt callstack 0
   582  00001D                     ___wmul@multiplicand:
   583                           	opt callstack 0
   584  00001D                     strlen@a:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x1C
   588  00001D                     	ds	1
   589  00001E                     ??_UART_send_string:
   590  00001E                     lcdInst@data:
   591                           	opt callstack 0
   592  00001E                     putch@data:
   593                           	opt callstack 0
   594  00001E                     LCD_write_str@str:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x1D
   598  00001E                     	ds	1
   599  00001F                     ??_initLCD:
   600  00001F                     LCD_set_cursor@row:
   601                           	opt callstack 0
   602  00001F                     ___wmul@product:
   603                           	opt callstack 0
   604  00001F                     fputc@c:
   605                           	opt callstack 0
   606  00001F                     ___lldiv@divisor:
   607                           	opt callstack 0
   608  00001F                     ___aldiv@divisor:
   609                           	opt callstack 0
   610  00001F                     ___fladd@a:
   611                           	opt callstack 0
   612  00001F                     ___fldiv@a:
   613                           	opt callstack 0
   614                           
   615                           ; 4 bytes @ 0x1E
   616  00001F                     	ds	1
   617  000020                     UART_send_string@i:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x1F
   621  000020                     	ds	1
   622  000021                     _isspace$1496:
   623                           	opt callstack 0
   624  000021                     LCD_set_cursor@column:
   625                           	opt callstack 0
   626  000021                     LCD_write_str@i:
   627                           	opt callstack 0
   628  000021                     fputc@fp:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x20
   632  000021                     	ds	1
   633  000022                     ?_atoi:
   634                           	opt callstack 0
   635  000022                     atoi@s:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x21
   639  000022                     	ds	1
   640  000023                     ??_fputc:
   641  000023                     ??___fladd:
   642  000023                     ??___fldiv:
   643  000023                     ___aldiv@counter:
   644                           	opt callstack 0
   645  000023                     ___lldiv@quotient:
   646                           	opt callstack 0
   647                           
   648                           ; 4 bytes @ 0x22
   649  000023                     	ds	1
   650  000024                     ??_atoi:
   651  000024                     ___aldiv@sign:
   652                           	opt callstack 0
   653                           
   654                           ; 1 bytes @ 0x23
   655  000024                     	ds	1
   656  000025                     ___aldiv@quotient:
   657                           	opt callstack 0
   658                           
   659                           ; 4 bytes @ 0x24
   660  000025                     	ds	2
   661  000027                     ___lldiv@counter:
   662                           	opt callstack 0
   663  000027                     ___fladd@signs:
   664                           	opt callstack 0
   665  000027                     ___fldiv@rem:
   666                           	opt callstack 0
   667                           
   668                           ; 4 bytes @ 0x26
   669  000027                     	ds	1
   670  000028                     ?_stoa:
   671                           	opt callstack 0
   672  000028                     ___fladd@aexp:
   673                           	opt callstack 0
   674  000028                     stoa@fp:
   675                           	opt callstack 0
   676  000028                     atoi@neg:
   677                           	opt callstack 0
   678  000028                     fputs@s:
   679                           	opt callstack 0
   680  000028                     I2C_Master_Init@clockFreq:
   681                           	opt callstack 0
   682                           
   683                           ; 4 bytes @ 0x27
   684  000028                     	ds	1
   685  000029                     ??_UART_Init:
   686  000029                     ___fladd@bexp:
   687                           	opt callstack 0
   688                           
   689                           ; 1 bytes @ 0x28
   690  000029                     	ds	1
   691  00002A                     ___fladd@grs:
   692                           	opt callstack 0
   693  00002A                     stoa@s:
   694                           	opt callstack 0
   695  00002A                     _atoi$1478:
   696                           	opt callstack 0
   697  00002A                     fputs@fp:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x29
   701  00002A                     	ds	1
   702  00002B                     ?___flsub:
   703                           	opt callstack 0
   704  00002B                     ___fldiv@sign:
   705                           	opt callstack 0
   706  00002B                     ___flsub@b:
   707                           	opt callstack 0
   708                           
   709                           ; 4 bytes @ 0x2A
   710  00002B                     	ds	1
   711  00002C                     ??_I2C_Master_Init:
   712  00002C                     ??_stoa:
   713  00002C                     fputs@c:
   714                           	opt callstack 0
   715  00002C                     ___fldiv@new_exp:
   716                           	opt callstack 0
   717  00002C                     _atoi$1480:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x2B
   721  00002C                     	ds	1
   722  00002D                     fputs@i:
   723                           	opt callstack 0
   724  00002D                     UART_Init@baudRate:
   725                           	opt callstack 0
   726  00002D                     stoa@nuls:
   727                           	opt callstack 0
   728                           
   729                           ; 7 bytes @ 0x2C
   730  00002D                     	ds	1
   731  00002E                     _atoi$1479:
   732                           	opt callstack 0
   733  00002E                     ___fldiv@grs:
   734                           	opt callstack 0
   735                           
   736                           ; 4 bytes @ 0x2D
   737  00002E                     	ds	1
   738  00002F                     ?_pad:
   739                           	opt callstack 0
   740  00002F                     pad@fp:
   741                           	opt callstack 0
   742  00002F                     atoi@n:
   743                           	opt callstack 0
   744  00002F                     ___flsub@a:
   745                           	opt callstack 0
   746                           
   747                           ; 4 bytes @ 0x2E
   748  00002F                     	ds	2
   749  000031                     pad@buf:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x30
   753  000031                     	ds	1
   754  000032                     ___fldiv@bexp:
   755                           	opt callstack 0
   756                           
   757                           ; 1 bytes @ 0x31
   758  000032                     	ds	1
   759  000033                     ___fldiv@aexp:
   760                           	opt callstack 0
   761  000033                     pad@p:
   762                           	opt callstack 0
   763  000033                     ___flge@ff1:
   764                           	opt callstack 0
   765                           
   766                           ; 4 bytes @ 0x32
   767  000033                     	ds	1
   768  000034                     ?___flmul:
   769                           	opt callstack 0
   770  000034                     stoa@i:
   771                           	opt callstack 0
   772  000034                     ___flmul@b:
   773                           	opt callstack 0
   774                           
   775                           ; 4 bytes @ 0x33
   776  000034                     	ds	1
   777  000035                     ??_pad:
   778                           
   779                           ; 1 bytes @ 0x34
   780  000035                     	ds	1
   781  000036                     pad@i:
   782                           	opt callstack 0
   783  000036                     stoa@w:
   784                           	opt callstack 0
   785                           
   786                           ; 2 bytes @ 0x35
   787  000036                     	ds	1
   788  000037                     ___flge@ff2:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x36
   792  000037                     	ds	1
   793  000038                     pad@w:
   794                           	opt callstack 0
   795  000038                     stoa@cp:
   796                           	opt callstack 0
   797  000038                     ___flmul@a:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0x37
   801  000038                     	ds	2
   802  00003A                     ?_ctoa:
   803                           	opt callstack 0
   804  00003A                     ctoa@fp:
   805                           	opt callstack 0
   806  00003A                     stoa@p:
   807                           	opt callstack 0
   808                           
   809                           ; 2 bytes @ 0x39
   810  00003A                     	ds	1
   811  00003B                     ??___flge:
   812                           
   813                           ; 1 bytes @ 0x3A
   814  00003B                     	ds	1
   815  00003C                     ??___flmul:
   816  00003C                     ctoa@c:
   817                           	opt callstack 0
   818  00003C                     stoa@l:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x3B
   822  00003C                     	ds	1
   823  00003D                     ctoa@w:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x3C
   827  00003D                     	ds	2
   828  00003F                     ?_vfpfcnvrt:
   829                           	opt callstack 0
   830  00003F                     vfpfcnvrt@fp:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x3E
   834  00003F                     	ds	1
   835  000040                     ___flmul@sign:
   836                           	opt callstack 0
   837                           
   838                           ; 1 bytes @ 0x3F
   839  000040                     	ds	1
   840  000041                     vfpfcnvrt@fmt:
   841                           	opt callstack 0
   842  000041                     ___flmul@grs:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x40
   846  000041                     	ds	2
   847  000043                     vfpfcnvrt@ap:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x42
   851  000043                     	ds	2
   852  000045                     ??_vfpfcnvrt:
   853  000045                     ___flmul@aexp:
   854                           	opt callstack 0
   855                           
   856                           ; 1 bytes @ 0x44
   857  000045                     	ds	1
   858  000046                     ___flmul@bexp:
   859                           	opt callstack 0
   860                           
   861                           ; 1 bytes @ 0x45
   862  000046                     	ds	1
   863  000047                     ___flmul@prod:
   864                           	opt callstack 0
   865                           
   866                           ; 4 bytes @ 0x46
   867  000047                     	ds	2
   868  000049                     vfpfcnvrt@cp:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x48
   872  000049                     	ds	2
   873  00004B                     _vfpfcnvrt$1021:
   874                           	opt callstack 0
   875  00004B                     ___flmul@temp:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x4A
   879  00004B                     	ds	2
   880  00004D                     _vfpfcnvrt$1022:
   881                           	opt callstack 0
   882                           
   883                           ; 2 bytes @ 0x4C
   884  00004D                     	ds	2
   885  00004F                     vfpfcnvrt@c:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x4E
   889  00004F                     	ds	1
   890  000050                     vfprintf@cfmt:
   891                           	opt callstack 0
   892                           
   893                           ; 2 bytes @ 0x4F
   894  000050                     	ds	2
   895  000052                     
   896                           ; 1 bytes @ 0x51
   897 ;;
   898 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   899 ;;
   900 ;; *************** function _main *****************
   901 ;; Defined at:
   902 ;;		line 49 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  keypress        1   97[BANK0 ] unsigned char 
   907 ;;  command        25   54[BANK0 ] unsigned char [25]
   908 ;;  uart_char_to   25   29[BANK0 ] unsigned char [25]
   909 ;;  lcdDisplay     16   79[BANK0 ] unsigned char [16]
   910 ;;  buffer         10    0        unsigned char [10]
   911 ;;  index           2  100[BANK0 ] int 
   912 ;;  commandLengt    2    0        int 
   913 ;;  correctingDi    1  102[BANK0 ] _Bool 
   914 ;;  moving          1   99[BANK0 ] _Bool 
   915 ;;  commandRecei    1   98[BANK0 ] _Bool 
   916 ;;  toPrint         1    0        unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         0      79       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:       79 bytes
   931 ;; Hardware stack levels required when called:   14
   932 ;; This function calls:
   933 ;;		_DCMotorAllOff
   934 ;;		_DCMotorCenterLeft
   935 ;;		_DCMotorCenterRight
   936 ;;		_DCMotorLeftBkwd
   937 ;;		_DCMotorLeftFwd
   938 ;;		_DCMotorLeftOFF
   939 ;;		_DCMotorLeftRightBkwdON
   940 ;;		_DCMotorLeftRightFwdON
   941 ;;		_DCMotorRightBkwd
   942 ;;		_DCMotorRightFwd
   943 ;;		_DCMotorRightOFF
   944 ;;		_I2C_Master_Init
   945 ;;		_LCD_set_cursor
   946 ;;		_LCD_write_str
   947 ;;		_RTC_Init
   948 ;;		_UART_Init
   949 ;;		_UART_available
   950 ;;		_UART_read
   951 ;;		_UART_send_string
   952 ;;		___fldiv
   953 ;;		___flge
   954 ;;		___flmul
   955 ;;		___flsub
   956 ;;		_initLCD
   957 ;;		_portSetup
   958 ;;		_sprintf
   959 ;; This function is called by:
   960 ;;		Startup code after reset
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text0
   965  001034                     __ptext0:
   966                           	opt callstack 0
   967  001034                     _main:
   968                           	opt callstack 17
   969                           
   970                           ;main.c: 51:     portSetup();
   971                           
   972                           ;incstack = 0
   973  001034  EC19  F019         	call	_portSetup	;wreg free
   974                           
   975                           ;main.c: 52:     initLCD();
   976  001038  EC14  F018         	call	_initLCD	;wreg free
   977                           
   978                           ;main.c: 53:     I2C_Master_Init(100000);
   979  00103C  0EA0               	movlw	160
   980  00103E  6E28               	movwf	I2C_Master_Init@clockFreq,c
   981  001040  0E86               	movlw	134
   982  001042  6E29               	movwf	I2C_Master_Init@clockFreq+1,c
   983  001044  0E01               	movlw	1
   984  001046  6E2A               	movwf	I2C_Master_Init@clockFreq+2,c
   985  001048  0E00               	movlw	0
   986  00104A  6E2B               	movwf	I2C_Master_Init@clockFreq+3,c
   987  00104C  EC49  F018         	call	_I2C_Master_Init	;wreg free
   988                           
   989                           ;main.c: 54:     RTC_Init();
   990  001050  EC25  F01A         	call	_RTC_Init	;wreg free
   991                           
   992                           ;main.c: 55:     UART_Init();
   993  001054  EC8C  F017         	call	_UART_Init	;wreg free
   994                           
   995                           ;main.c: 57:     LCD_set_cursor(0,0);
   996  001058  0E00               	movlw	0
   997  00105A  6E20               	movwf	LCD_set_cursor@row+1,c
   998  00105C  0E00               	movlw	0
   999  00105E  6E1F               	movwf	LCD_set_cursor@row,c
  1000  001060  0E00               	movlw	0
  1001  001062  6E22               	movwf	LCD_set_cursor@column+1,c
  1002  001064  0E00               	movlw	0
  1003  001066  6E21               	movwf	LCD_set_cursor@column,c
  1004  001068  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1005                           
  1006                           ;main.c: 61:     UART_send_string("Init complete\n");
  1007  00106C  0E18               	movlw	low STR_1
  1008  00106E  6E1C               	movwf	UART_send_string@message,c
  1009  001070  0E10               	movlw	high STR_1
  1010  001072  6E1D               	movwf	UART_send_string@message+1,c
  1011  001074  EC9C  F016         	call	_UART_send_string	;wreg free
  1012                           
  1013                           ;main.c: 63:     _delay((unsigned long)((500)*(10000000/4000.0)));
  1014  001078  0E07               	movlw	7
  1015  00107A  0100               	movlb	0	; () banked
  1016  00107C  6F99               	movwf	(??_main+1)& (0+255),b
  1017  00107E  0E58               	movlw	88
  1018  001080  6F98               	movwf	??_main& (0+255),b
  1019  001082  0E59               	movlw	89
  1020  001084                     u5117:
  1021  001084  2EE8               	decfsz	wreg,f,c
  1022  001086  D7FE               	bra	u5117
  1023  001088  2F98               	decfsz	??_main& (0+255),f,b
  1024  00108A  D7FC               	bra	u5117
  1025  00108C  2F99               	decfsz	(??_main+1)& (0+255),f,b
  1026  00108E  D7FA               	bra	u5117
  1027  001090  D000               	nop2	
  1028                           
  1029                           ;main.c: 65:     _Bool commandReceived = 0;
  1030  001092  0E00               	movlw	0
  1031  001094  0100               	movlb	0	; () banked
  1032  001096  6FE2               	movwf	main@commandReceived& (0+255),b
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;main.c: 67:     unsigned char command [25];;main.c: 68:     unsigned char lcdDisplay [1
      +                          6];;main.c: 69:     unsigned char uart_char_to_send[25];;main.c: 70:     char buffer[10]
      +                          ;;main.c: 71:     int index = 0;
  1036                           
  1037                           ; BSR set to: 0
  1038  001098  0E00               	movlw	0
  1039  00109A  6FE5               	movwf	(main@index+1)& (0+255),b
  1040  00109C  0E00               	movlw	0
  1041  00109E  6FE4               	movwf	main@index& (0+255),b
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;main.c: 72:     unsigned char toPrint;;main.c: 73:     _Bool correctingDirection = 0;
  1045  0010A0  0E00               	movlw	0
  1046  0010A2  6FE6               	movwf	main@correctingDirection& (0+255),b
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;main.c: 74:     _Bool moving = 0;
  1050  0010A4  0E00               	movlw	0
  1051  0010A6  6FE3               	movwf	main@moving& (0+255),b
  1052  0010A8                     l5020:
  1053                           
  1054                           ;main.c: 76:         distanceL = (tickL/960)*200;
  1055  0010A8  0E00               	movlw	0
  1056  0010AA  6E1F               	movwf	___fldiv@a,c
  1057  0010AC  0E00               	movlw	0
  1058  0010AE  6E20               	movwf	___fldiv@a+1,c
  1059  0010B0  0E70               	movlw	112
  1060  0010B2  6E21               	movwf	___fldiv@a+2,c
  1061  0010B4  0E44               	movlw	68
  1062  0010B6  6E22               	movwf	___fldiv@a+3,c
  1063  0010B8  C0F3  F01B         	movff	_tickL,___fldiv@b	;volatile
  1064  0010BC  C0F4  F01C         	movff	_tickL+1,___fldiv@b+1	;volatile
  1065  0010C0  C0F5  F01D         	movff	_tickL+2,___fldiv@b+2	;volatile
  1066  0010C4  C0F6  F01E         	movff	_tickL+3,___fldiv@b+3	;volatile
  1067  0010C8  ECA7  F012         	call	___fldiv	;wreg free
  1068  0010CC  C01B  F034         	movff	?___fldiv,___flmul@b
  1069  0010D0  C01C  F035         	movff	?___fldiv+1,___flmul@b+1
  1070  0010D4  C01D  F036         	movff	?___fldiv+2,___flmul@b+2
  1071  0010D8  C01E  F037         	movff	?___fldiv+3,___flmul@b+3
  1072  0010DC  0E00               	movlw	0
  1073  0010DE  6E38               	movwf	___flmul@a,c
  1074  0010E0  0E00               	movlw	0
  1075  0010E2  6E39               	movwf	___flmul@a+1,c
  1076  0010E4  0E48               	movlw	72
  1077  0010E6  6E3A               	movwf	___flmul@a+2,c
  1078  0010E8  0E43               	movlw	67
  1079  0010EA  6E3B               	movwf	___flmul@a+3,c
  1080  0010EC  ECF2  F00D         	call	___flmul	;wreg free
  1081  0010F0  C034  F0EB         	movff	?___flmul,_distanceL	;volatile
  1082  0010F4  C035  F0EC         	movff	?___flmul+1,_distanceL+1	;volatile
  1083  0010F8  C036  F0ED         	movff	?___flmul+2,_distanceL+2	;volatile
  1084  0010FC  C037  F0EE         	movff	?___flmul+3,_distanceL+3	;volatile
  1085                           
  1086                           ;main.c: 77:         distanceR = (tickR/960)*200;
  1087  001100  0E00               	movlw	0
  1088  001102  6E1F               	movwf	___fldiv@a,c
  1089  001104  0E00               	movlw	0
  1090  001106  6E20               	movwf	___fldiv@a+1,c
  1091  001108  0E70               	movlw	112
  1092  00110A  6E21               	movwf	___fldiv@a+2,c
  1093  00110C  0E44               	movlw	68
  1094  00110E  6E22               	movwf	___fldiv@a+3,c
  1095  001110  C0EF  F01B         	movff	_tickR,___fldiv@b	;volatile
  1096  001114  C0F0  F01C         	movff	_tickR+1,___fldiv@b+1	;volatile
  1097  001118  C0F1  F01D         	movff	_tickR+2,___fldiv@b+2	;volatile
  1098  00111C  C0F2  F01E         	movff	_tickR+3,___fldiv@b+3	;volatile
  1099  001120  ECA7  F012         	call	___fldiv	;wreg free
  1100  001124  C01B  F034         	movff	?___fldiv,___flmul@b
  1101  001128  C01C  F035         	movff	?___fldiv+1,___flmul@b+1
  1102  00112C  C01D  F036         	movff	?___fldiv+2,___flmul@b+2
  1103  001130  C01E  F037         	movff	?___fldiv+3,___flmul@b+3
  1104  001134  0E00               	movlw	0
  1105  001136  6E38               	movwf	___flmul@a,c
  1106  001138  0E00               	movlw	0
  1107  00113A  6E39               	movwf	___flmul@a+1,c
  1108  00113C  0E48               	movlw	72
  1109  00113E  6E3A               	movwf	___flmul@a+2,c
  1110  001140  0E43               	movlw	67
  1111  001142  6E3B               	movwf	___flmul@a+3,c
  1112  001144  ECF2  F00D         	call	___flmul	;wreg free
  1113  001148  C034  F0E7         	movff	?___flmul,_distanceR	;volatile
  1114  00114C  C035  F0E8         	movff	?___flmul+1,_distanceR+1	;volatile
  1115  001150  C036  F0E9         	movff	?___flmul+2,_distanceR+2	;volatile
  1116  001154  C037  F0EA         	movff	?___flmul+3,_distanceR+3	;volatile
  1117                           
  1118                           ;main.c: 78:         if(moving && travelDirection == 1){
  1119  001158  0100               	movlb	0	; () banked
  1120  00115A  51E3               	movf	main@moving& (0+255),w,b
  1121  00115C  B4D8               	btfsc	status,2,c
  1122  00115E  D0D1               	goto	l5068
  1123                           
  1124                           ; BSR set to: 0
  1125  001160  05F9               	decf	_travelDirection& (0+255),w,b	;volatile
  1126  001162  11FA               	iorwf	(_travelDirection+1)& (0+255),w,b	;volatile
  1127  001164  A4D8               	btfss	status,2,c
  1128  001166  D0CD               	goto	l5068
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;main.c: 79:             if(distanceR - distanceL > 8.0){
  1132  001168  0E00               	movlw	0
  1133  00116A  6E33               	movwf	___flge@ff1,c
  1134  00116C  0E00               	movlw	0
  1135  00116E  6E34               	movwf	___flge@ff1+1,c
  1136  001170  0E00               	movlw	0
  1137  001172  6E35               	movwf	___flge@ff1+2,c
  1138  001174  0E41               	movlw	65
  1139  001176  6E36               	movwf	___flge@ff1+3,c
  1140  001178  C0EB  F02F         	movff	_distanceL,___flsub@a	;volatile
  1141  00117C  C0EC  F030         	movff	_distanceL+1,___flsub@a+1	;volatile
  1142  001180  C0ED  F031         	movff	_distanceL+2,___flsub@a+2	;volatile
  1143  001184  C0EE  F032         	movff	_distanceL+3,___flsub@a+3	;volatile
  1144  001188  C0E7  F02B         	movff	_distanceR,___flsub@b	;volatile
  1145  00118C  C0E8  F02C         	movff	_distanceR+1,___flsub@b+1	;volatile
  1146  001190  C0E9  F02D         	movff	_distanceR+2,___flsub@b+2	;volatile
  1147  001194  C0EA  F02E         	movff	_distanceR+3,___flsub@b+3	;volatile
  1148  001198  EC8C  F019         	call	___flsub	;wreg free
  1149  00119C  C02B  F037         	movff	?___flsub,___flge@ff2
  1150  0011A0  C02C  F038         	movff	?___flsub+1,___flge@ff2+1
  1151  0011A4  C02D  F039         	movff	?___flsub+2,___flge@ff2+2
  1152  0011A8  C02E  F03A         	movff	?___flsub+3,___flge@ff2+3
  1153  0011AC  ECCE  F015         	call	___flge	;wreg free
  1154  0011B0  B0D8               	btfsc	status,0,c
  1155  0011B2  D009               	goto	l5036
  1156                           
  1157                           ;main.c: 80:                 DCMotorRightOFF();
  1158  0011B4  EC05  F01B         	call	_DCMotorRightOFF	;wreg free
  1159                           
  1160                           ;main.c: 81:                 sideTurnedOff = 2;
  1161  0011B8  0E00               	movlw	0
  1162  0011BA  0100               	movlb	0	; () banked
  1163  0011BC  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1164  0011BE  0E02               	movlw	2
  1165  0011C0  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;main.c: 82:                 correctingDirection = 1;
  1169  0011C2  0E01               	movlw	1
  1170  0011C4  6FE6               	movwf	main@correctingDirection& (0+255),b
  1171  0011C6                     l5036:
  1172                           
  1173                           ;main.c: 84:             if(distanceL - distanceR > 8.0){
  1174  0011C6  0E00               	movlw	0
  1175  0011C8  6E33               	movwf	___flge@ff1,c
  1176  0011CA  0E00               	movlw	0
  1177  0011CC  6E34               	movwf	___flge@ff1+1,c
  1178  0011CE  0E00               	movlw	0
  1179  0011D0  6E35               	movwf	___flge@ff1+2,c
  1180  0011D2  0E41               	movlw	65
  1181  0011D4  6E36               	movwf	___flge@ff1+3,c
  1182  0011D6  C0E7  F02F         	movff	_distanceR,___flsub@a	;volatile
  1183  0011DA  C0E8  F030         	movff	_distanceR+1,___flsub@a+1	;volatile
  1184  0011DE  C0E9  F031         	movff	_distanceR+2,___flsub@a+2	;volatile
  1185  0011E2  C0EA  F032         	movff	_distanceR+3,___flsub@a+3	;volatile
  1186  0011E6  C0EB  F02B         	movff	_distanceL,___flsub@b	;volatile
  1187  0011EA  C0EC  F02C         	movff	_distanceL+1,___flsub@b+1	;volatile
  1188  0011EE  C0ED  F02D         	movff	_distanceL+2,___flsub@b+2	;volatile
  1189  0011F2  C0EE  F02E         	movff	_distanceL+3,___flsub@b+3	;volatile
  1190  0011F6  EC8C  F019         	call	___flsub	;wreg free
  1191  0011FA  C02B  F037         	movff	?___flsub,___flge@ff2
  1192  0011FE  C02C  F038         	movff	?___flsub+1,___flge@ff2+1
  1193  001202  C02D  F039         	movff	?___flsub+2,___flge@ff2+2
  1194  001206  C02E  F03A         	movff	?___flsub+3,___flge@ff2+3
  1195  00120A  ECCE  F015         	call	___flge	;wreg free
  1196  00120E  B0D8               	btfsc	status,0,c
  1197  001210  D009               	goto	l5044
  1198                           
  1199                           ;main.c: 85:                 DCMotorLeftOFF();
  1200  001212  EC08  F01B         	call	_DCMotorLeftOFF	;wreg free
  1201                           
  1202                           ;main.c: 86:                 sideTurnedOff = 1;
  1203  001216  0E00               	movlw	0
  1204  001218  0100               	movlb	0	; () banked
  1205  00121A  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1206  00121C  0E01               	movlw	1
  1207  00121E  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 87:                 correctingDirection = 1;
  1211  001220  0E01               	movlw	1
  1212  001222  6FE6               	movwf	main@correctingDirection& (0+255),b
  1213  001224                     l5044:
  1214                           
  1215                           ;main.c: 89:             if(correctingDirection && sideTurnedOff == 1 && (distanceL - di
      +                          stanceR < 5.0)){
  1216  001224  0100               	movlb	0	; () banked
  1217  001226  51E6               	movf	main@correctingDirection& (0+255),w,b
  1218  001228  B4D8               	btfsc	status,2,c
  1219  00122A  D033               	goto	l5056
  1220                           
  1221                           ; BSR set to: 0
  1222  00122C  05F7               	decf	_sideTurnedOff& (0+255),w,b
  1223  00122E  11F8               	iorwf	(_sideTurnedOff+1)& (0+255),w,b
  1224  001230  A4D8               	btfss	status,2,c
  1225  001232  D02F               	goto	l5056
  1226                           
  1227                           ; BSR set to: 0
  1228  001234  C0E7  F02F         	movff	_distanceR,___flsub@a	;volatile
  1229  001238  C0E8  F030         	movff	_distanceR+1,___flsub@a+1	;volatile
  1230  00123C  C0E9  F031         	movff	_distanceR+2,___flsub@a+2	;volatile
  1231  001240  C0EA  F032         	movff	_distanceR+3,___flsub@a+3	;volatile
  1232  001244  C0EB  F02B         	movff	_distanceL,___flsub@b	;volatile
  1233  001248  C0EC  F02C         	movff	_distanceL+1,___flsub@b+1	;volatile
  1234  00124C  C0ED  F02D         	movff	_distanceL+2,___flsub@b+2	;volatile
  1235  001250  C0EE  F02E         	movff	_distanceL+3,___flsub@b+3	;volatile
  1236  001254  EC8C  F019         	call	___flsub	;wreg free
  1237  001258  C02B  F033         	movff	?___flsub,___flge@ff1
  1238  00125C  C02C  F034         	movff	?___flsub+1,___flge@ff1+1
  1239  001260  C02D  F035         	movff	?___flsub+2,___flge@ff1+2
  1240  001264  C02E  F036         	movff	?___flsub+3,___flge@ff1+3
  1241  001268  0E00               	movlw	0
  1242  00126A  6E37               	movwf	___flge@ff2,c
  1243  00126C  0E00               	movlw	0
  1244  00126E  6E38               	movwf	___flge@ff2+1,c
  1245  001270  0EA0               	movlw	160
  1246  001272  6E39               	movwf	___flge@ff2+2,c
  1247  001274  0E40               	movlw	64
  1248  001276  6E3A               	movwf	___flge@ff2+3,c
  1249  001278  ECCE  F015         	call	___flge	;wreg free
  1250  00127C  B0D8               	btfsc	status,0,c
  1251  00127E  D009               	goto	l5056
  1252                           
  1253                           ;main.c: 90:                 DCMotorLeftRightFwdON();
  1254  001280  ECDF  F01A         	call	_DCMotorLeftRightFwdON	;wreg free
  1255                           
  1256                           ;main.c: 91:                 sideTurnedOff = 0;
  1257  001284  0E00               	movlw	0
  1258  001286  0100               	movlb	0	; () banked
  1259  001288  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1260  00128A  0E00               	movlw	0
  1261  00128C  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;main.c: 92:                 correctingDirection = 0;
  1265  00128E  0E00               	movlw	0
  1266  001290  6FE6               	movwf	main@correctingDirection& (0+255),b
  1267  001292                     l5056:
  1268                           
  1269                           ;main.c: 94:             if(correctingDirection && sideTurnedOff == 2 && (distanceR - di
      +                          stanceL < 5.0)){
  1270  001292  0100               	movlb	0	; () banked
  1271  001294  51E6               	movf	main@correctingDirection& (0+255),w,b
  1272  001296  B4D8               	btfsc	status,2,c
  1273  001298  D034               	goto	l5068
  1274                           
  1275                           ; BSR set to: 0
  1276  00129A  0E02               	movlw	2
  1277  00129C  19F7               	xorwf	_sideTurnedOff& (0+255),w,b
  1278  00129E  11F8               	iorwf	(_sideTurnedOff+1)& (0+255),w,b
  1279  0012A0  A4D8               	btfss	status,2,c
  1280  0012A2  D02F               	goto	l5068
  1281                           
  1282                           ; BSR set to: 0
  1283  0012A4  C0EB  F02F         	movff	_distanceL,___flsub@a	;volatile
  1284  0012A8  C0EC  F030         	movff	_distanceL+1,___flsub@a+1	;volatile
  1285  0012AC  C0ED  F031         	movff	_distanceL+2,___flsub@a+2	;volatile
  1286  0012B0  C0EE  F032         	movff	_distanceL+3,___flsub@a+3	;volatile
  1287  0012B4  C0E7  F02B         	movff	_distanceR,___flsub@b	;volatile
  1288  0012B8  C0E8  F02C         	movff	_distanceR+1,___flsub@b+1	;volatile
  1289  0012BC  C0E9  F02D         	movff	_distanceR+2,___flsub@b+2	;volatile
  1290  0012C0  C0EA  F02E         	movff	_distanceR+3,___flsub@b+3	;volatile
  1291  0012C4  EC8C  F019         	call	___flsub	;wreg free
  1292  0012C8  C02B  F033         	movff	?___flsub,___flge@ff1
  1293  0012CC  C02C  F034         	movff	?___flsub+1,___flge@ff1+1
  1294  0012D0  C02D  F035         	movff	?___flsub+2,___flge@ff1+2
  1295  0012D4  C02E  F036         	movff	?___flsub+3,___flge@ff1+3
  1296  0012D8  0E00               	movlw	0
  1297  0012DA  6E37               	movwf	___flge@ff2,c
  1298  0012DC  0E00               	movlw	0
  1299  0012DE  6E38               	movwf	___flge@ff2+1,c
  1300  0012E0  0EA0               	movlw	160
  1301  0012E2  6E39               	movwf	___flge@ff2+2,c
  1302  0012E4  0E40               	movlw	64
  1303  0012E6  6E3A               	movwf	___flge@ff2+3,c
  1304  0012E8  ECCE  F015         	call	___flge	;wreg free
  1305  0012EC  B0D8               	btfsc	status,0,c
  1306  0012EE  D009               	goto	l5068
  1307                           
  1308                           ;main.c: 95:                 DCMotorLeftRightFwdON();
  1309  0012F0  ECDF  F01A         	call	_DCMotorLeftRightFwdON	;wreg free
  1310                           
  1311                           ;main.c: 96:                 sideTurnedOff = 0;
  1312  0012F4  0E00               	movlw	0
  1313  0012F6  0100               	movlb	0	; () banked
  1314  0012F8  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1315  0012FA  0E00               	movlw	0
  1316  0012FC  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;main.c: 97:                 correctingDirection = 0;
  1320  0012FE  0E00               	movlw	0
  1321  001300  6FE6               	movwf	main@correctingDirection& (0+255),b
  1322  001302                     l5068:
  1323                           
  1324                           ;main.c: 100:         if(moving && travelDirection == 2){
  1325  001302  0100               	movlb	0	; () banked
  1326  001304  51E3               	movf	main@moving& (0+255),w,b
  1327  001306  B4D8               	btfsc	status,2,c
  1328  001308  D0D2               	goto	l5112
  1329                           
  1330                           ; BSR set to: 0
  1331  00130A  0E02               	movlw	2
  1332  00130C  19F9               	xorwf	_travelDirection& (0+255),w,b	;volatile
  1333  00130E  11FA               	iorwf	(_travelDirection+1)& (0+255),w,b	;volatile
  1334  001310  A4D8               	btfss	status,2,c
  1335  001312  D0CD               	goto	l5112
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;main.c: 101:             if(distanceR - distanceL > 8.0){
  1339  001314  0E00               	movlw	0
  1340  001316  6E33               	movwf	___flge@ff1,c
  1341  001318  0E00               	movlw	0
  1342  00131A  6E34               	movwf	___flge@ff1+1,c
  1343  00131C  0E00               	movlw	0
  1344  00131E  6E35               	movwf	___flge@ff1+2,c
  1345  001320  0E41               	movlw	65
  1346  001322  6E36               	movwf	___flge@ff1+3,c
  1347  001324  C0EB  F02F         	movff	_distanceL,___flsub@a	;volatile
  1348  001328  C0EC  F030         	movff	_distanceL+1,___flsub@a+1	;volatile
  1349  00132C  C0ED  F031         	movff	_distanceL+2,___flsub@a+2	;volatile
  1350  001330  C0EE  F032         	movff	_distanceL+3,___flsub@a+3	;volatile
  1351  001334  C0E7  F02B         	movff	_distanceR,___flsub@b	;volatile
  1352  001338  C0E8  F02C         	movff	_distanceR+1,___flsub@b+1	;volatile
  1353  00133C  C0E9  F02D         	movff	_distanceR+2,___flsub@b+2	;volatile
  1354  001340  C0EA  F02E         	movff	_distanceR+3,___flsub@b+3	;volatile
  1355  001344  EC8C  F019         	call	___flsub	;wreg free
  1356  001348  C02B  F037         	movff	?___flsub,___flge@ff2
  1357  00134C  C02C  F038         	movff	?___flsub+1,___flge@ff2+1
  1358  001350  C02D  F039         	movff	?___flsub+2,___flge@ff2+2
  1359  001354  C02E  F03A         	movff	?___flsub+3,___flge@ff2+3
  1360  001358  ECCE  F015         	call	___flge	;wreg free
  1361  00135C  B0D8               	btfsc	status,0,c
  1362  00135E  D009               	goto	l5080
  1363                           
  1364                           ;main.c: 102:                 DCMotorLeftOFF();
  1365  001360  EC08  F01B         	call	_DCMotorLeftOFF	;wreg free
  1366                           
  1367                           ;main.c: 103:                 sideTurnedOff = 1;
  1368  001364  0E00               	movlw	0
  1369  001366  0100               	movlb	0	; () banked
  1370  001368  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1371  00136A  0E01               	movlw	1
  1372  00136C  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;main.c: 104:                 correctingDirection = 1;
  1376  00136E  0E01               	movlw	1
  1377  001370  6FE6               	movwf	main@correctingDirection& (0+255),b
  1378  001372                     l5080:
  1379                           
  1380                           ;main.c: 106:             if(distanceL - distanceR> 8.0){
  1381  001372  0E00               	movlw	0
  1382  001374  6E33               	movwf	___flge@ff1,c
  1383  001376  0E00               	movlw	0
  1384  001378  6E34               	movwf	___flge@ff1+1,c
  1385  00137A  0E00               	movlw	0
  1386  00137C  6E35               	movwf	___flge@ff1+2,c
  1387  00137E  0E41               	movlw	65
  1388  001380  6E36               	movwf	___flge@ff1+3,c
  1389  001382  C0E7  F02F         	movff	_distanceR,___flsub@a	;volatile
  1390  001386  C0E8  F030         	movff	_distanceR+1,___flsub@a+1	;volatile
  1391  00138A  C0E9  F031         	movff	_distanceR+2,___flsub@a+2	;volatile
  1392  00138E  C0EA  F032         	movff	_distanceR+3,___flsub@a+3	;volatile
  1393  001392  C0EB  F02B         	movff	_distanceL,___flsub@b	;volatile
  1394  001396  C0EC  F02C         	movff	_distanceL+1,___flsub@b+1	;volatile
  1395  00139A  C0ED  F02D         	movff	_distanceL+2,___flsub@b+2	;volatile
  1396  00139E  C0EE  F02E         	movff	_distanceL+3,___flsub@b+3	;volatile
  1397  0013A2  EC8C  F019         	call	___flsub	;wreg free
  1398  0013A6  C02B  F037         	movff	?___flsub,___flge@ff2
  1399  0013AA  C02C  F038         	movff	?___flsub+1,___flge@ff2+1
  1400  0013AE  C02D  F039         	movff	?___flsub+2,___flge@ff2+2
  1401  0013B2  C02E  F03A         	movff	?___flsub+3,___flge@ff2+3
  1402  0013B6  ECCE  F015         	call	___flge	;wreg free
  1403  0013BA  B0D8               	btfsc	status,0,c
  1404  0013BC  D009               	goto	l5088
  1405                           
  1406                           ;main.c: 107:                 DCMotorRightOFF();
  1407  0013BE  EC05  F01B         	call	_DCMotorRightOFF	;wreg free
  1408                           
  1409                           ;main.c: 108:                 sideTurnedOff = 2;
  1410  0013C2  0E00               	movlw	0
  1411  0013C4  0100               	movlb	0	; () banked
  1412  0013C6  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1413  0013C8  0E02               	movlw	2
  1414  0013CA  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;main.c: 109:                 correctingDirection = 1;
  1418  0013CC  0E01               	movlw	1
  1419  0013CE  6FE6               	movwf	main@correctingDirection& (0+255),b
  1420  0013D0                     l5088:
  1421                           
  1422                           ;main.c: 111:             if(correctingDirection && sideTurnedOff == 1 && (distanceL - d
      +                          istanceR < 5.0)){
  1423  0013D0  0100               	movlb	0	; () banked
  1424  0013D2  51E6               	movf	main@correctingDirection& (0+255),w,b
  1425  0013D4  B4D8               	btfsc	status,2,c
  1426  0013D6  D033               	goto	l5100
  1427                           
  1428                           ; BSR set to: 0
  1429  0013D8  05F7               	decf	_sideTurnedOff& (0+255),w,b
  1430  0013DA  11F8               	iorwf	(_sideTurnedOff+1)& (0+255),w,b
  1431  0013DC  A4D8               	btfss	status,2,c
  1432  0013DE  D02F               	goto	l5100
  1433                           
  1434                           ; BSR set to: 0
  1435  0013E0  C0E7  F02F         	movff	_distanceR,___flsub@a	;volatile
  1436  0013E4  C0E8  F030         	movff	_distanceR+1,___flsub@a+1	;volatile
  1437  0013E8  C0E9  F031         	movff	_distanceR+2,___flsub@a+2	;volatile
  1438  0013EC  C0EA  F032         	movff	_distanceR+3,___flsub@a+3	;volatile
  1439  0013F0  C0EB  F02B         	movff	_distanceL,___flsub@b	;volatile
  1440  0013F4  C0EC  F02C         	movff	_distanceL+1,___flsub@b+1	;volatile
  1441  0013F8  C0ED  F02D         	movff	_distanceL+2,___flsub@b+2	;volatile
  1442  0013FC  C0EE  F02E         	movff	_distanceL+3,___flsub@b+3	;volatile
  1443  001400  EC8C  F019         	call	___flsub	;wreg free
  1444  001404  C02B  F033         	movff	?___flsub,___flge@ff1
  1445  001408  C02C  F034         	movff	?___flsub+1,___flge@ff1+1
  1446  00140C  C02D  F035         	movff	?___flsub+2,___flge@ff1+2
  1447  001410  C02E  F036         	movff	?___flsub+3,___flge@ff1+3
  1448  001414  0E00               	movlw	0
  1449  001416  6E37               	movwf	___flge@ff2,c
  1450  001418  0E00               	movlw	0
  1451  00141A  6E38               	movwf	___flge@ff2+1,c
  1452  00141C  0EA0               	movlw	160
  1453  00141E  6E39               	movwf	___flge@ff2+2,c
  1454  001420  0E40               	movlw	64
  1455  001422  6E3A               	movwf	___flge@ff2+3,c
  1456  001424  ECCE  F015         	call	___flge	;wreg free
  1457  001428  B0D8               	btfsc	status,0,c
  1458  00142A  D009               	goto	l5100
  1459                           
  1460                           ;main.c: 112:                 DCMotorLeftRightBkwdON();
  1461  00142C  ECE4  F01A         	call	_DCMotorLeftRightBkwdON	;wreg free
  1462                           
  1463                           ;main.c: 113:                 sideTurnedOff = 0;
  1464  001430  0E00               	movlw	0
  1465  001432  0100               	movlb	0	; () banked
  1466  001434  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1467  001436  0E00               	movlw	0
  1468  001438  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;main.c: 114:                 correctingDirection = 0;
  1472  00143A  0E00               	movlw	0
  1473  00143C  6FE6               	movwf	main@correctingDirection& (0+255),b
  1474  00143E                     l5100:
  1475                           
  1476                           ;main.c: 116:             if(correctingDirection && sideTurnedOff == 2 && (distanceR - d
      +                          istanceL < 5.0)){
  1477  00143E  0100               	movlb	0	; () banked
  1478  001440  51E6               	movf	main@correctingDirection& (0+255),w,b
  1479  001442  B4D8               	btfsc	status,2,c
  1480  001444  D034               	goto	l5112
  1481                           
  1482                           ; BSR set to: 0
  1483  001446  0E02               	movlw	2
  1484  001448  19F7               	xorwf	_sideTurnedOff& (0+255),w,b
  1485  00144A  11F8               	iorwf	(_sideTurnedOff+1)& (0+255),w,b
  1486  00144C  A4D8               	btfss	status,2,c
  1487  00144E  D02F               	goto	l5112
  1488                           
  1489                           ; BSR set to: 0
  1490  001450  C0EB  F02F         	movff	_distanceL,___flsub@a	;volatile
  1491  001454  C0EC  F030         	movff	_distanceL+1,___flsub@a+1	;volatile
  1492  001458  C0ED  F031         	movff	_distanceL+2,___flsub@a+2	;volatile
  1493  00145C  C0EE  F032         	movff	_distanceL+3,___flsub@a+3	;volatile
  1494  001460  C0E7  F02B         	movff	_distanceR,___flsub@b	;volatile
  1495  001464  C0E8  F02C         	movff	_distanceR+1,___flsub@b+1	;volatile
  1496  001468  C0E9  F02D         	movff	_distanceR+2,___flsub@b+2	;volatile
  1497  00146C  C0EA  F02E         	movff	_distanceR+3,___flsub@b+3	;volatile
  1498  001470  EC8C  F019         	call	___flsub	;wreg free
  1499  001474  C02B  F033         	movff	?___flsub,___flge@ff1
  1500  001478  C02C  F034         	movff	?___flsub+1,___flge@ff1+1
  1501  00147C  C02D  F035         	movff	?___flsub+2,___flge@ff1+2
  1502  001480  C02E  F036         	movff	?___flsub+3,___flge@ff1+3
  1503  001484  0E00               	movlw	0
  1504  001486  6E37               	movwf	___flge@ff2,c
  1505  001488  0E00               	movlw	0
  1506  00148A  6E38               	movwf	___flge@ff2+1,c
  1507  00148C  0EA0               	movlw	160
  1508  00148E  6E39               	movwf	___flge@ff2+2,c
  1509  001490  0E40               	movlw	64
  1510  001492  6E3A               	movwf	___flge@ff2+3,c
  1511  001494  ECCE  F015         	call	___flge	;wreg free
  1512  001498  B0D8               	btfsc	status,0,c
  1513  00149A  D009               	goto	l5112
  1514                           
  1515                           ;main.c: 117:                 DCMotorLeftRightBkwdON();
  1516  00149C  ECE4  F01A         	call	_DCMotorLeftRightBkwdON	;wreg free
  1517                           
  1518                           ;main.c: 118:                 sideTurnedOff = 0;
  1519  0014A0  0E00               	movlw	0
  1520  0014A2  0100               	movlb	0	; () banked
  1521  0014A4  6FF8               	movwf	(_sideTurnedOff+1)& (0+255),b
  1522  0014A6  0E00               	movlw	0
  1523  0014A8  6FF7               	movwf	_sideTurnedOff& (0+255),b
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;main.c: 119:                 correctingDirection = 0;
  1527  0014AA  0E00               	movlw	0
  1528  0014AC  6FE6               	movwf	main@correctingDirection& (0+255),b
  1529  0014AE                     l5112:
  1530                           
  1531                           ;main.c: 140:         if(UART_available()){
  1532  0014AE  EC8C  F01A         	call	_UART_available	;wreg free
  1533  0014B2  501B               	movf	?_UART_available,w,c
  1534  0014B4  101C               	iorwf	?_UART_available+1,w,c
  1535  0014B6  B4D8               	btfsc	status,2,c
  1536  0014B8  D00E               	goto	l5118
  1537                           
  1538                           ;main.c: 141:             command[index] = UART_read();
  1539  0014BA  EC79  F01A         	call	_UART_read	;wreg free
  1540  0014BE  0100               	movlb	0	; () banked
  1541  0014C0  6F98               	movwf	??_main& (0+255),b
  1542  0014C2  0EB6               	movlw	low main@command
  1543  0014C4  25E4               	addwf	main@index& (0+255),w,b
  1544  0014C6  6ED9               	movwf	fsr2l,c
  1545  0014C8  0E00               	movlw	high main@command
  1546  0014CA  21E5               	addwfc	(main@index+1)& (0+255),w,b
  1547  0014CC  6EDA               	movwf	fsr2h,c
  1548  0014CE  C098  FFDF         	movff	??_main,indf2
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;main.c: 142:             index++;
  1552  0014D2  4BE4               	infsnz	main@index& (0+255),f,b
  1553  0014D4  2BE5               	incf	(main@index+1)& (0+255),f,b
  1554  0014D6                     l5118:
  1555                           
  1556                           ;main.c: 144:         if(index>0 && command[index-1] == '\n'){
  1557  0014D6  0100               	movlb	0	; () banked
  1558  0014D8  BFE5               	btfsc	(main@index+1)& (0+255),7,b
  1559  0014DA  D021               	goto	l264
  1560  0014DC  51E5               	movf	(main@index+1)& (0+255),w,b
  1561  0014DE  E103               	bnz	u5070
  1562  0014E0  05E4               	decf	main@index& (0+255),w,b
  1563  0014E2  A0D8               	btfss	status,0,c
  1564  0014E4  D01C               	goto	l264
  1565  0014E6                     u5070:
  1566                           
  1567                           ; BSR set to: 0
  1568  0014E6  0EFF               	movlw	255
  1569  0014E8  6F98               	movwf	??_main& (0+255),b
  1570  0014EA  0EFF               	movlw	255
  1571  0014EC  6F99               	movwf	(??_main+1)& (0+255),b
  1572  0014EE  C0E4  F09A         	movff	main@index,??_main+2
  1573  0014F2  C0E5  F09B         	movff	main@index+1,??_main+3
  1574  0014F6  5198               	movf	??_main& (0+255),w,b
  1575  0014F8  279A               	addwf	(??_main+2)& (0+255),f,b
  1576  0014FA  5199               	movf	(??_main+1)& (0+255),w,b
  1577  0014FC  239B               	addwfc	(??_main+3)& (0+255),f,b
  1578  0014FE  0EB6               	movlw	low main@command
  1579  001500  259A               	addwf	(??_main+2)& (0+255),w,b
  1580  001502  6ED9               	movwf	fsr2l,c
  1581  001504  0E00               	movlw	high main@command
  1582  001506  219B               	addwfc	(??_main+3)& (0+255),w,b
  1583  001508  6EDA               	movwf	fsr2h,c
  1584  00150A  0E0A               	movlw	10
  1585  00150C  18DE               	xorwf	postinc2,w,c
  1586  00150E  A4D8               	btfss	status,2,c
  1587  001510  D006               	goto	l264
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;main.c: 145:             commandReceived = 1;
  1591  001512  0E01               	movlw	1
  1592  001514  6FE2               	movwf	main@commandReceived& (0+255),b
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;main.c: 147:             index = 0;
  1596  001516  0E00               	movlw	0
  1597  001518  6FE5               	movwf	(main@index+1)& (0+255),b
  1598  00151A  0E00               	movlw	0
  1599  00151C  6FE4               	movwf	main@index& (0+255),b
  1600  00151E                     l264:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;main.c: 150:         if(commandReceived){
  1604  00151E  51E2               	movf	main@commandReceived& (0+255),w,b
  1605  001520  B4D8               	btfsc	status,2,c
  1606  001522  D183               	goto	l294
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;main.c: 152:             commandReceived = 0;
  1610  001524  0E00               	movlw	0
  1611  001526  6FE2               	movwf	main@commandReceived& (0+255),b
  1612                           
  1613                           ;main.c: 153:             switch(command[0]){
  1614  001528  D172               	goto	l5230
  1615  00152A                     l5128:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;main.c: 160:                                     LCD_set_cursor(0,0);
  1619  00152A  0E00               	movlw	0
  1620  00152C  6E20               	movwf	LCD_set_cursor@row+1,c
  1621  00152E  0E00               	movlw	0
  1622  001530  6E1F               	movwf	LCD_set_cursor@row,c
  1623  001532  0E00               	movlw	0
  1624  001534  6E22               	movwf	LCD_set_cursor@column+1,c
  1625  001536  0E00               	movlw	0
  1626  001538  6E21               	movwf	LCD_set_cursor@column,c
  1627  00153A  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1628                           
  1629                           ;main.c: 162:                                     travelDirection = 1;
  1630  00153E  0E00               	movlw	0
  1631  001540  0100               	movlb	0	; () banked
  1632  001542  6FFA               	movwf	(_travelDirection+1)& (0+255),b	;volatile
  1633  001544  0E01               	movlw	1
  1634  001546  6FF9               	movwf	_travelDirection& (0+255),b	;volatile
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 163:                                     moving = 1;
  1638  001548  0E01               	movlw	1
  1639  00154A  6FE3               	movwf	main@moving& (0+255),b
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 164:                                     DCMotorLeftRightFwdON();
  1643  00154C  ECDF  F01A         	call	_DCMotorLeftRightFwdON	;wreg free
  1644                           
  1645                           ;main.c: 165:                                     break;
  1646  001550  D16C               	goto	l294
  1647  001552                     l5136:
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 167:                                     LCD_set_cursor(0,0);
  1651  001552  0E00               	movlw	0
  1652  001554  6E20               	movwf	LCD_set_cursor@row+1,c
  1653  001556  0E00               	movlw	0
  1654  001558  6E1F               	movwf	LCD_set_cursor@row,c
  1655  00155A  0E00               	movlw	0
  1656  00155C  6E22               	movwf	LCD_set_cursor@column+1,c
  1657  00155E  0E00               	movlw	0
  1658  001560  6E21               	movwf	LCD_set_cursor@column,c
  1659  001562  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1660                           
  1661                           ;main.c: 169:                                     DCMotorLeftFwd();
  1662  001566  ECF5  F01A         	call	_DCMotorLeftFwd	;wreg free
  1663                           
  1664                           ;main.c: 170:                                     break;
  1665  00156A  D15F               	goto	l294
  1666  00156C                     l5140:
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;main.c: 172:                                     LCD_set_cursor(0,0);
  1670  00156C  0E00               	movlw	0
  1671  00156E  6E20               	movwf	LCD_set_cursor@row+1,c
  1672  001570  0E00               	movlw	0
  1673  001572  6E1F               	movwf	LCD_set_cursor@row,c
  1674  001574  0E00               	movlw	0
  1675  001576  6E22               	movwf	LCD_set_cursor@column+1,c
  1676  001578  0E00               	movlw	0
  1677  00157A  6E21               	movwf	LCD_set_cursor@column,c
  1678  00157C  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1679                           
  1680                           ;main.c: 174:                                     DCMotorRightFwd();
  1681  001580  ECF1  F01A         	call	_DCMotorRightFwd	;wreg free
  1682                           
  1683                           ;main.c: 175:                                     break;
  1684  001584  D152               	goto	l294
  1685  001586                     l5144:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 177:                                     LCD_set_cursor(0,0);
  1689  001586  0E00               	movlw	0
  1690  001588  6E20               	movwf	LCD_set_cursor@row+1,c
  1691  00158A  0E00               	movlw	0
  1692  00158C  6E1F               	movwf	LCD_set_cursor@row,c
  1693  00158E  0E00               	movlw	0
  1694  001590  6E22               	movwf	LCD_set_cursor@column+1,c
  1695  001592  0E00               	movlw	0
  1696  001594  6E21               	movwf	LCD_set_cursor@column,c
  1697  001596  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1698                           
  1699                           ;main.c: 179:                                     moving = 0;
  1700  00159A  0E00               	movlw	0
  1701  00159C  0100               	movlb	0	; () banked
  1702  00159E  6FE3               	movwf	main@moving& (0+255),b
  1703  0015A0                     l5148:
  1704                           
  1705                           ;main.c: 180:                                     DCMotorAllOff();
  1706  0015A0  ECC7  F01A         	call	_DCMotorAllOff	;wreg free
  1707                           
  1708                           ;main.c: 181:                                     break;
  1709  0015A4  D142               	goto	l294
  1710  0015A6                     l5152:
  1711                           
  1712                           ; BSR set to: 0
  1713  0015A6  51B8               	movf	(main@command+2)& (0+255),w,b
  1714  0015A8  6F98               	movwf	??_main& (0+255),b
  1715  0015AA  6B99               	clrf	(??_main+1)& (0+255),b
  1716                           
  1717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1718                           ; Switch size 1, requested type "simple"
  1719                           ; Number of cases is 1, Range of values is 0 to 0
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte            4     3 (average)
  1723                           ;	Chosen strategy is simple_byte
  1724  0015AC  5199               	movf	(??_main+1)& (0+255),w,b
  1725  0015AE  0A00               	xorlw	0	; case 0
  1726  0015B0  A4D8               	btfss	status,2,c
  1727  0015B2  D13B               	goto	l294
  1728                           
  1729                           ; BSR set to: 0
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 4, Range of values is 66 to 82
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte           13     7 (average)
  1735                           ;	Chosen strategy is simple_byte
  1736  0015B4  5198               	movf	??_main& (0+255),w,b
  1737  0015B6  0A42               	xorlw	66	; case 66
  1738  0015B8  B4D8               	btfsc	status,2,c
  1739  0015BA  D7B7               	goto	l5128
  1740  0015BC  0A04               	xorlw	4	; case 70
  1741  0015BE  B4D8               	btfsc	status,2,c
  1742  0015C0  D7E2               	goto	l5144
  1743  0015C2  0A0A               	xorlw	10	; case 76
  1744  0015C4  B4D8               	btfsc	status,2,c
  1745  0015C6  D7C5               	goto	l5136
  1746  0015C8  0A1E               	xorlw	30	; case 82
  1747  0015CA  B4D8               	btfsc	status,2,c
  1748  0015CC  D7CF               	goto	l5140
  1749  0015CE  D12D               	goto	l294
  1750  0015D0                     l5154:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;main.c: 189:                                     LCD_set_cursor(0,0);
  1754  0015D0  0E00               	movlw	0
  1755  0015D2  6E20               	movwf	LCD_set_cursor@row+1,c
  1756  0015D4  0E00               	movlw	0
  1757  0015D6  6E1F               	movwf	LCD_set_cursor@row,c
  1758  0015D8  0E00               	movlw	0
  1759  0015DA  6E22               	movwf	LCD_set_cursor@column+1,c
  1760  0015DC  0E00               	movlw	0
  1761  0015DE  6E21               	movwf	LCD_set_cursor@column,c
  1762  0015E0  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1763                           
  1764                           ;main.c: 191:                                     travelDirection = 2;
  1765  0015E4  0E00               	movlw	0
  1766  0015E6  0100               	movlb	0	; () banked
  1767  0015E8  6FFA               	movwf	(_travelDirection+1)& (0+255),b	;volatile
  1768  0015EA  0E02               	movlw	2
  1769  0015EC  6FF9               	movwf	_travelDirection& (0+255),b	;volatile
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;main.c: 192:                                     moving = 1;
  1773  0015EE  0E01               	movlw	1
  1774  0015F0  6FE3               	movwf	main@moving& (0+255),b
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 193:                                     DCMotorLeftRightBkwdON();
  1778  0015F2  ECE4  F01A         	call	_DCMotorLeftRightBkwdON	;wreg free
  1779                           
  1780                           ;main.c: 194:                                     break;
  1781  0015F6  D119               	goto	l294
  1782  0015F8                     l5162:
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;main.c: 196:                                     LCD_set_cursor(0,0);
  1786  0015F8  0E00               	movlw	0
  1787  0015FA  6E20               	movwf	LCD_set_cursor@row+1,c
  1788  0015FC  0E00               	movlw	0
  1789  0015FE  6E1F               	movwf	LCD_set_cursor@row,c
  1790  001600  0E00               	movlw	0
  1791  001602  6E22               	movwf	LCD_set_cursor@column+1,c
  1792  001604  0E00               	movlw	0
  1793  001606  6E21               	movwf	LCD_set_cursor@column,c
  1794  001608  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1795                           
  1796                           ;main.c: 198:                                     DCMotorLeftBkwd();
  1797  00160C  ECFD  F01A         	call	_DCMotorLeftBkwd	;wreg free
  1798                           
  1799                           ;main.c: 199:                                     break;
  1800  001610  D10C               	goto	l294
  1801  001612                     l5166:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;main.c: 201:                                     LCD_set_cursor(0,0);
  1805  001612  0E00               	movlw	0
  1806  001614  6E20               	movwf	LCD_set_cursor@row+1,c
  1807  001616  0E00               	movlw	0
  1808  001618  6E1F               	movwf	LCD_set_cursor@row,c
  1809  00161A  0E00               	movlw	0
  1810  00161C  6E22               	movwf	LCD_set_cursor@column+1,c
  1811  00161E  0E00               	movlw	0
  1812  001620  6E21               	movwf	LCD_set_cursor@column,c
  1813  001622  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1814                           
  1815                           ;main.c: 203:                                     DCMotorRightBkwd();
  1816  001626  ECF9  F01A         	call	_DCMotorRightBkwd	;wreg free
  1817                           
  1818                           ;main.c: 204:                                     break;
  1819  00162A  D0FF               	goto	l294
  1820  00162C                     l5178:
  1821                           
  1822                           ; BSR set to: 0
  1823  00162C  51B8               	movf	(main@command+2)& (0+255),w,b
  1824  00162E  6F98               	movwf	??_main& (0+255),b
  1825  001630  6B99               	clrf	(??_main+1)& (0+255),b
  1826                           
  1827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1828                           ; Switch size 1, requested type "simple"
  1829                           ; Number of cases is 1, Range of values is 0 to 0
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte            4     3 (average)
  1833                           ;	Chosen strategy is simple_byte
  1834  001632  5199               	movf	(??_main+1)& (0+255),w,b
  1835  001634  0A00               	xorlw	0	; case 0
  1836  001636  A4D8               	btfss	status,2,c
  1837  001638  D0F8               	goto	l294
  1838                           
  1839                           ; BSR set to: 0
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 4, Range of values is 66 to 82
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte           13     7 (average)
  1845                           ;	Chosen strategy is simple_byte
  1846  00163A  5198               	movf	??_main& (0+255),w,b
  1847  00163C  0A42               	xorlw	66	; case 66
  1848  00163E  B4D8               	btfsc	status,2,c
  1849  001640  D7C7               	goto	l5154
  1850  001642  0A04               	xorlw	4	; case 70
  1851  001644  B4D8               	btfsc	status,2,c
  1852  001646  D79F               	goto	l5144
  1853  001648  0A0A               	xorlw	10	; case 76
  1854  00164A  B4D8               	btfsc	status,2,c
  1855  00164C  D7D5               	goto	l5162
  1856  00164E  0A1E               	xorlw	30	; case 82
  1857  001650  B4D8               	btfsc	status,2,c
  1858  001652  D7DF               	goto	l5166
  1859  001654  D0EA               	goto	l294
  1860  001656                     l5180:
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 218:                                     LCD_set_cursor(0,0);
  1864  001656  0E00               	movlw	0
  1865  001658  6E20               	movwf	LCD_set_cursor@row+1,c
  1866  00165A  0E00               	movlw	0
  1867  00165C  6E1F               	movwf	LCD_set_cursor@row,c
  1868  00165E  0E00               	movlw	0
  1869  001660  6E22               	movwf	LCD_set_cursor@column+1,c
  1870  001662  0E00               	movlw	0
  1871  001664  6E21               	movwf	LCD_set_cursor@column,c
  1872  001666  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1873                           
  1874                           ;main.c: 220:                                     DCMotorCenterLeft();
  1875  00166A  EC0E  F01B         	call	_DCMotorCenterLeft	;wreg free
  1876                           
  1877                           ;main.c: 221:                                     break;
  1878  00166E  D0DD               	goto	l294
  1879  001670                     l5184:
  1880                           
  1881                           ; BSR set to: 0
  1882                           ;main.c: 223:                                     LCD_set_cursor(0,0);
  1883  001670  0E00               	movlw	0
  1884  001672  6E20               	movwf	LCD_set_cursor@row+1,c
  1885  001674  0E00               	movlw	0
  1886  001676  6E1F               	movwf	LCD_set_cursor@row,c
  1887  001678  0E00               	movlw	0
  1888  00167A  6E22               	movwf	LCD_set_cursor@column+1,c
  1889  00167C  0E00               	movlw	0
  1890  00167E  6E21               	movwf	LCD_set_cursor@column,c
  1891  001680  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1892                           
  1893                           ;main.c: 225:                                     DCMotorCenterRight();
  1894  001684  EC0B  F01B         	call	_DCMotorCenterRight	;wreg free
  1895                           
  1896                           ;main.c: 226:                                     break;
  1897  001688  D0D0               	goto	l294
  1898  00168A                     l5188:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;main.c: 228:                                     LCD_set_cursor(0,0);
  1902  00168A  0E00               	movlw	0
  1903  00168C  6E20               	movwf	LCD_set_cursor@row+1,c
  1904  00168E  0E00               	movlw	0
  1905  001690  6E1F               	movwf	LCD_set_cursor@row,c
  1906  001692  0E00               	movlw	0
  1907  001694  6E22               	movwf	LCD_set_cursor@column+1,c
  1908  001696  0E00               	movlw	0
  1909  001698  6E21               	movwf	LCD_set_cursor@column,c
  1910  00169A  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1911  00169E  D780               	goto	l5148
  1912  0016A0                     l5194:
  1913                           
  1914                           ; BSR set to: 0
  1915  0016A0  51B8               	movf	(main@command+2)& (0+255),w,b
  1916  0016A2  6F98               	movwf	??_main& (0+255),b
  1917  0016A4  6B99               	clrf	(??_main+1)& (0+255),b
  1918                           
  1919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1920                           ; Switch size 1, requested type "simple"
  1921                           ; Number of cases is 1, Range of values is 0 to 0
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte            4     3 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  0016A6  5199               	movf	(??_main+1)& (0+255),w,b
  1927  0016A8  0A00               	xorlw	0	; case 0
  1928  0016AA  A4D8               	btfss	status,2,c
  1929  0016AC  D0BE               	goto	l294
  1930                           
  1931                           ; BSR set to: 0
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 3, Range of values is 70 to 82
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           10     6 (average)
  1937                           ;	Chosen strategy is simple_byte
  1938  0016AE  5198               	movf	??_main& (0+255),w,b
  1939  0016B0  0A46               	xorlw	70	; case 70
  1940  0016B2  B4D8               	btfsc	status,2,c
  1941  0016B4  D7EA               	goto	l5188
  1942  0016B6  0A0A               	xorlw	10	; case 76
  1943  0016B8  B4D8               	btfsc	status,2,c
  1944  0016BA  D7CD               	goto	l5180
  1945  0016BC  0A1E               	xorlw	30	; case 82
  1946  0016BE  B4D8               	btfsc	status,2,c
  1947  0016C0  D7D7               	goto	l5184
  1948  0016C2  D0B3               	goto	l294
  1949  0016C4                     l5198:
  1950                           
  1951                           ; BSR set to: 0
  1952  0016C4  51B7               	movf	(main@command+1)& (0+255),w,b
  1953  0016C6  6F98               	movwf	??_main& (0+255),b
  1954  0016C8  6B99               	clrf	(??_main+1)& (0+255),b
  1955                           
  1956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 1, Range of values is 0 to 0
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte            4     3 (average)
  1962                           ;	Chosen strategy is simple_byte
  1963  0016CA  5199               	movf	(??_main+1)& (0+255),w,b
  1964  0016CC  0A00               	xorlw	0	; case 0
  1965  0016CE  A4D8               	btfss	status,2,c
  1966  0016D0  D0AC               	goto	l294
  1967                           
  1968                           ; BSR set to: 0
  1969                           ; Switch size 1, requested type "simple"
  1970                           ; Number of cases is 3, Range of values is 66 to 83
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte           10     6 (average)
  1974                           ;	Chosen strategy is simple_byte
  1975  0016D2  5198               	movf	??_main& (0+255),w,b
  1976  0016D4  0A42               	xorlw	66	; case 66
  1977  0016D6  B4D8               	btfsc	status,2,c
  1978  0016D8  D7A9               	goto	l5178
  1979  0016DA  0A04               	xorlw	4	; case 70
  1980  0016DC  B4D8               	btfsc	status,2,c
  1981  0016DE  D763               	goto	l5152
  1982  0016E0  0A15               	xorlw	21	; case 83
  1983  0016E2  B4D8               	btfsc	status,2,c
  1984  0016E4  D7DD               	goto	l5194
  1985  0016E6  D0A1               	goto	l294
  1986  0016E8                     l5200:
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;main.c: 245:                             LCD_set_cursor(0,0);
  1990  0016E8  0E00               	movlw	0
  1991  0016EA  6E20               	movwf	LCD_set_cursor@row+1,c
  1992  0016EC  0E00               	movlw	0
  1993  0016EE  6E1F               	movwf	LCD_set_cursor@row,c
  1994  0016F0  0E00               	movlw	0
  1995  0016F2  6E22               	movwf	LCD_set_cursor@column+1,c
  1996  0016F4  0E00               	movlw	0
  1997  0016F6  6E21               	movwf	LCD_set_cursor@column,c
  1998  0016F8  EC40  F019         	call	_LCD_set_cursor	;wreg free
  1999                           
  2000                           ;main.c: 246:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2001  0016FC  0ECF               	movlw	low main@lcdDisplay
  2002  0016FE  0100               	movlb	0	; () banked
  2003  001700  6F86               	movwf	sprintf@s& (0+255),b
  2004  001702  0E00               	movlw	high main@lcdDisplay
  2005  001704  6F87               	movwf	(sprintf@s+1)& (0+255),b
  2006  001706  0E2D               	movlw	low STR_2
  2007  001708  6F88               	movwf	sprintf@fmt& (0+255),b
  2008  00170A  0E10               	movlw	high STR_2
  2009  00170C  6F89               	movwf	(sprintf@fmt+1)& (0+255),b
  2010  00170E  0E00               	movlw	0
  2011  001710  6F8B               	movwf	(?_sprintf+5)& (0+255),b
  2012  001712  0E10               	movlw	16
  2013  001714  6F8A               	movwf	(?_sprintf+4)& (0+255),b
  2014  001716  0EB8               	movlw	low (main@command+2)
  2015  001718  6F8C               	movwf	(?_sprintf+6)& (0+255),b
  2016  00171A  0E00               	movlw	high (main@command+2)
  2017  00171C  6F8D               	movwf	(?_sprintf+7)& (0+255),b
  2018  00171E  ECA0  F018         	call	_sprintf	;wreg free
  2019  001722                     l5204:
  2020                           
  2021                           ;main.c: 247:                             LCD_write_str(lcdDisplay);
  2022  001722  0ECF               	movlw	low main@lcdDisplay
  2023  001724  6E1E               	movwf	LCD_write_str@str,c
  2024  001726  0E00               	movlw	high main@lcdDisplay
  2025  001728  6E1F               	movwf	LCD_write_str@str+1,c
  2026  00172A  EC67  F019         	call	_LCD_write_str	;wreg free
  2027                           
  2028                           ;main.c: 248:                             break;
  2029  00172E  D07D               	goto	l294
  2030  001730                     l5206:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;main.c: 250:                             LCD_set_cursor(1,0);
  2034  001730  0E00               	movlw	0
  2035  001732  6E20               	movwf	LCD_set_cursor@row+1,c
  2036  001734  0E01               	movlw	1
  2037  001736  6E1F               	movwf	LCD_set_cursor@row,c
  2038  001738  0E00               	movlw	0
  2039  00173A  6E22               	movwf	LCD_set_cursor@column+1,c
  2040  00173C  0E00               	movlw	0
  2041  00173E  6E21               	movwf	LCD_set_cursor@column,c
  2042  001740  EC40  F019         	call	_LCD_set_cursor	;wreg free
  2043                           
  2044                           ;main.c: 251:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2045  001744  0ECF               	movlw	low main@lcdDisplay
  2046  001746  0100               	movlb	0	; () banked
  2047  001748  6F86               	movwf	sprintf@s& (0+255),b
  2048  00174A  0E00               	movlw	high main@lcdDisplay
  2049  00174C  6F87               	movwf	(sprintf@s+1)& (0+255),b
  2050  00174E  0E2D               	movlw	low STR_2
  2051  001750  6F88               	movwf	sprintf@fmt& (0+255),b
  2052  001752  0E10               	movlw	high STR_2
  2053  001754  6F89               	movwf	(sprintf@fmt+1)& (0+255),b
  2054  001756  0E00               	movlw	0
  2055  001758  6F8B               	movwf	(?_sprintf+5)& (0+255),b
  2056  00175A  0E10               	movlw	16
  2057  00175C  6F8A               	movwf	(?_sprintf+4)& (0+255),b
  2058  00175E  0EB8               	movlw	low (main@command+2)
  2059  001760  6F8C               	movwf	(?_sprintf+6)& (0+255),b
  2060  001762  0E00               	movlw	high (main@command+2)
  2061  001764  6F8D               	movwf	(?_sprintf+7)& (0+255),b
  2062  001766  ECA0  F018         	call	_sprintf	;wreg free
  2063  00176A  D7DB               	goto	l5204
  2064  00176C                     l5212:
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;main.c: 255:                             LCD_set_cursor(2,0);
  2068  00176C  0E00               	movlw	0
  2069  00176E  6E20               	movwf	LCD_set_cursor@row+1,c
  2070  001770  0E02               	movlw	2
  2071  001772  6E1F               	movwf	LCD_set_cursor@row,c
  2072  001774  0E00               	movlw	0
  2073  001776  6E22               	movwf	LCD_set_cursor@column+1,c
  2074  001778  0E00               	movlw	0
  2075  00177A  6E21               	movwf	LCD_set_cursor@column,c
  2076  00177C  EC40  F019         	call	_LCD_set_cursor	;wreg free
  2077                           
  2078                           ;main.c: 256:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2079  001780  0ECF               	movlw	low main@lcdDisplay
  2080  001782  0100               	movlb	0	; () banked
  2081  001784  6F86               	movwf	sprintf@s& (0+255),b
  2082  001786  0E00               	movlw	high main@lcdDisplay
  2083  001788  6F87               	movwf	(sprintf@s+1)& (0+255),b
  2084  00178A  0E2D               	movlw	low STR_2
  2085  00178C  6F88               	movwf	sprintf@fmt& (0+255),b
  2086  00178E  0E10               	movlw	high STR_2
  2087  001790  6F89               	movwf	(sprintf@fmt+1)& (0+255),b
  2088  001792  0E00               	movlw	0
  2089  001794  6F8B               	movwf	(?_sprintf+5)& (0+255),b
  2090  001796  0E10               	movlw	16
  2091  001798  6F8A               	movwf	(?_sprintf+4)& (0+255),b
  2092  00179A  0EB8               	movlw	low (main@command+2)
  2093  00179C  6F8C               	movwf	(?_sprintf+6)& (0+255),b
  2094  00179E  0E00               	movlw	high (main@command+2)
  2095  0017A0  6F8D               	movwf	(?_sprintf+7)& (0+255),b
  2096  0017A2  ECA0  F018         	call	_sprintf	;wreg free
  2097  0017A6  D7BD               	goto	l5204
  2098  0017A8                     l5218:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;main.c: 260:                             LCD_set_cursor(3,0);
  2102  0017A8  0E00               	movlw	0
  2103  0017AA  6E20               	movwf	LCD_set_cursor@row+1,c
  2104  0017AC  0E03               	movlw	3
  2105  0017AE  6E1F               	movwf	LCD_set_cursor@row,c
  2106  0017B0  0E00               	movlw	0
  2107  0017B2  6E22               	movwf	LCD_set_cursor@column+1,c
  2108  0017B4  0E00               	movlw	0
  2109  0017B6  6E21               	movwf	LCD_set_cursor@column,c
  2110  0017B8  EC40  F019         	call	_LCD_set_cursor	;wreg free
  2111                           
  2112                           ;main.c: 261:                             sprintf(lcdDisplay,"%.*s", 16, command + 2);
  2113  0017BC  0ECF               	movlw	low main@lcdDisplay
  2114  0017BE  0100               	movlb	0	; () banked
  2115  0017C0  6F86               	movwf	sprintf@s& (0+255),b
  2116  0017C2  0E00               	movlw	high main@lcdDisplay
  2117  0017C4  6F87               	movwf	(sprintf@s+1)& (0+255),b
  2118  0017C6  0E2D               	movlw	low STR_2
  2119  0017C8  6F88               	movwf	sprintf@fmt& (0+255),b
  2120  0017CA  0E10               	movlw	high STR_2
  2121  0017CC  6F89               	movwf	(sprintf@fmt+1)& (0+255),b
  2122  0017CE  0E00               	movlw	0
  2123  0017D0  6F8B               	movwf	(?_sprintf+5)& (0+255),b
  2124  0017D2  0E10               	movlw	16
  2125  0017D4  6F8A               	movwf	(?_sprintf+4)& (0+255),b
  2126  0017D6  0EB8               	movlw	low (main@command+2)
  2127  0017D8  6F8C               	movwf	(?_sprintf+6)& (0+255),b
  2128  0017DA  0E00               	movlw	high (main@command+2)
  2129  0017DC  6F8D               	movwf	(?_sprintf+7)& (0+255),b
  2130  0017DE  ECA0  F018         	call	_sprintf	;wreg free
  2131  0017E2  D79F               	goto	l5204
  2132  0017E4                     l5226:
  2133                           
  2134                           ; BSR set to: 0
  2135  0017E4  51B7               	movf	(main@command+1)& (0+255),w,b
  2136  0017E6  6F98               	movwf	??_main& (0+255),b
  2137  0017E8  6B99               	clrf	(??_main+1)& (0+255),b
  2138                           
  2139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2140                           ; Switch size 1, requested type "simple"
  2141                           ; Number of cases is 1, Range of values is 0 to 0
  2142                           ; switch strategies available:
  2143                           ; Name         Instructions Cycles
  2144                           ; simple_byte            4     3 (average)
  2145                           ;	Chosen strategy is simple_byte
  2146  0017EA  5199               	movf	(??_main+1)& (0+255),w,b
  2147  0017EC  0A00               	xorlw	0	; case 0
  2148  0017EE  A4D8               	btfss	status,2,c
  2149  0017F0  D01C               	goto	l294
  2150                           
  2151                           ; BSR set to: 0
  2152                           ; Switch size 1, requested type "simple"
  2153                           ; Number of cases is 4, Range of values is 49 to 52
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; simple_byte           13     7 (average)
  2157                           ;	Chosen strategy is simple_byte
  2158  0017F2  5198               	movf	??_main& (0+255),w,b
  2159  0017F4  0A31               	xorlw	49	; case 49
  2160  0017F6  B4D8               	btfsc	status,2,c
  2161  0017F8  D777               	goto	l5200
  2162  0017FA  0A03               	xorlw	3	; case 50
  2163  0017FC  B4D8               	btfsc	status,2,c
  2164  0017FE  D798               	goto	l5206
  2165  001800  0A01               	xorlw	1	; case 51
  2166  001802  B4D8               	btfsc	status,2,c
  2167  001804  D7B3               	goto	l5212
  2168  001806  0A07               	xorlw	7	; case 52
  2169  001808  B4D8               	btfsc	status,2,c
  2170  00180A  D7CE               	goto	l5218
  2171  00180C  D00E               	goto	l294
  2172  00180E                     l5230:
  2173                           
  2174                           ; BSR set to: 0
  2175  00180E  51B6               	movf	main@command& (0+255),w,b
  2176  001810  6F98               	movwf	??_main& (0+255),b
  2177  001812  6B99               	clrf	(??_main+1)& (0+255),b
  2178                           
  2179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2180                           ; Switch size 1, requested type "simple"
  2181                           ; Number of cases is 1, Range of values is 0 to 0
  2182                           ; switch strategies available:
  2183                           ; Name         Instructions Cycles
  2184                           ; simple_byte            4     3 (average)
  2185                           ;	Chosen strategy is simple_byte
  2186  001814  5199               	movf	(??_main+1)& (0+255),w,b
  2187  001816  0A00               	xorlw	0	; case 0
  2188  001818  A4D8               	btfss	status,2,c
  2189  00181A  D007               	goto	l294
  2190                           
  2191                           ; BSR set to: 0
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 2, Range of values is 68 to 77
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte            7     4 (average)
  2197                           ;	Chosen strategy is simple_byte
  2198  00181C  5198               	movf	??_main& (0+255),w,b
  2199  00181E  0A44               	xorlw	68	; case 68
  2200  001820  B4D8               	btfsc	status,2,c
  2201  001822  D7E0               	goto	l5226
  2202  001824  0A09               	xorlw	9	; case 77
  2203  001826  B4D8               	btfsc	status,2,c
  2204  001828  D74D               	goto	l5198
  2205  00182A                     l294:
  2206                           
  2207                           ;main.c: 273:         if(key_was_pressed){
  2208                           
  2209                           ; BSR set to: 0
  2210  00182A  0100               	movlb	0	; () banked
  2211  00182C  51FB               	movf	_key_was_pressed& (0+255),w,b	;volatile
  2212  00182E  B4D8               	btfsc	status,2,c
  2213  001830  D43B               	goto	l5020
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 274:             key_was_pressed = 0;
  2217  001832  0E00               	movlw	0
  2218  001834  6FFB               	movwf	_key_was_pressed& (0+255),b	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;main.c: 275:             unsigned char keypress = (PORTB & 0xF0) >> 4;
  2222  001836  3881               	swapf	3969,w,c	;volatile
  2223  001838  0B0F               	andlw	15
  2224  00183A  0B0F               	andlw	15
  2225  00183C  6FE1               	movwf	main@keypress& (0+255),b
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;main.c: 276:             sprintf(uart_char_to_send, "%c%c\n", 'K', keys[keypress]);
  2229  00183E  0E9D               	movlw	low main@uart_char_to_send
  2230  001840  6F86               	movwf	sprintf@s& (0+255),b
  2231  001842  0E00               	movlw	high main@uart_char_to_send
  2232  001844  6F87               	movwf	(sprintf@s+1)& (0+255),b
  2233  001846  0E27               	movlw	low STR_6
  2234  001848  6F88               	movwf	sprintf@fmt& (0+255),b
  2235  00184A  0E10               	movlw	high STR_6
  2236  00184C  6F89               	movwf	(sprintf@fmt+1)& (0+255),b
  2237  00184E  0E00               	movlw	0
  2238  001850  6F8B               	movwf	(?_sprintf+5)& (0+255),b
  2239  001852  0E4B               	movlw	75
  2240  001854  6F8A               	movwf	(?_sprintf+4)& (0+255),b
  2241  001856  0E01               	movlw	low _keys
  2242  001858  25E1               	addwf	main@keypress& (0+255),w,b
  2243  00185A  6EF6               	movwf	tblptrl,c
  2244  00185C  6AF7               	clrf	tblptrh,c
  2245  00185E  0E10               	movlw	high _keys
  2246  001860  22F7               	addwfc	tblptrh,f,c
  2247  001862                     	if	0	;There are less than 3 active tblptr bytes
  2248  001862                     	endif
  2249  001862  0008               	tblrd		*
  2250  001864  50F5               	movf	tablat,w,c
  2251  001866  6F8C               	movwf	(?_sprintf+6)& (0+255),b
  2252  001868  6B8D               	clrf	(?_sprintf+7)& (0+255),b
  2253  00186A  ECA0  F018         	call	_sprintf	;wreg free
  2254                           
  2255                           ;main.c: 277:             UART_send_string(uart_char_to_send);
  2256  00186E  0E9D               	movlw	low main@uart_char_to_send
  2257  001870  6E1C               	movwf	UART_send_string@message,c
  2258  001872  0E00               	movlw	high main@uart_char_to_send
  2259  001874  6E1D               	movwf	UART_send_string@message+1,c
  2260  001876  EC9C  F016         	call	_UART_send_string	;wreg free
  2261  00187A  D416               	goto	l5020
  2262  00187C                     __end_of_main:
  2263                           	opt callstack 0
  2264                           
  2265 ;; *************** function _sprintf *****************
  2266 ;; Defined at:
  2267 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2270 ;;		 -> main@uart_char_to_send(25), main@lcdDisplay(16), 
  2271 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2272 ;;		 -> STR_6(6), STR_5(5), STR_4(5), STR_3(5), 
  2273 ;;		 -> STR_2(5), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  f               6   18[BANK0 ] struct _IO_FILE
  2276 ;;  ap              2   16[BANK0 ] PTR void [1]
  2277 ;;		 -> ?_sprintf(2), 
  2278 ;;  ret             2    0        int 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2    6[BANK0 ] int 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2288 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;Total ram usage:       18 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:   13
  2295 ;; This function calls:
  2296 ;;		_vfprintf
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text1
  2303  003140                     __ptext1:
  2304                           	opt callstack 0
  2305  003140                     _sprintf:
  2306                           	opt callstack 17
  2307                           
  2308                           ;incstack = 0
  2309  003140  0E8A               	movlw	low (?_sprintf+4)
  2310  003142  0100               	movlb	0	; () banked
  2311  003144  6F90               	movwf	sprintf@ap& (0+255),b
  2312  003146  0E00               	movlw	high (?_sprintf+4)
  2313  003148  6F91               	movwf	(sprintf@ap+1)& (0+255),b
  2314  00314A  C086  F092         	movff	sprintf@s,sprintf@f
  2315  00314E  C087  F093         	movff	sprintf@s+1,sprintf@f+1
  2316                           
  2317                           ; BSR set to: 0
  2318  003152  0E00               	movlw	0
  2319  003154  6F95               	movwf	(sprintf@f+3)& (0+255),b
  2320  003156  0E00               	movlw	0
  2321  003158  6F94               	movwf	(sprintf@f+2)& (0+255),b
  2322                           
  2323                           ; BSR set to: 0
  2324  00315A  0E00               	movlw	0
  2325  00315C  6F97               	movwf	(sprintf@f+5)& (0+255),b
  2326  00315E  0E00               	movlw	0
  2327  003160  6F96               	movwf	(sprintf@f+4)& (0+255),b
  2328                           
  2329                           ; BSR set to: 0
  2330  003162  0E92               	movlw	low sprintf@f
  2331  003164  6F80               	movwf	vfprintf@fp& (0+255),b
  2332  003166  0E00               	movlw	high sprintf@f
  2333  003168  6F81               	movwf	(vfprintf@fp+1)& (0+255),b
  2334  00316A  C088  F082         	movff	sprintf@fmt,vfprintf@fmt
  2335  00316E  C089  F083         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2336  003172  0E90               	movlw	low sprintf@ap
  2337  003174  6F84               	movwf	vfprintf@ap& (0+255),b
  2338  003176  0E00               	movlw	high sprintf@ap
  2339  003178  6F85               	movwf	(vfprintf@ap+1)& (0+255),b
  2340  00317A  ECC9  F018         	call	_vfprintf	;wreg free
  2341  00317E  0100               	movlb	0	; () banked
  2342  003180  5194               	movf	(sprintf@f+2)& (0+255),w,b
  2343  003182  2586               	addwf	sprintf@s& (0+255),w,b
  2344  003184  6ED9               	movwf	fsr2l,c
  2345  003186  5195               	movf	(sprintf@f+3)& (0+255),w,b
  2346  003188  2187               	addwfc	(sprintf@s+1)& (0+255),w,b
  2347  00318A  6EDA               	movwf	fsr2h,c
  2348  00318C  0E00               	movlw	0
  2349  00318E  6EDF               	movwf	indf2,c
  2350                           
  2351                           ; BSR set to: 0
  2352  003190  0012               	return		;funcret
  2353  003192                     __end_of_sprintf:
  2354                           	opt callstack 0
  2355                           
  2356 ;; *************** function _vfprintf *****************
  2357 ;; Defined at:
  2358 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2361 ;;		 -> sprintf@f(6), 
  2362 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2363 ;;		 -> STR_6(6), STR_5(5), STR_4(5), STR_3(5), 
  2364 ;;		 -> STR_2(5), 
  2365 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2366 ;;		 -> sprintf@ap(2), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  2369 ;;		 -> STR_6(6), STR_5(5), STR_4(5), STR_3(5), 
  2370 ;;		 -> STR_2(5), 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2    0[BANK0 ] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        8 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:   12
  2387 ;; This function calls:
  2388 ;;		_vfpfcnvrt
  2389 ;; This function is called by:
  2390 ;;		_sprintf
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text2
  2395  003192                     __ptext2:
  2396                           	opt callstack 0
  2397  003192                     _vfprintf:
  2398                           	opt callstack 17
  2399                           
  2400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;incstack = 0
  2404  003192  C082  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  2405  003196  C083  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2406                           
  2407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2408  00319A  0E00               	movlw	0
  2409  00319C  6E53               	movwf	_nout+1,c
  2410  00319E  0E00               	movlw	0
  2411  0031A0  6E52               	movwf	_nout,c
  2412                           
  2413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2414  0031A2  D012               	goto	l4980
  2415  0031A4                     l4978:
  2416                           
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2418  0031A4  C080  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2419  0031A8  C081  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2420  0031AC  0E50               	movlw	low vfprintf@cfmt
  2421  0031AE  6E41               	movwf	vfpfcnvrt@fmt,c
  2422  0031B0  0E00               	movlw	high vfprintf@cfmt
  2423  0031B2  6E42               	movwf	vfpfcnvrt@fmt+1,c
  2424  0031B4  C084  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2425  0031B8  C085  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2426  0031BC  EC3E  F00C         	call	_vfpfcnvrt	;wreg free
  2427  0031C0  503F               	movf	?_vfpfcnvrt,w,c
  2428  0031C2  2652               	addwf	_nout,f,c
  2429  0031C4  5040               	movf	?_vfpfcnvrt+1,w,c
  2430  0031C6  2253               	addwfc	_nout+1,f,c
  2431  0031C8                     l4980:
  2432                           
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2434  0031C8  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  2435  0031CC  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2436  0031D0                     	if	0	;tblptru may be non-zero
  2437  0031D0                     	endif
  2438  0031D0                     	if	0	;tblptru may be non-zero
  2439  0031D0                     	endif
  2440  0031D0  0008               	tblrd		*
  2441  0031D2  50F5               	movf	tablat,w,c
  2442  0031D4  0900               	iorlw	0
  2443  0031D6  A4D8               	btfss	status,2,c
  2444  0031D8  D7E5               	goto	l4978
  2445                           
  2446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2447  0031DA  C052  F080         	movff	_nout,?_vfprintf
  2448  0031DE  C053  F081         	movff	_nout+1,?_vfprintf+1
  2449  0031E2  0012               	return		;funcret
  2450  0031E4                     __end_of_vfprintf:
  2451                           	opt callstack 0
  2452                           
  2453 ;; *************** function _vfpfcnvrt *****************
  2454 ;; Defined at:
  2455 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2458 ;;		 -> sprintf@f(6), 
  2459 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2460 ;;		 -> vfprintf@cfmt(2), 
  2461 ;;  ap              2   66[COMRAM] PTR PTR void 
  2462 ;;		 -> sprintf@ap(2), 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  llu             8    0        unsigned long long 
  2465 ;;  ll              8    0        long long 
  2466 ;;  f               4    0        long long 
  2467 ;;  vp              3    0        PTR void 
  2468 ;;  ct              3    0        unsigned char [3]
  2469 ;;  cp              2   72[COMRAM] PTR unsigned char 
  2470 ;;		 -> ?_sprintf(2), main@command(25), 
  2471 ;;  i               2    0        int 
  2472 ;;  done            2    0        int 
  2473 ;;  c               1   78[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2   62[COMRAM] int 
  2476 ;; Registers used:
  2477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:       17 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:   11
  2490 ;; This function calls:
  2491 ;;		_atoi
  2492 ;;		_ctoa
  2493 ;;		_fputc
  2494 ;;		_isdigit
  2495 ;;		_stoa
  2496 ;; This function is called by:
  2497 ;;		_vfprintf
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text3
  2502  00187C                     __ptext3:
  2503                           	opt callstack 0
  2504  00187C                     _vfpfcnvrt:
  2505                           	opt callstack 17
  2506                           
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2508                           
  2509                           ;incstack = 0
  2510  00187C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511  001880  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512  001884  CFDE FFF6          	movff	postinc2,tblptrl
  2513  001888  CFDD FFF7          	movff	postdec2,tblptrh
  2514  00188C                     	if	0	;tblptru may be non-zero
  2515  00188C                     	endif
  2516  00188C                     	if	0	;tblptru may be non-zero
  2517  00188C                     	endif
  2518  00188C  0008               	tblrd		*
  2519  00188E  50F5               	movf	tablat,w,c
  2520  001890  0A25               	xorlw	37
  2521  001892  A4D8               	btfss	status,2,c
  2522  001894  D18D               	goto	l3410
  2523                           
  2524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2525  001896  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2526  00189A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2527  00189E  2ADE               	incf	postinc2,f,c
  2528  0018A0  0E00               	movlw	0
  2529  0018A2  22DD               	addwfc	postdec2,f,c
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2532  0018A4  0E00               	movlw	0
  2533  0018A6  6E55               	movwf	_width+1,c
  2534  0018A8  0E00               	movlw	0
  2535  0018AA  6E54               	movwf	_width,c
  2536  0018AC  C054  F058         	movff	_width,_flags
  2537  0018B0  C055  F059         	movff	_width+1,_flags+1
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2540  0018B4  6856               	setf	_prec,c
  2541  0018B6  6857               	setf	_prec+1,c
  2542                           
  2543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  2544  0018B8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2545  0018BC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2546  0018C0  CFDE FFF6          	movff	postinc2,tblptrl
  2547  0018C4  CFDD FFF7          	movff	postdec2,tblptrh
  2548  0018C8                     	if	0	;tblptru may be non-zero
  2549  0018C8                     	endif
  2550  0018C8                     	if	0	;tblptru may be non-zero
  2551  0018C8                     	endif
  2552  0018C8  0008               	tblrd		*
  2553  0018CA  50F5               	movf	tablat,w,c
  2554  0018CC  0A2A               	xorlw	42
  2555  0018CE  A4D8               	btfss	status,2,c
  2556  0018D0  D023               	goto	l3348
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  2559  0018D2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2560  0018D6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2561  0018DA  2ADE               	incf	postinc2,f,c
  2562  0018DC  0E00               	movlw	0
  2563  0018DE  22DD               	addwfc	postdec2,f,c
  2564                           
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2566  0018E0  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2567  0018E4  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2568  0018E8  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2569  0018EC  0E02               	movlw	2
  2570  0018EE  26DE               	addwf	postinc2,f,c
  2571  0018F0  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2572  0018F4  0E00               	movlw	0
  2573  0018F6  22DD               	addwfc	postdec2,f,c
  2574  0018F8  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2575  0018FC  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2576  001900  CFDE F054          	movff	postinc2,_width
  2577  001904  CFDD F055          	movff	postdec2,_width+1
  2578                           
  2579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  2580  001908  AE55               	btfss	_width+1,7,c
  2581  00190A  D03F               	goto	u2820
  2582                           
  2583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  2584  00190C  8058               	bsf	_flags,0,c
  2585                           
  2586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  2587  00190E  6C54               	negf	_width,c
  2588  001910  1E55               	comf	_width+1,f,c
  2589  001912  B0D8               	btfsc	status,0,c
  2590  001914  2A55               	incf	_width+1,f,c
  2591  001916  D039               	goto	u2820
  2592  001918                     l3348:
  2593                           
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  2595  001918  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2596  00191C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2597  001920  CFDE F022          	movff	postinc2,atoi@s
  2598  001924  CFDD F023          	movff	postdec2,atoi@s+1
  2599  001928  EC9A  F014         	call	_atoi	;wreg free
  2600  00192C  C022  F054         	movff	?_atoi,_width
  2601  001930  C023  F055         	movff	?_atoi+1,_width+1
  2602                           
  2603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2604  001934  D007               	goto	l3352
  2605  001936                     l3350:
  2606                           
  2607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  2608  001936  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2609  00193A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2610  00193E  2ADE               	incf	postinc2,f,c
  2611  001940  0E00               	movlw	0
  2612  001942  22DD               	addwfc	postdec2,f,c
  2613  001944                     l3352:
  2614  001944  0ED0               	movlw	208
  2615  001946  6E45               	movwf	??_vfpfcnvrt& (0+255),c
  2616  001948  0EFF               	movlw	255
  2617  00194A  6E46               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2618  00194C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2619  001950  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2620  001954  CFDE FFF6          	movff	postinc2,tblptrl
  2621  001958  CFDD FFF7          	movff	postdec2,tblptrh
  2622  00195C                     	if	0	;tblptru may be non-zero
  2623  00195C                     	endif
  2624  00195C                     	if	0	;tblptru may be non-zero
  2625  00195C                     	endif
  2626  00195C  0008               	tblrd		*
  2627  00195E  50F5               	movf	tablat,w,c
  2628  001960  6E47               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2629  001962  6A48               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2630  001964  5045               	movf	??_vfpfcnvrt,w,c
  2631  001966  2647               	addwf	??_vfpfcnvrt+2,f,c
  2632  001968  5046               	movf	??_vfpfcnvrt+1,w,c
  2633  00196A  2248               	addwfc	??_vfpfcnvrt+3,f,c
  2634  00196C  5048               	movf	??_vfpfcnvrt+3,w,c
  2635  00196E  E106               	bnz	u2800
  2636  001970  0E0A               	movlw	10
  2637  001972  5C47               	subwf	??_vfpfcnvrt+2,w,c
  2638  001974  B0D8               	btfsc	status,0,c
  2639  001976  D002               	goto	u2800
  2640  001978  0E01               	movlw	1
  2641  00197A  D001               	goto	u2810
  2642  00197C                     u2800:
  2643  00197C  0E00               	movlw	0
  2644  00197E                     u2810:
  2645  00197E  6E4B               	movwf	_vfpfcnvrt$1021,c
  2646  001980  6A4C               	clrf	_vfpfcnvrt$1021+1,c
  2647  001982  504B               	movf	_vfpfcnvrt$1021,w,c
  2648  001984  104C               	iorwf	_vfpfcnvrt$1021+1,w,c
  2649  001986  A4D8               	btfss	status,2,c
  2650  001988  D7D6               	goto	l3350
  2651  00198A                     u2820:
  2652                           
  2653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2654  00198A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2655  00198E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2656  001992  CFDE FFF6          	movff	postinc2,tblptrl
  2657  001996  CFDD FFF7          	movff	postdec2,tblptrh
  2658  00199A                     	if	0	;tblptru may be non-zero
  2659  00199A                     	endif
  2660  00199A                     	if	0	;tblptru may be non-zero
  2661  00199A                     	endif
  2662  00199A  0008               	tblrd		*
  2663  00199C  50F5               	movf	tablat,w,c
  2664  00199E  0A2E               	xorlw	46
  2665  0019A0  A4D8               	btfss	status,2,c
  2666  0019A2  D06D               	goto	u2870
  2667                           
  2668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2669  0019A4  0E00               	movlw	0
  2670  0019A6  6E57               	movwf	_prec+1,c
  2671  0019A8  0E00               	movlw	0
  2672  0019AA  6E56               	movwf	_prec,c
  2673                           
  2674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2675  0019AC  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  0019B0  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  0019B4  2ADE               	incf	postinc2,f,c
  2678  0019B6  0E00               	movlw	0
  2679  0019B8  22DD               	addwfc	postdec2,f,c
  2680                           
  2681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2682  0019BA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2683  0019BE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2684  0019C2  CFDE FFF6          	movff	postinc2,tblptrl
  2685  0019C6  CFDD FFF7          	movff	postdec2,tblptrh
  2686  0019CA                     	if	0	;tblptru may be non-zero
  2687  0019CA                     	endif
  2688  0019CA                     	if	0	;tblptru may be non-zero
  2689  0019CA                     	endif
  2690  0019CA  0008               	tblrd		*
  2691  0019CC  50F5               	movf	tablat,w,c
  2692  0019CE  0A2A               	xorlw	42
  2693  0019D0  A4D8               	btfss	status,2,c
  2694  0019D2  D01C               	goto	l3368
  2695                           
  2696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2697  0019D4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698  0019D8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699  0019DC  2ADE               	incf	postinc2,f,c
  2700  0019DE  0E00               	movlw	0
  2701  0019E0  22DD               	addwfc	postdec2,f,c
  2702                           
  2703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2704  0019E2  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2705  0019E6  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2706  0019EA  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2707  0019EE  0E02               	movlw	2
  2708  0019F0  26DE               	addwf	postinc2,f,c
  2709  0019F2  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2710  0019F6  0E00               	movlw	0
  2711  0019F8  22DD               	addwfc	postdec2,f,c
  2712  0019FA  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2713  0019FE  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2714  001A02  CFDE F056          	movff	postinc2,_prec
  2715  001A06  CFDD F057          	movff	postdec2,_prec+1
  2716                           
  2717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2718  001A0A  D039               	goto	u2870
  2719  001A0C                     l3368:
  2720                           
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2722  001A0C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2723  001A10  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2724  001A14  CFDE F022          	movff	postinc2,atoi@s
  2725  001A18  CFDD F023          	movff	postdec2,atoi@s+1
  2726  001A1C  EC9A  F014         	call	_atoi	;wreg free
  2727  001A20  C022  F056         	movff	?_atoi,_prec
  2728  001A24  C023  F057         	movff	?_atoi+1,_prec+1
  2729                           
  2730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2731  001A28  D007               	goto	l3372
  2732  001A2A                     l3370:
  2733                           
  2734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2735  001A2A  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2736  001A2E  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2737  001A32  2ADE               	incf	postinc2,f,c
  2738  001A34  0E00               	movlw	0
  2739  001A36  22DD               	addwfc	postdec2,f,c
  2740  001A38                     l3372:
  2741  001A38  0ED0               	movlw	208
  2742  001A3A  6E45               	movwf	??_vfpfcnvrt& (0+255),c
  2743  001A3C  0EFF               	movlw	255
  2744  001A3E  6E46               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2745  001A40  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2746  001A44  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2747  001A48  CFDE FFF6          	movff	postinc2,tblptrl
  2748  001A4C  CFDD FFF7          	movff	postdec2,tblptrh
  2749  001A50                     	if	0	;tblptru may be non-zero
  2750  001A50                     	endif
  2751  001A50                     	if	0	;tblptru may be non-zero
  2752  001A50                     	endif
  2753  001A50  0008               	tblrd		*
  2754  001A52  50F5               	movf	tablat,w,c
  2755  001A54  6E47               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2756  001A56  6A48               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2757  001A58  5045               	movf	??_vfpfcnvrt,w,c
  2758  001A5A  2647               	addwf	??_vfpfcnvrt+2,f,c
  2759  001A5C  5046               	movf	??_vfpfcnvrt+1,w,c
  2760  001A5E  2248               	addwfc	??_vfpfcnvrt+3,f,c
  2761  001A60  5048               	movf	??_vfpfcnvrt+3,w,c
  2762  001A62  E106               	bnz	u2850
  2763  001A64  0E0A               	movlw	10
  2764  001A66  5C47               	subwf	??_vfpfcnvrt+2,w,c
  2765  001A68  B0D8               	btfsc	status,0,c
  2766  001A6A  D002               	goto	u2850
  2767  001A6C  0E01               	movlw	1
  2768  001A6E  D001               	goto	u2860
  2769  001A70                     u2850:
  2770  001A70  0E00               	movlw	0
  2771  001A72                     u2860:
  2772  001A72  6E4D               	movwf	_vfpfcnvrt$1022,c
  2773  001A74  6A4E               	clrf	_vfpfcnvrt$1022+1,c
  2774  001A76  504D               	movf	_vfpfcnvrt$1022,w,c
  2775  001A78  104E               	iorwf	_vfpfcnvrt$1022+1,w,c
  2776  001A7A  A4D8               	btfss	status,2,c
  2777  001A7C  D7D6               	goto	l3370
  2778  001A7E                     u2870:
  2779                           
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2781  001A7E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2782  001A82  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2783  001A86  CFDE FFF6          	movff	postinc2,tblptrl
  2784  001A8A  CFDD FFF7          	movff	postdec2,tblptrh
  2785  001A8E                     	if	0	;tblptru may be non-zero
  2786  001A8E                     	endif
  2787  001A8E                     	if	0	;tblptru may be non-zero
  2788  001A8E                     	endif
  2789  001A8E  0008               	tblrd		*
  2790  001A90  50F5               	movf	tablat,w,c
  2791  001A92  0A63               	xorlw	99
  2792  001A94  A4D8               	btfss	status,2,c
  2793  001A96  D026               	goto	l3386
  2794                           
  2795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2796  001A98  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2797  001A9C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2798  001AA0  2ADE               	incf	postinc2,f,c
  2799  001AA2  0E00               	movlw	0
  2800  001AA4  22DD               	addwfc	postdec2,f,c
  2801                           
  2802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2803  001AA6  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2804  001AAA  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2805  001AAE  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2806  001AB2  0E02               	movlw	2
  2807  001AB4  26DE               	addwf	postinc2,f,c
  2808  001AB6  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2809  001ABA  0E00               	movlw	0
  2810  001ABC  22DD               	addwfc	postdec2,f,c
  2811  001ABE  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2812  001AC2  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2813  001AC6  50DF               	movf	indf2,w,c
  2814  001AC8  6E4F               	movwf	vfpfcnvrt@c,c
  2815                           
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2817  001ACA  C03F  F03A         	movff	vfpfcnvrt@fp,ctoa@fp
  2818  001ACE  C040  F03B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2819  001AD2  C04F  F03C         	movff	vfpfcnvrt@c,ctoa@c
  2820  001AD6  ECF2  F018         	call	_ctoa	;wreg free
  2821  001ADA  C03A  F03F         	movff	?_ctoa,?_vfpfcnvrt
  2822  001ADE  C03B  F040         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2823  001AE2  0012               	return	
  2824  001AE4                     l3386:
  2825                           
  2826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
  2827  001AE4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2828  001AE8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829  001AEC  CFDE FFF6          	movff	postinc2,tblptrl
  2830  001AF0  CFDD FFF7          	movff	postdec2,tblptrh
  2831  001AF4                     	if	0	;tblptru may be non-zero
  2832  001AF4                     	endif
  2833  001AF4                     	if	0	;tblptru may be non-zero
  2834  001AF4                     	endif
  2835  001AF4  0008               	tblrd		*
  2836  001AF6  50F5               	movf	tablat,w,c
  2837  001AF8  0A73               	xorlw	115
  2838  001AFA  A4D8               	btfss	status,2,c
  2839  001AFC  D02A               	goto	l3394
  2840                           
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
  2842  001AFE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2843  001B02  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2844  001B06  2ADE               	incf	postinc2,f,c
  2845  001B08  0E00               	movlw	0
  2846  001B0A  22DD               	addwfc	postdec2,f,c
  2847                           
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2849  001B0C  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2850  001B10  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2851  001B14  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2852  001B18  0E02               	movlw	2
  2853  001B1A  26DE               	addwf	postinc2,f,c
  2854  001B1C  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2855  001B20  0E00               	movlw	0
  2856  001B22  22DD               	addwfc	postdec2,f,c
  2857  001B24  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2858  001B28  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2859  001B2C  CFDE F049          	movff	postinc2,vfpfcnvrt@cp
  2860  001B30  CFDD F04A          	movff	postdec2,vfpfcnvrt@cp+1
  2861                           
  2862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
  2863  001B34  C03F  F028         	movff	vfpfcnvrt@fp,stoa@fp
  2864  001B38  C040  F029         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2865  001B3C  C049  F02A         	movff	vfpfcnvrt@cp,stoa@s
  2866  001B40  C04A  F02B         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2867  001B44  EC3A  F015         	call	_stoa	;wreg free
  2868  001B48  C028  F03F         	movff	?_stoa,?_vfpfcnvrt
  2869  001B4C  C029  F040         	movff	?_stoa+1,?_vfpfcnvrt+1
  2870  001B50  0012               	return	
  2871  001B52                     l3394:
  2872                           
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2874  001B52  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  001B56  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  001B5A  CFDE FFF6          	movff	postinc2,tblptrl
  2877  001B5E  CFDD FFF7          	movff	postdec2,tblptrh
  2878  001B62                     	if	0	;tblptru may be non-zero
  2879  001B62                     	endif
  2880  001B62                     	if	0	;tblptru may be non-zero
  2881  001B62                     	endif
  2882  001B62  0008               	tblrd		*
  2883  001B64  50F5               	movf	tablat,w,c
  2884  001B66  0A25               	xorlw	37
  2885  001B68  A4D8               	btfss	status,2,c
  2886  001B6A  D016               	goto	l3404
  2887                           
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2889  001B6C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2890  001B70  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2891  001B74  2ADE               	incf	postinc2,f,c
  2892  001B76  0E00               	movlw	0
  2893  001B78  22DD               	addwfc	postdec2,f,c
  2894                           
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2896  001B7A  0E00               	movlw	0
  2897  001B7C  6E20               	movwf	fputc@c+1,c
  2898  001B7E  0E25               	movlw	37
  2899  001B80  6E1F               	movwf	fputc@c,c
  2900  001B82  C03F  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2901  001B86  C040  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2902  001B8A  ECF1  F016         	call	_fputc	;wreg free
  2903  001B8E                     l3400:
  2904                           
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2906  001B8E  0E00               	movlw	0
  2907  001B90  6E40               	movwf	?_vfpfcnvrt+1,c
  2908  001B92  0E01               	movlw	1
  2909  001B94  6E3F               	movwf	?_vfpfcnvrt,c
  2910  001B96  0012               	return	
  2911  001B98                     l3404:
  2912                           
  2913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2914  001B98  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2915  001B9C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2916  001BA0  2ADE               	incf	postinc2,f,c
  2917  001BA2  0E00               	movlw	0
  2918  001BA4  22DD               	addwfc	postdec2,f,c
  2919                           
  2920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2921  001BA6  0E00               	movlw	0
  2922  001BA8  6E40               	movwf	?_vfpfcnvrt+1,c
  2923  001BAA  0E00               	movlw	0
  2924  001BAC  6E3F               	movwf	?_vfpfcnvrt,c
  2925  001BAE  0012               	return	
  2926  001BB0                     l3410:
  2927                           
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2929  001BB0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2930  001BB4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2931  001BB8  CFDE FFF6          	movff	postinc2,tblptrl
  2932  001BBC  CFDD FFF7          	movff	postdec2,tblptrh
  2933  001BC0                     	if	0	;tblptru may be non-zero
  2934  001BC0                     	endif
  2935  001BC0                     	if	0	;tblptru may be non-zero
  2936  001BC0                     	endif
  2937  001BC0  0008               	tblrd		*
  2938  001BC2  50F5               	movf	tablat,w,c
  2939  001BC4  6E1F               	movwf	fputc@c,c
  2940  001BC6  6A20               	clrf	fputc@c+1,c
  2941  001BC8  C03F  F021         	movff	vfpfcnvrt@fp,fputc@fp
  2942  001BCC  C040  F022         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2943  001BD0  ECF1  F016         	call	_fputc	;wreg free
  2944                           
  2945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2946  001BD4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2947  001BD8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2948  001BDC  2ADE               	incf	postinc2,f,c
  2949  001BDE  0E00               	movlw	0
  2950  001BE0  22DD               	addwfc	postdec2,f,c
  2951  001BE2  D7D5               	goto	l3400
  2952  001BE4                     __end_of_vfpfcnvrt:
  2953                           	opt callstack 0
  2954                           
  2955 ;; *************** function _stoa *****************
  2956 ;; Defined at:
  2957 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  2960 ;;		 -> sprintf@f(6), 
  2961 ;;  s               2   41[COMRAM] PTR unsigned char 
  2962 ;;		 -> ?_sprintf(2), main@command(25), 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  nuls            7   44[COMRAM] unsigned char [7]
  2965 ;;  l               2   59[COMRAM] int 
  2966 ;;  p               2   57[COMRAM] int 
  2967 ;;  cp              2   55[COMRAM] PTR unsigned char 
  2968 ;;		 -> ?_sprintf(2), stoa@nuls(7), main@command(25), 
  2969 ;;  w               2   53[COMRAM] int 
  2970 ;;  i               2   51[COMRAM] int 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  2   39[COMRAM] int 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;Total ram usage:       22 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    8
  2987 ;; This function calls:
  2988 ;;		_fputc
  2989 ;;		_strlen
  2990 ;; This function is called by:
  2991 ;;		_vfpfcnvrt
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text4
  2996  002A74                     __ptext4:
  2997                           	opt callstack 0
  2998  002A74                     _stoa:
  2999                           	opt callstack 19
  3000                           
  3001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  3002                           
  3003                           ;incstack = 0
  3004  002A74  EE20  F05E         	lfsr	2,stoa@F1136
  3005  002A78  EE10  F02D         	lfsr	1,stoa@nuls
  3006  002A7C  0E06               	movlw	6
  3007  002A7E                     u2591:
  3008  002A7E  CFDB FFE3          	movff	plusw2,plusw1
  3009  002A82  06E8               	decf	wreg,f,c
  3010  002A84  E2FC               	bc	u2591
  3011                           
  3012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  3013  002A86  C02A  F038         	movff	stoa@s,stoa@cp
  3014  002A8A  C02B  F039         	movff	stoa@s+1,stoa@cp+1
  3015                           
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  3017  002A8E  5038               	movf	stoa@cp,w,c
  3018  002A90  1039               	iorwf	stoa@cp+1,w,c
  3019  002A92  A4D8               	btfss	status,2,c
  3020  002A94  D004               	goto	l3252
  3021                           
  3022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  3023  002A96  0E2D               	movlw	low stoa@nuls
  3024  002A98  6E38               	movwf	stoa@cp,c
  3025  002A9A  0E00               	movlw	high stoa@nuls
  3026  002A9C  6E39               	movwf	stoa@cp+1,c
  3027  002A9E                     l3252:
  3028                           
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  3030  002A9E  C038  F01B         	movff	stoa@cp,strlen@s
  3031  002AA2  C039  F01C         	movff	stoa@cp+1,strlen@s+1
  3032  002AA6  EC3C  F01A         	call	_strlen	;wreg free
  3033  002AAA  C01B  F03C         	movff	?_strlen,stoa@l
  3034  002AAE  C01C  F03D         	movff	?_strlen+1,stoa@l+1
  3035                           
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  3037  002AB2  C056  F03A         	movff	_prec,stoa@p
  3038  002AB6  C057  F03B         	movff	_prec+1,stoa@p+1
  3039                           
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  3041  002ABA  BE3B               	btfsc	stoa@p+1,7,c
  3042  002ABC  D00E               	goto	l493
  3043  002ABE  503C               	movf	stoa@l,w,c
  3044  002AC0  5C3A               	subwf	stoa@p,w,c
  3045  002AC2  503B               	movf	stoa@p+1,w,c
  3046  002AC4  0A80               	xorlw	128
  3047  002AC6  6E2C               	movwf	??_stoa& (0+255),c
  3048  002AC8  503D               	movf	stoa@l+1,w,c
  3049  002ACA  0A80               	xorlw	128
  3050  002ACC  582C               	subwfb	??_stoa& (0+255),w,c
  3051  002ACE  B0D8               	btfsc	status,0,c
  3052  002AD0  D004               	goto	l493
  3053  002AD2  C03A  F03C         	movff	stoa@p,stoa@l
  3054  002AD6  C03B  F03D         	movff	stoa@p+1,stoa@l+1
  3055  002ADA                     l493:
  3056                           
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  3058  002ADA  C03C  F03A         	movff	stoa@l,stoa@p
  3059  002ADE  C03D  F03B         	movff	stoa@l+1,stoa@p+1
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  3062  002AE2  C054  F036         	movff	_width,stoa@w
  3063  002AE6  C055  F037         	movff	_width+1,stoa@w+1
  3064                           
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  3066  002AEA  A058               	btfss	_flags,0,c
  3067  002AEC  D00D               	goto	l3266
  3068  002AEE  D016               	goto	u2640
  3069  002AF0                     l3262:
  3070                           
  3071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  3072  002AF0  0E00               	movlw	0
  3073  002AF2  6E20               	movwf	fputc@c+1,c
  3074  002AF4  0E20               	movlw	32
  3075  002AF6  6E1F               	movwf	fputc@c,c
  3076  002AF8  C028  F021         	movff	stoa@fp,fputc@fp
  3077  002AFC  C029  F022         	movff	stoa@fp+1,fputc@fp+1
  3078  002B00  ECF1  F016         	call	_fputc	;wreg free
  3079                           
  3080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  3081  002B04  4A3C               	infsnz	stoa@l,f,c
  3082  002B06  2A3D               	incf	stoa@l+1,f,c
  3083  002B08                     l3266:
  3084                           
  3085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  3086  002B08  5036               	movf	stoa@w,w,c
  3087  002B0A  5C3C               	subwf	stoa@l,w,c
  3088  002B0C  503D               	movf	stoa@l+1,w,c
  3089  002B0E  0A80               	xorlw	128
  3090  002B10  6E2C               	movwf	??_stoa& (0+255),c
  3091  002B12  5037               	movf	stoa@w+1,w,c
  3092  002B14  0A80               	xorlw	128
  3093  002B16  582C               	subwfb	??_stoa& (0+255),w,c
  3094  002B18  A0D8               	btfss	status,0,c
  3095  002B1A  D7EA               	goto	l3262
  3096  002B1C                     u2640:
  3097                           
  3098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  3099  002B1C  0E00               	movlw	0
  3100  002B1E  6E35               	movwf	stoa@i+1,c
  3101  002B20  0E00               	movlw	0
  3102  002B22  6E34               	movwf	stoa@i,c
  3103                           
  3104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3105  002B24  D013               	goto	l3276
  3106  002B26                     l3270:
  3107                           
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  3109  002B26  C038  FFD9         	movff	stoa@cp,fsr2l
  3110  002B2A  C039  FFDA         	movff	stoa@cp+1,fsr2h
  3111  002B2E  50DF               	movf	indf2,w,c
  3112  002B30  6E2C               	movwf	??_stoa& (0+255),c
  3113  002B32  502C               	movf	??_stoa,w,c
  3114  002B34  6E1F               	movwf	fputc@c,c
  3115  002B36  6A20               	clrf	fputc@c+1,c
  3116  002B38  C028  F021         	movff	stoa@fp,fputc@fp
  3117  002B3C  C029  F022         	movff	stoa@fp+1,fputc@fp+1
  3118  002B40  ECF1  F016         	call	_fputc	;wreg free
  3119                           
  3120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  3121  002B44  4A38               	infsnz	stoa@cp,f,c
  3122  002B46  2A39               	incf	stoa@cp+1,f,c
  3123                           
  3124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  3125  002B48  4A34               	infsnz	stoa@i,f,c
  3126  002B4A  2A35               	incf	stoa@i+1,f,c
  3127  002B4C                     l3276:
  3128                           
  3129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  3130  002B4C  503A               	movf	stoa@p,w,c
  3131  002B4E  5C34               	subwf	stoa@i,w,c
  3132  002B50  5035               	movf	stoa@i+1,w,c
  3133  002B52  0A80               	xorlw	128
  3134  002B54  6E2C               	movwf	??_stoa& (0+255),c
  3135  002B56  503B               	movf	stoa@p+1,w,c
  3136  002B58  0A80               	xorlw	128
  3137  002B5A  582C               	subwfb	??_stoa& (0+255),w,c
  3138  002B5C  A0D8               	btfss	status,0,c
  3139  002B5E  D7E3               	goto	l3270
  3140                           
  3141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  3142  002B60  B058               	btfsc	_flags,0,c
  3143  002B62  D00D               	goto	l3284
  3144  002B64  D016               	goto	u2670
  3145  002B66                     l3280:
  3146                           
  3147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  3148  002B66  0E00               	movlw	0
  3149  002B68  6E20               	movwf	fputc@c+1,c
  3150  002B6A  0E20               	movlw	32
  3151  002B6C  6E1F               	movwf	fputc@c,c
  3152  002B6E  C028  F021         	movff	stoa@fp,fputc@fp
  3153  002B72  C029  F022         	movff	stoa@fp+1,fputc@fp+1
  3154  002B76  ECF1  F016         	call	_fputc	;wreg free
  3155                           
  3156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  3157  002B7A  4A3C               	infsnz	stoa@l,f,c
  3158  002B7C  2A3D               	incf	stoa@l+1,f,c
  3159  002B7E                     l3284:
  3160                           
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  3162  002B7E  5036               	movf	stoa@w,w,c
  3163  002B80  5C3C               	subwf	stoa@l,w,c
  3164  002B82  503D               	movf	stoa@l+1,w,c
  3165  002B84  0A80               	xorlw	128
  3166  002B86  6E2C               	movwf	??_stoa& (0+255),c
  3167  002B88  5037               	movf	stoa@w+1,w,c
  3168  002B8A  0A80               	xorlw	128
  3169  002B8C  582C               	subwfb	??_stoa& (0+255),w,c
  3170  002B8E  A0D8               	btfss	status,0,c
  3171  002B90  D7EA               	goto	l3280
  3172  002B92                     u2670:
  3173                           
  3174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  3175                           
  3176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 586:     }
  3177  002B92  C03C  F028         	movff	stoa@l,?_stoa
  3178  002B96  C03D  F029         	movff	stoa@l+1,?_stoa+1
  3179  002B9A  0012               	return		;funcret
  3180  002B9C                     __end_of_stoa:
  3181                           	opt callstack 0
  3182                           
  3183 ;; *************** function _ctoa *****************
  3184 ;; Defined at:
  3185 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  3188 ;;		 -> sprintf@f(6), 
  3189 ;;  c               1   59[COMRAM] unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  w               2   60[COMRAM] int 
  3192 ;;  l               2    0        int 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  2   57[COMRAM] int 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3202 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;Total ram usage:        5 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:   10
  3209 ;; This function calls:
  3210 ;;		_pad
  3211 ;; This function is called by:
  3212 ;;		_vfpfcnvrt
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           	psect	text5
  3217  0031E4                     __ptext5:
  3218                           	opt callstack 0
  3219  0031E4                     _ctoa:
  3220                           	opt callstack 17
  3221                           
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  3223                           
  3224                           ;incstack = 0
  3225  0031E4  5054               	movf	_width,w,c
  3226  0031E6  1055               	iorwf	_width+1,w,c
  3227  0031E8  A4D8               	btfss	status,2,c
  3228  0031EA  D005               	goto	l3234
  3229  0031EC  C054  F03D         	movff	_width,ctoa@w
  3230  0031F0  C055  F03E         	movff	_width+1,ctoa@w+1
  3231  0031F4  D006               	goto	l3236
  3232  0031F6                     l3234:
  3233  0031F6  0EFF               	movlw	255
  3234  0031F8  2454               	addwf	_width,w,c
  3235  0031FA  6E3D               	movwf	ctoa@w,c
  3236  0031FC  0EFF               	movlw	255
  3237  0031FE  2055               	addwfc	_width+1,w,c
  3238  003200  6E3E               	movwf	ctoa@w+1,c
  3239  003202                     l3236:
  3240                           
  3241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  3242  003202  C03C  F180         	movff	ctoa@c,_dbuf
  3243                           
  3244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  3245  003206  0E00               	movlw	0
  3246  003208  0101               	movlb	1	; () banked
  3247  00320A  6F81               	movwf	(_dbuf+1)& (0+255),b
  3248                           
  3249                           ; BSR set to: 1
  3250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  3251  00320C  C03A  F02F         	movff	ctoa@fp,pad@fp
  3252  003210  C03B  F030         	movff	ctoa@fp+1,pad@fp+1
  3253  003214  0E80               	movlw	low _dbuf
  3254  003216  6E31               	movwf	pad@buf,c
  3255  003218  0E01               	movlw	high _dbuf
  3256  00321A  6E32               	movwf	pad@buf+1,c
  3257  00321C  C03D  F033         	movff	ctoa@w,pad@p
  3258  003220  C03E  F034         	movff	ctoa@w+1,pad@p+1
  3259  003224  EC41  F017         	call	_pad	;wreg free
  3260  003228  C02F  F03A         	movff	?_pad,?_ctoa
  3261  00322C  C030  F03B         	movff	?_pad+1,?_ctoa+1
  3262  003230  0012               	return		;funcret
  3263  003232                     __end_of_ctoa:
  3264                           	opt callstack 0
  3265                           
  3266 ;; *************** function _pad *****************
  3267 ;; Defined at:
  3268 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  3271 ;;		 -> sprintf@f(6), 
  3272 ;;  buf             2   48[COMRAM] PTR unsigned char 
  3273 ;;		 -> dbuf(32), 
  3274 ;;  p               2   50[COMRAM] int 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  w               2   55[COMRAM] int 
  3277 ;;  i               2   53[COMRAM] int 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  2   46[COMRAM] int 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3287 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;Total ram usage:       11 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    9
  3294 ;; This function calls:
  3295 ;;		_fputc
  3296 ;;		_fputs
  3297 ;;		_strlen
  3298 ;; This function is called by:
  3299 ;;		_ctoa
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text6
  3304  002E82                     __ptext6:
  3305                           	opt callstack 0
  3306  002E82                     _pad:
  3307                           	opt callstack 17
  3308                           
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3310                           
  3311                           ;incstack = 0
  3312  002E82  A058               	btfss	_flags,0,c
  3313  002E84  D00A               	goto	l3190
  3314                           
  3315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3316  002E86  C031  F028         	movff	pad@buf,fputs@s
  3317  002E8A  C032  F029         	movff	pad@buf+1,fputs@s+1
  3318  002E8E  C02F  F02A         	movff	pad@fp,fputs@fp
  3319  002E92  C030  F02B         	movff	pad@fp+1,fputs@fp+1
  3320  002E96  ECF1  F019         	call	_fputs	;wreg free
  3321  002E9A                     l3190:
  3322                           
  3323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3324  002E9A  BE34               	btfsc	pad@p+1,7,c
  3325  002E9C  D005               	goto	l3194
  3326  002E9E  C033  F038         	movff	pad@p,pad@w
  3327  002EA2  C034  F039         	movff	pad@p+1,pad@w+1
  3328  002EA6  D004               	goto	l472
  3329  002EA8                     l3194:
  3330  002EA8  0E00               	movlw	0
  3331  002EAA  6E39               	movwf	pad@w+1,c
  3332  002EAC  0E00               	movlw	0
  3333  002EAE  6E38               	movwf	pad@w,c
  3334  002EB0                     l472:
  3335                           
  3336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3337  002EB0  0E00               	movlw	0
  3338  002EB2  6E37               	movwf	pad@i+1,c
  3339  002EB4  0E00               	movlw	0
  3340  002EB6  6E36               	movwf	pad@i,c
  3341                           
  3342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3343  002EB8  D00C               	goto	l3200
  3344  002EBA                     l3196:
  3345                           
  3346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3347  002EBA  0E00               	movlw	0
  3348  002EBC  6E20               	movwf	fputc@c+1,c
  3349  002EBE  0E20               	movlw	32
  3350  002EC0  6E1F               	movwf	fputc@c,c
  3351  002EC2  C02F  F021         	movff	pad@fp,fputc@fp
  3352  002EC6  C030  F022         	movff	pad@fp+1,fputc@fp+1
  3353  002ECA  ECF1  F016         	call	_fputc	;wreg free
  3354                           
  3355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3356  002ECE  4A36               	infsnz	pad@i,f,c
  3357  002ED0  2A37               	incf	pad@i+1,f,c
  3358  002ED2                     l3200:
  3359                           
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3361  002ED2  5038               	movf	pad@w,w,c
  3362  002ED4  5C36               	subwf	pad@i,w,c
  3363  002ED6  5037               	movf	pad@i+1,w,c
  3364  002ED8  0A80               	xorlw	128
  3365  002EDA  6E35               	movwf	??_pad& (0+255),c
  3366  002EDC  5039               	movf	pad@w+1,w,c
  3367  002EDE  0A80               	xorlw	128
  3368  002EE0  5835               	subwfb	??_pad& (0+255),w,c
  3369  002EE2  A0D8               	btfss	status,0,c
  3370  002EE4  D7EA               	goto	l3196
  3371                           
  3372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  3373  002EE6  B058               	btfsc	_flags,0,c
  3374  002EE8  D00A               	goto	l3204
  3375                           
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  3377  002EEA  C031  F028         	movff	pad@buf,fputs@s
  3378  002EEE  C032  F029         	movff	pad@buf+1,fputs@s+1
  3379  002EF2  C02F  F02A         	movff	pad@fp,fputs@fp
  3380  002EF6  C030  F02B         	movff	pad@fp+1,fputs@fp+1
  3381  002EFA  ECF1  F019         	call	_fputs	;wreg free
  3382  002EFE                     l3204:
  3383                           
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  3385  002EFE  C031  F01B         	movff	pad@buf,strlen@s
  3386  002F02  C032  F01C         	movff	pad@buf+1,strlen@s+1
  3387  002F06  EC3C  F01A         	call	_strlen	;wreg free
  3388  002F0A  5038               	movf	pad@w,w,c
  3389  002F0C  241B               	addwf	?_strlen,w,c
  3390  002F0E  6E2F               	movwf	?_pad,c
  3391  002F10  5039               	movf	pad@w+1,w,c
  3392  002F12  201C               	addwfc	?_strlen+1,w,c
  3393  002F14  6E30               	movwf	?_pad+1,c
  3394  002F16  0012               	return		;funcret
  3395  002F18                     __end_of_pad:
  3396                           	opt callstack 0
  3397                           
  3398 ;; *************** function _strlen *****************
  3399 ;; Defined at:
  3400 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  s               2   26[COMRAM] PTR const unsigned char 
  3403 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), main@command(25), 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  a               2   28[COMRAM] PTR const unsigned char 
  3406 ;;		 -> ?_sprintf(2), stoa@nuls(7), dbuf(32), main@command(25), 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  2   26[COMRAM] unsigned int 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;Total ram usage:        4 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    3
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_pad
  3427 ;;		_stoa
  3428 ;;		_reverse
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text7
  3433  003478                     __ptext7:
  3434                           	opt callstack 0
  3435  003478                     _strlen:
  3436                           	opt callstack 23
  3437                           
  3438                           ;incstack = 0
  3439  003478  C01B  F01D         	movff	strlen@s,strlen@a
  3440  00347C  C01C  F01E         	movff	strlen@s+1,strlen@a+1
  3441  003480  D002               	goto	l3172
  3442  003482                     l3170:
  3443  003482  4A1B               	infsnz	strlen@s,f,c
  3444  003484  2A1C               	incf	strlen@s+1,f,c
  3445  003486                     l3172:
  3446  003486  C01B  FFD9         	movff	strlen@s,fsr2l
  3447  00348A  C01C  FFDA         	movff	strlen@s+1,fsr2h
  3448  00348E  50DF               	movf	indf2,w,c
  3449  003490  A4D8               	btfss	status,2,c
  3450  003492  D7F7               	goto	l3170
  3451  003494  501D               	movf	strlen@a,w,c
  3452  003496  5C1B               	subwf	strlen@s,w,c
  3453  003498  6E1B               	movwf	?_strlen,c
  3454  00349A  501E               	movf	strlen@a+1,w,c
  3455  00349C  581C               	subwfb	strlen@s+1,w,c
  3456  00349E  6E1C               	movwf	?_strlen+1,c
  3457  0034A0  0012               	return		;funcret
  3458  0034A2                     __end_of_strlen:
  3459                           	opt callstack 0
  3460                           
  3461 ;; *************** function _fputs *****************
  3462 ;; Defined at:
  3463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  s               2   39[COMRAM] PTR const unsigned char 
  3466 ;;		 -> dbuf(32), 
  3467 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  3468 ;;		 -> sprintf@f(6), 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  i               2   44[COMRAM] int 
  3471 ;;  c               1   43[COMRAM] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  2   39[COMRAM] int 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        7 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    8
  3488 ;; This function calls:
  3489 ;;		_fputc
  3490 ;; This function is called by:
  3491 ;;		_pad
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text8
  3496  0033E2                     __ptext8:
  3497                           	opt callstack 0
  3498  0033E2                     _fputs:
  3499                           	opt callstack 17
  3500                           
  3501                           ;incstack = 0
  3502  0033E2  0E00               	movlw	0
  3503  0033E4  6E2E               	movwf	fputs@i+1,c
  3504  0033E6  0E00               	movlw	0
  3505  0033E8  6E2D               	movwf	fputs@i,c
  3506  0033EA  D00B               	goto	l3184
  3507  0033EC                     l3180:
  3508  0033EC  C02C  F01F         	movff	fputs@c,fputc@c
  3509  0033F0  6A20               	clrf	fputc@c+1,c
  3510  0033F2  C02A  F021         	movff	fputs@fp,fputc@fp
  3511  0033F6  C02B  F022         	movff	fputs@fp+1,fputc@fp+1
  3512  0033FA  ECF1  F016         	call	_fputc	;wreg free
  3513  0033FE  4A2D               	infsnz	fputs@i,f,c
  3514  003400  2A2E               	incf	fputs@i+1,f,c
  3515  003402                     l3184:
  3516  003402  502D               	movf	fputs@i,w,c
  3517  003404  2428               	addwf	fputs@s,w,c
  3518  003406  6ED9               	movwf	fsr2l,c
  3519  003408  502E               	movf	fputs@i+1,w,c
  3520  00340A  2029               	addwfc	fputs@s+1,w,c
  3521  00340C  6EDA               	movwf	fsr2h,c
  3522  00340E  50DF               	movf	indf2,w,c
  3523  003410  6E2C               	movwf	fputs@c,c
  3524  003412  502C               	movf	fputs@c,w,c
  3525  003414  B4D8               	btfsc	status,2,c
  3526  003416  0012               	return	
  3527  003418  D7E9               	goto	l3180
  3528  00341A                     __end_of_fputs:
  3529                           	opt callstack 0
  3530                           
  3531 ;; *************** function _fputc *****************
  3532 ;; Defined at:
  3533 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  c               2   30[COMRAM] int 
  3536 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3537 ;;		 -> sprintf@f(6), 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2   30[COMRAM] int 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;Total ram usage:        9 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    7
  3556 ;; This function calls:
  3557 ;;		_putch
  3558 ;; This function is called by:
  3559 ;;		_pad
  3560 ;;		_stoa
  3561 ;;		_vfpfcnvrt
  3562 ;;		_fputs
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text9
  3567  002DE2                     __ptext9:
  3568                           	opt callstack 0
  3569  002DE2                     _fputc:
  3570                           	opt callstack 19
  3571                           
  3572                           ;incstack = 0
  3573  002DE2  5021               	movf	fputc@fp,w,c
  3574  002DE4  1022               	iorwf	fputc@fp+1,w,c
  3575  002DE6  B4D8               	btfsc	status,2,c
  3576  002DE8  D004               	goto	u2450
  3577  002DEA  5021               	movf	fputc@fp,w,c
  3578  002DEC  1022               	iorwf	fputc@fp+1,w,c
  3579  002DEE  A4D8               	btfss	status,2,c
  3580  002DF0  D004               	goto	l3160
  3581  002DF2                     u2450:
  3582  002DF2  501F               	movf	fputc@c,w,c
  3583  002DF4  ECCE  F01A         	call	_putch
  3584  002DF8  0012               	return	
  3585  002DFA                     l3160:
  3586  002DFA  EE20 F004          	lfsr	2,4
  3587  002DFE  5021               	movf	fputc@fp,w,c
  3588  002E00  26D9               	addwf	fsr2l,f,c
  3589  002E02  5022               	movf	fputc@fp+1,w,c
  3590  002E04  22DA               	addwfc	fsr2h,f,c
  3591  002E06  50DE               	movf	postinc2,w,c
  3592  002E08  10DE               	iorwf	postinc2,w,c
  3593  002E0A  B4D8               	btfsc	status,2,c
  3594  002E0C  D016               	goto	u2470
  3595  002E0E  EE20 F004          	lfsr	2,4
  3596  002E12  5021               	movf	fputc@fp,w,c
  3597  002E14  26D9               	addwf	fsr2l,f,c
  3598  002E16  5022               	movf	fputc@fp+1,w,c
  3599  002E18  22DA               	addwfc	fsr2h,f,c
  3600  002E1A  EE10 F002          	lfsr	1,2
  3601  002E1E  5021               	movf	fputc@fp,w,c
  3602  002E20  26E1               	addwf	fsr1l,f,c
  3603  002E22  5022               	movf	fputc@fp+1,w,c
  3604  002E24  22E2               	addwfc	fsr1h,f,c
  3605  002E26  50DE               	movf	postinc2,w,c
  3606  002E28  5CE6               	subwf	postinc1,w,c
  3607  002E2A  50E6               	movf	postinc1,w,c
  3608  002E2C  0A80               	xorlw	128
  3609  002E2E  6E27               	movwf	(??_fputc+4)& (0+255),c
  3610  002E30  50DE               	movf	postinc2,w,c
  3611  002E32  0A80               	xorlw	128
  3612  002E34  5827               	subwfb	(??_fputc+4)& (0+255),w,c
  3613  002E36  B0D8               	btfsc	status,0,c
  3614  002E38  0012               	return	
  3615  002E3A                     u2470:
  3616  002E3A  EE20 F002          	lfsr	2,2
  3617  002E3E  5021               	movf	fputc@fp,w,c
  3618  002E40  26D9               	addwf	fsr2l,f,c
  3619  002E42  5022               	movf	fputc@fp+1,w,c
  3620  002E44  22DA               	addwfc	fsr2h,f,c
  3621  002E46  CFDE F023          	movff	postinc2,??_fputc
  3622  002E4A  CFDD F024          	movff	postdec2,??_fputc+1
  3623  002E4E  C021  FFD9         	movff	fputc@fp,fsr2l
  3624  002E52  C022  FFDA         	movff	fputc@fp+1,fsr2h
  3625  002E56  CFDE F025          	movff	postinc2,??_fputc+2
  3626  002E5A  CFDD F026          	movff	postdec2,??_fputc+3
  3627  002E5E  5023               	movf	??_fputc,w,c
  3628  002E60  2425               	addwf	??_fputc+2,w,c
  3629  002E62  6ED9               	movwf	fsr2l,c
  3630  002E64  5024               	movf	??_fputc+1,w,c
  3631  002E66  2026               	addwfc	??_fputc+3,w,c
  3632  002E68  6EDA               	movwf	fsr2h,c
  3633  002E6A  C01F  FFDF         	movff	fputc@c,indf2
  3634  002E6E  EE20 F002          	lfsr	2,2
  3635  002E72  5021               	movf	fputc@fp,w,c
  3636  002E74  26D9               	addwf	fsr2l,f,c
  3637  002E76  5022               	movf	fputc@fp+1,w,c
  3638  002E78  22DA               	addwfc	fsr2h,f,c
  3639  002E7A  2ADE               	incf	postinc2,f,c
  3640  002E7C  0E00               	movlw	0
  3641  002E7E  22DD               	addwfc	postdec2,f,c
  3642  002E80  0012               	return		;funcret
  3643  002E82                     __end_of_fputc:
  3644                           	opt callstack 0
  3645                           
  3646 ;; *************** function _putch *****************
  3647 ;; Defined at:
  3648 ;;		line 100 in file "lcd.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  data            1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  data            1   29[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;Total ram usage:        1 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    6
  3669 ;; This function calls:
  3670 ;;		_send_byte
  3671 ;; This function is called by:
  3672 ;;		_fputc
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text10
  3677  00359C                     __ptext10:
  3678                           	opt callstack 0
  3679  00359C                     _putch:
  3680                           	opt callstack 19
  3681                           
  3682                           ;incstack = 0
  3683                           ;putch@data stored from wreg
  3684  00359C  6E1E               	movwf	putch@data,c
  3685                           
  3686                           ;lcd.c: 101:     LATDbits.LATD2 = 1;
  3687  00359E  848C               	bsf	3980,2,c	;volatile
  3688                           
  3689                           ;lcd.c: 102:     send_byte((unsigned char)data);
  3690  0035A0  501E               	movf	putch@data,w,c
  3691  0035A2  ECBE  F01A         	call	_send_byte
  3692  0035A6  0012               	return		;funcret
  3693  0035A8                     __end_of_putch:
  3694                           	opt callstack 0
  3695                           
  3696 ;; *************** function _atoi *****************
  3697 ;; Defined at:
  3698 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;  s               2   33[COMRAM] PTR const unsigned char 
  3701 ;;		 -> STR_6(6), STR_5(5), STR_4(5), STR_3(5), 
  3702 ;;		 -> STR_2(5), 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  n               2   46[COMRAM] int 
  3705 ;;  neg             2   39[COMRAM] int 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2   33[COMRAM] int 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;Total ram usage:       15 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    4
  3722 ;; This function calls:
  3723 ;;		___wmul
  3724 ;;		_isdigit
  3725 ;;		_isspace
  3726 ;; This function is called by:
  3727 ;;		_vfpfcnvrt
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text11
  3732  002934                     __ptext11:
  3733                           	opt callstack 0
  3734  002934                     _atoi:
  3735                           	opt callstack 23
  3736                           
  3737                           ;incstack = 0
  3738  002934  0E00               	movlw	0
  3739  002936  6E30               	movwf	atoi@n+1,c
  3740  002938  0E00               	movlw	0
  3741  00293A  6E2F               	movwf	atoi@n,c
  3742  00293C  0E00               	movlw	0
  3743  00293E  6E29               	movwf	atoi@neg+1,c
  3744  002940  0E00               	movlw	0
  3745  002942  6E28               	movwf	atoi@neg,c
  3746  002944  D002               	goto	l3290
  3747  002946                     l3288:
  3748  002946  4A22               	infsnz	atoi@s,f,c
  3749  002948  2A23               	incf	atoi@s+1,f,c
  3750  00294A                     l3290:
  3751  00294A  0E01               	movlw	1
  3752  00294C  6E2E               	movwf	_atoi$1479,c
  3753  00294E  C022  FFF6         	movff	atoi@s,tblptrl
  3754  002952  C023  FFF7         	movff	atoi@s+1,tblptrh
  3755  002956                     	if	0	;tblptru may be non-zero
  3756  002956                     	endif
  3757  002956                     	if	0	;tblptru may be non-zero
  3758  002956                     	endif
  3759  002956  0008               	tblrd		*
  3760  002958  50F5               	movf	tablat,w,c
  3761  00295A  0A20               	xorlw	32
  3762  00295C  B4D8               	btfsc	status,2,c
  3763  00295E  D018               	goto	l3298
  3764  002960  0EF7               	movlw	247
  3765  002962  6E24               	movwf	??_atoi& (0+255),c
  3766  002964  0EFF               	movlw	255
  3767  002966  6E25               	movwf	(??_atoi+1)& (0+255),c
  3768  002968  C022  FFF6         	movff	atoi@s,tblptrl
  3769  00296C  C023  FFF7         	movff	atoi@s+1,tblptrh
  3770  002970                     	if	0	;tblptru may be non-zero
  3771  002970                     	endif
  3772  002970                     	if	0	;tblptru may be non-zero
  3773  002970                     	endif
  3774  002970  0008               	tblrd		*
  3775  002972  50F5               	movf	tablat,w,c
  3776  002974  6E26               	movwf	(??_atoi+2)& (0+255),c
  3777  002976  6A27               	clrf	(??_atoi+3)& (0+255),c
  3778  002978  5024               	movf	??_atoi,w,c
  3779  00297A  2626               	addwf	??_atoi+2,f,c
  3780  00297C  5025               	movf	??_atoi+1,w,c
  3781  00297E  2227               	addwfc	??_atoi+3,f,c
  3782  002980  5027               	movf	??_atoi+3,w,c
  3783  002982  E104               	bnz	u2690
  3784  002984  0E05               	movlw	5
  3785  002986  5C26               	subwf	??_atoi+2,w,c
  3786  002988  A0D8               	btfss	status,0,c
  3787  00298A  D002               	goto	l3298
  3788  00298C                     u2690:
  3789  00298C  0E00               	movlw	0
  3790  00298E  6E2E               	movwf	_atoi$1479,c
  3791  002990                     l3298:
  3792  002990  C02E  F02A         	movff	_atoi$1479,_atoi$1478
  3793  002994  6A2B               	clrf	_atoi$1478+1,c
  3794  002996  502A               	movf	_atoi$1478,w,c
  3795  002998  102B               	iorwf	_atoi$1478+1,w,c
  3796  00299A  B4D8               	btfsc	status,2,c
  3797  00299C  D008               	goto	l3308
  3798  00299E  D7D3               	goto	l3288
  3799  0029A0                     l3304:
  3800  0029A0  0E00               	movlw	0
  3801  0029A2  6E29               	movwf	atoi@neg+1,c
  3802  0029A4  0E01               	movlw	1
  3803  0029A6  6E28               	movwf	atoi@neg,c
  3804  0029A8                     l3306:
  3805  0029A8  4A22               	infsnz	atoi@s,f,c
  3806  0029AA  2A23               	incf	atoi@s+1,f,c
  3807  0029AC  D02E               	goto	l3314
  3808  0029AE                     l3308:
  3809  0029AE  C022  FFF6         	movff	atoi@s,tblptrl
  3810  0029B2  C023  FFF7         	movff	atoi@s+1,tblptrh
  3811  0029B6                     	if	0	;tblptru may be non-zero
  3812  0029B6                     	endif
  3813  0029B6                     	if	0	;tblptru may be non-zero
  3814  0029B6                     	endif
  3815  0029B6  0008               	tblrd		*
  3816  0029B8  50F5               	movf	tablat,w,c
  3817  0029BA  6E24               	movwf	??_atoi& (0+255),c
  3818  0029BC  6A25               	clrf	(??_atoi+1)& (0+255),c
  3819                           
  3820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3821                           ; Switch size 1, requested type "simple"
  3822                           ; Number of cases is 1, Range of values is 0 to 0
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte            4     3 (average)
  3826                           ;	Chosen strategy is simple_byte
  3827  0029BE  5025               	movf	??_atoi+1,w,c
  3828  0029C0  0A00               	xorlw	0	; case 0
  3829  0029C2  A4D8               	btfss	status,2,c
  3830  0029C4  D022               	goto	l3314
  3831                           
  3832                           ; Switch size 1, requested type "simple"
  3833                           ; Number of cases is 2, Range of values is 43 to 45
  3834                           ; switch strategies available:
  3835                           ; Name         Instructions Cycles
  3836                           ; simple_byte            7     4 (average)
  3837                           ;	Chosen strategy is simple_byte
  3838  0029C6  5024               	movf	??_atoi,w,c
  3839  0029C8  0A2B               	xorlw	43	; case 43
  3840  0029CA  B4D8               	btfsc	status,2,c
  3841  0029CC  D7ED               	goto	l3306
  3842  0029CE  0A06               	xorlw	6	; case 45
  3843  0029D0  B4D8               	btfsc	status,2,c
  3844  0029D2  D7E6               	goto	l3304
  3845  0029D4  D01A               	goto	l3314
  3846  0029D6                     l3310:
  3847  0029D6  C02F  F01B         	movff	atoi@n,___wmul@multiplier
  3848  0029DA  C030  F01C         	movff	atoi@n+1,___wmul@multiplier+1
  3849  0029DE  0E00               	movlw	0
  3850  0029E0  6E1E               	movwf	___wmul@multiplicand+1,c
  3851  0029E2  0E0A               	movlw	10
  3852  0029E4  6E1D               	movwf	___wmul@multiplicand,c
  3853  0029E6  EC66  F01A         	call	___wmul	;wreg free
  3854  0029EA  C022  FFF6         	movff	atoi@s,tblptrl
  3855  0029EE  C023  FFF7         	movff	atoi@s+1,tblptrh
  3856  0029F2                     	if	0	;tblptru may be non-zero
  3857  0029F2                     	endif
  3858  0029F2                     	if	0	;tblptru may be non-zero
  3859  0029F2                     	endif
  3860  0029F2  0008               	tblrd		*
  3861  0029F4  50F5               	movf	tablat,w,c
  3862  0029F6  5E1B               	subwf	?___wmul,f,c
  3863  0029F8  0E00               	movlw	0
  3864  0029FA  5A1C               	subwfb	?___wmul+1,f,c
  3865  0029FC  0E30               	movlw	48
  3866  0029FE  241B               	addwf	?___wmul,w,c
  3867  002A00  6E2F               	movwf	atoi@n,c
  3868  002A02  0E00               	movlw	0
  3869  002A04  201C               	addwfc	?___wmul+1,w,c
  3870  002A06  6E30               	movwf	atoi@n+1,c
  3871  002A08  D7CF               	goto	l3306
  3872  002A0A                     l3314:
  3873  002A0A  0ED0               	movlw	208
  3874  002A0C  6E24               	movwf	??_atoi& (0+255),c
  3875  002A0E  0EFF               	movlw	255
  3876  002A10  6E25               	movwf	(??_atoi+1)& (0+255),c
  3877  002A12  C022  FFF6         	movff	atoi@s,tblptrl
  3878  002A16  C023  FFF7         	movff	atoi@s+1,tblptrh
  3879  002A1A                     	if	0	;tblptru may be non-zero
  3880  002A1A                     	endif
  3881  002A1A                     	if	0	;tblptru may be non-zero
  3882  002A1A                     	endif
  3883  002A1A  0008               	tblrd		*
  3884  002A1C  50F5               	movf	tablat,w,c
  3885  002A1E  6E26               	movwf	(??_atoi+2)& (0+255),c
  3886  002A20  6A27               	clrf	(??_atoi+3)& (0+255),c
  3887  002A22  5024               	movf	??_atoi,w,c
  3888  002A24  2626               	addwf	??_atoi+2,f,c
  3889  002A26  5025               	movf	??_atoi+1,w,c
  3890  002A28  2227               	addwfc	??_atoi+3,f,c
  3891  002A2A  5027               	movf	??_atoi+3,w,c
  3892  002A2C  E106               	bnz	u2710
  3893  002A2E  0E0A               	movlw	10
  3894  002A30  5C26               	subwf	??_atoi+2,w,c
  3895  002A32  B0D8               	btfsc	status,0,c
  3896  002A34  D002               	goto	u2710
  3897  002A36  0E01               	movlw	1
  3898  002A38  D001               	goto	u2720
  3899  002A3A                     u2710:
  3900  002A3A  0E00               	movlw	0
  3901  002A3C                     u2720:
  3902  002A3C  6E2C               	movwf	_atoi$1480,c
  3903  002A3E  6A2D               	clrf	_atoi$1480+1,c
  3904  002A40  502C               	movf	_atoi$1480,w,c
  3905  002A42  102D               	iorwf	_atoi$1480+1,w,c
  3906  002A44  A4D8               	btfss	status,2,c
  3907  002A46  D7C7               	goto	l3310
  3908  002A48  5028               	movf	atoi@neg,w,c
  3909  002A4A  1029               	iorwf	atoi@neg+1,w,c
  3910  002A4C  A4D8               	btfss	status,2,c
  3911  002A4E  D00D               	goto	l1242
  3912  002A50  C02F  F024         	movff	atoi@n,??_atoi
  3913  002A54  C030  F025         	movff	atoi@n+1,??_atoi+1
  3914  002A58  1E24               	comf	??_atoi,f,c
  3915  002A5A  1E25               	comf	??_atoi+1,f,c
  3916  002A5C  4A24               	infsnz	??_atoi,f,c
  3917  002A5E  2A25               	incf	??_atoi+1,f,c
  3918  002A60  C024  F022         	movff	??_atoi,?_atoi
  3919  002A64  C025  F023         	movff	??_atoi+1,?_atoi+1
  3920  002A68  0012               	return	
  3921  002A6A                     l1242:
  3922  002A6A  C02F  F022         	movff	atoi@n,?_atoi
  3923  002A6E  C030  F023         	movff	atoi@n+1,?_atoi+1
  3924  002A72  0012               	return		;funcret
  3925  002A74                     __end_of_atoi:
  3926                           	opt callstack 0
  3927                           
  3928 ;; *************** function _isspace *****************
  3929 ;; Defined at:
  3930 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  c               2   26[COMRAM] int 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2   26[COMRAM] int 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3947 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;Total ram usage:        7 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    3
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_atoi
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text12
  3959  0033A4                     __ptext12:
  3960                           	opt callstack 0
  3961  0033A4                     _isspace:
  3962                           	opt callstack 23
  3963                           
  3964                           ;incstack = 0
  3965  0033A4  0E01               	movlw	1
  3966  0033A6  6E21               	movwf	_isspace$1496,c
  3967  0033A8  0E20               	movlw	32
  3968  0033AA  181B               	xorwf	isspace@c,w,c
  3969  0033AC  101C               	iorwf	isspace@c+1,w,c
  3970  0033AE  B4D8               	btfsc	status,2,c
  3971  0033B0  D014               	goto	l3226
  3972  0033B2  0EF7               	movlw	247
  3973  0033B4  6E1D               	movwf	??_isspace& (0+255),c
  3974  0033B6  0EFF               	movlw	255
  3975  0033B8  6E1E               	movwf	(??_isspace+1)& (0+255),c
  3976  0033BA  C01B  F01F         	movff	isspace@c,??_isspace+2
  3977  0033BE  C01C  F020         	movff	isspace@c+1,??_isspace+3
  3978  0033C2  501D               	movf	??_isspace,w,c
  3979  0033C4  261F               	addwf	??_isspace+2,f,c
  3980  0033C6  501E               	movf	??_isspace+1,w,c
  3981  0033C8  2220               	addwfc	??_isspace+3,f,c
  3982  0033CA  5020               	movf	??_isspace+3,w,c
  3983  0033CC  E104               	bnz	u2570
  3984  0033CE  0E05               	movlw	5
  3985  0033D0  5C1F               	subwf	??_isspace+2,w,c
  3986  0033D2  A0D8               	btfss	status,0,c
  3987  0033D4  D002               	goto	l3226
  3988  0033D6                     u2570:
  3989  0033D6  0E00               	movlw	0
  3990  0033D8  6E21               	movwf	_isspace$1496,c
  3991  0033DA                     l3226:
  3992  0033DA  C021  F01B         	movff	_isspace$1496,?_isspace
  3993  0033DE  6A1C               	clrf	?_isspace+1,c
  3994  0033E0  0012               	return		;funcret
  3995  0033E2                     __end_of_isspace:
  3996                           	opt callstack 0
  3997                           
  3998 ;; *************** function _isdigit *****************
  3999 ;; Defined at:
  4000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  c               2   26[COMRAM] int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2   26[COMRAM] int 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;Total ram usage:        6 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    3
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_vfpfcnvrt
  4025 ;;		_atoi
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text13
  4030  00341A                     __ptext13:
  4031                           	opt callstack 0
  4032  00341A                     _isdigit:
  4033                           	opt callstack 24
  4034                           
  4035                           ;incstack = 0
  4036  00341A  0ED0               	movlw	208
  4037  00341C  6E1D               	movwf	??_isdigit& (0+255),c
  4038  00341E  0EFF               	movlw	255
  4039  003420  6E1E               	movwf	(??_isdigit+1)& (0+255),c
  4040  003422  C01B  F01F         	movff	isdigit@c,??_isdigit+2
  4041  003426  C01C  F020         	movff	isdigit@c+1,??_isdigit+3
  4042  00342A  501D               	movf	??_isdigit,w,c
  4043  00342C  261F               	addwf	??_isdigit+2,f,c
  4044  00342E  501E               	movf	??_isdigit+1,w,c
  4045  003430  2220               	addwfc	??_isdigit+3,f,c
  4046  003432  5020               	movf	??_isdigit+3,w,c
  4047  003434  E106               	bnz	u2540
  4048  003436  0E0A               	movlw	10
  4049  003438  5C1F               	subwf	??_isdigit+2,w,c
  4050  00343A  B0D8               	btfsc	status,0,c
  4051  00343C  D002               	goto	u2540
  4052  00343E  0E01               	movlw	1
  4053  003440  D001               	goto	u2550
  4054  003442                     u2540:
  4055  003442  0E00               	movlw	0
  4056  003444                     u2550:
  4057  003444  6E1B               	movwf	?_isdigit,c
  4058  003446  6A1C               	clrf	?_isdigit+1,c
  4059  003448  0012               	return		;funcret
  4060  00344A                     __end_of_isdigit:
  4061                           	opt callstack 0
  4062                           
  4063 ;; *************** function ___wmul *****************
  4064 ;; Defined at:
  4065 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  multiplier      2   26[COMRAM] unsigned int 
  4068 ;;  multiplicand    2   28[COMRAM] unsigned int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  product         2   30[COMRAM] unsigned int 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2   26[COMRAM] unsigned int 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, prodl, prodh
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        6 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    3
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_atoi
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text14
  4095  0034CC                     __ptext14:
  4096                           	opt callstack 0
  4097  0034CC                     ___wmul:
  4098                           	opt callstack 23
  4099                           
  4100                           ;incstack = 0
  4101  0034CC  501B               	movf	___wmul@multiplier,w,c
  4102  0034CE  021D               	mulwf	___wmul@multiplicand,c
  4103  0034D0  CFF3 F01F          	movff	prodl,___wmul@product
  4104  0034D4  CFF4 F020          	movff	prodh,___wmul@product+1
  4105  0034D8  501B               	movf	___wmul@multiplier,w,c
  4106  0034DA  021E               	mulwf	___wmul@multiplicand+1,c
  4107  0034DC  50F3               	movf	prodl,w,c
  4108  0034DE  2620               	addwf	___wmul@product+1,f,c
  4109  0034E0  501C               	movf	___wmul@multiplier+1,w,c
  4110  0034E2  021D               	mulwf	___wmul@multiplicand,c
  4111  0034E4  50F3               	movf	prodl,w,c
  4112  0034E6  2620               	addwf	___wmul@product+1,f,c
  4113  0034E8  C01F  F01B         	movff	___wmul@product,?___wmul
  4114  0034EC  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  4115  0034F0  0012               	return		;funcret
  4116  0034F2                     __end_of___wmul:
  4117                           	opt callstack 0
  4118                           
  4119 ;; *************** function _portSetup *****************
  4120 ;; Defined at:
  4121 ;;		line 369 in file "main.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    3
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_main
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text15
  4150  003232                     __ptext15:
  4151                           	opt callstack 0
  4152  003232                     _portSetup:
  4153                           	opt callstack 27
  4154                           
  4155                           ;main.c: 373:     LATA = 0x00;
  4156                           
  4157                           ;incstack = 0
  4158  003232  0E00               	movlw	0
  4159  003234  6E89               	movwf	3977,c	;volatile
  4160                           
  4161                           ;main.c: 374:     LATB = 0x00;
  4162  003236  0E00               	movlw	0
  4163  003238  6E8A               	movwf	3978,c	;volatile
  4164                           
  4165                           ;main.c: 375:     LATC = 0x00;
  4166  00323A  0E00               	movlw	0
  4167  00323C  6E8B               	movwf	3979,c	;volatile
  4168                           
  4169                           ;main.c: 376:     LATD = 0x00;
  4170  00323E  0E00               	movlw	0
  4171  003240  6E8C               	movwf	3980,c	;volatile
  4172                           
  4173                           ;main.c: 377:     LATE = 0x00;
  4174  003242  0E00               	movlw	0
  4175  003244  6E8D               	movwf	3981,c	;volatile
  4176                           
  4177                           ;main.c: 381:     TRISA = 0b11000000;
  4178  003246  0EC0               	movlw	192
  4179  003248  6E92               	movwf	3986,c	;volatile
  4180                           
  4181                           ;main.c: 384:     TRISB = 0b11110111;
  4182  00324A  0EF7               	movlw	247
  4183  00324C  6E93               	movwf	3987,c	;volatile
  4184                           
  4185                           ;main.c: 386:     TRISC = 0b10000000;
  4186  00324E  0E80               	movlw	128
  4187  003250  6E94               	movwf	3988,c	;volatile
  4188                           
  4189                           ;main.c: 390:     TRISD = 0b00000011;
  4190  003252  0E03               	movlw	3
  4191  003254  6E95               	movwf	3989,c	;volatile
  4192                           
  4193                           ;main.c: 396:     ADCON0 = 0x00;
  4194  003256  0E00               	movlw	0
  4195  003258  6EC2               	movwf	4034,c	;volatile
  4196                           
  4197                           ;main.c: 397:     ADCON1 = 0x0F;
  4198  00325A  0E0F               	movlw	15
  4199  00325C  6EC1               	movwf	4033,c	;volatile
  4200                           
  4201                           ;main.c: 398:     ADCON2bits.ADFM = 1;
  4202  00325E  8EC0               	bsf	4032,7,c	;volatile
  4203                           
  4204                           ;main.c: 400:     CVRCON = 0x00;
  4205  003260  0E00               	movlw	0
  4206  003262  6EB5               	movwf	4021,c	;volatile
  4207                           
  4208                           ;main.c: 401:     CMCONbits.CIS = 0;
  4209  003264  96B4               	bcf	4020,3,c	;volatile
  4210                           
  4211                           ;main.c: 402:     ADCON2 = 0b10110001;
  4212  003266  0EB1               	movlw	177
  4213  003268  6EC0               	movwf	4032,c	;volatile
  4214                           
  4215                           ;main.c: 406:     INT0IF = 0;
  4216  00326A  92F2               	bcf	4082,1,c	;volatile
  4217                           
  4218                           ;main.c: 407:     INT0IE = 1;
  4219  00326C  88F2               	bsf	4082,4,c	;volatile
  4220                           
  4221                           ;main.c: 408:     INT2IF = 0;
  4222  00326E  92F0               	bcf	4080,1,c	;volatile
  4223                           
  4224                           ;main.c: 409:     INT2IE = 1;
  4225  003270  88F0               	bsf	4080,4,c	;volatile
  4226                           
  4227                           ;main.c: 411:     INTEDG0 = 1;
  4228  003272  8CF1               	bsf	4081,6,c	;volatile
  4229                           
  4230                           ;main.c: 414:     INT1IF = 0;
  4231  003274  90F0               	bcf	4080,0,c	;volatile
  4232                           
  4233                           ;main.c: 415:     INT1IE = 1;
  4234  003276  86F0               	bsf	4080,3,c	;volatile
  4235                           
  4236                           ;main.c: 417:     INTEDG1 = 1;
  4237  003278  8AF1               	bsf	4081,5,c	;volatile
  4238                           
  4239                           ;main.c: 419:     (INTCONbits.GIE = 1);
  4240  00327A  8EF2               	bsf	4082,7,c	;volatile
  4241                           
  4242                           ;main.c: 423:     INTCONbits.PEIE_GIEL = 1;
  4243  00327C  8CF2               	bsf	4082,6,c	;volatile
  4244  00327E  0012               	return		;funcret
  4245  003280                     __end_of_portSetup:
  4246                           	opt callstack 0
  4247                           
  4248 ;; *************** function _initLCD *****************
  4249 ;; Defined at:
  4250 ;;		line 67 in file "lcd.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;		None
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;Total ram usage:        1 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    7
  4271 ;; This function calls:
  4272 ;;		_lcdInst
  4273 ;;		_send_byte
  4274 ;;		_send_nibble
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text16
  4281  003028                     __ptext16:
  4282                           	opt callstack 0
  4283  003028                     _initLCD:
  4284                           	opt callstack 23
  4285                           
  4286                           ;lcd.c: 68:     _delay((unsigned long)((15)*(10000000/4000.0)));
  4287                           
  4288                           ;incstack = 0
  4289  003028  0E31               	movlw	49
  4290  00302A  6E1F               	movwf	??_initLCD& (0+255),c
  4291  00302C  0EB2               	movlw	178
  4292  00302E                     u5127:
  4293  00302E  2EE8               	decfsz	wreg,f,c
  4294  003030  D7FE               	bra	u5127
  4295  003032  2E1F               	decfsz	??_initLCD& (0+255),f,c
  4296  003034  D7FC               	bra	u5127
  4297  003036  D000               	nop2	
  4298                           
  4299                           ;lcd.c: 70:     LATDbits.LATD2 = 0;
  4300  003038  948C               	bcf	3980,2,c	;volatile
  4301                           
  4302                           ;lcd.c: 72:     send_nibble(0b0011);
  4303  00303A  0E03               	movlw	3
  4304  00303C  ECAA  F01A         	call	_send_nibble
  4305                           
  4306                           ;lcd.c: 73:     _delay((unsigned long)((5)*(10000000/4000.0)));
  4307  003040  0E11               	movlw	17
  4308  003042  6E1F               	movwf	??_initLCD& (0+255),c
  4309  003044  0E3A               	movlw	58
  4310  003046                     u5137:
  4311  003046  2EE8               	decfsz	wreg,f,c
  4312  003048  D7FE               	bra	u5137
  4313  00304A  2E1F               	decfsz	??_initLCD& (0+255),f,c
  4314  00304C  D7FC               	bra	u5137
  4315  00304E  D000               	nop2	
  4316                           
  4317                           ;lcd.c: 74:     send_nibble(0b0011);
  4318  003050  0E03               	movlw	3
  4319  003052  ECAA  F01A         	call	_send_nibble
  4320                           
  4321                           ;lcd.c: 75:     _delay((unsigned long)((150)*(10000000/4000000.0)));
  4322  003056  0E7D               	movlw	125
  4323  003058                     u5147:
  4324  003058  2EE8               	decfsz	wreg,f,c
  4325  00305A  D7FE               	bra	u5147
  4326                           
  4327                           ;lcd.c: 76:     send_byte(0b00110010);
  4328  00305C  0E32               	movlw	50
  4329  00305E  ECBE  F01A         	call	_send_byte
  4330                           
  4331                           ;lcd.c: 78:     send_byte(0b00101000);
  4332  003062  0E28               	movlw	40
  4333  003064  ECBE  F01A         	call	_send_byte
  4334                           
  4335                           ;lcd.c: 79:     send_byte(0b00001000);
  4336  003068  0E08               	movlw	8
  4337  00306A  ECBE  F01A         	call	_send_byte
  4338                           
  4339                           ;lcd.c: 80:     send_byte(0b00000001);
  4340  00306E  0E01               	movlw	1
  4341  003070  ECBE  F01A         	call	_send_byte
  4342                           
  4343                           ;lcd.c: 81:     _delay((unsigned long)((5)*(10000000/4000.0)));
  4344  003074  0E11               	movlw	17
  4345  003076  6E1F               	movwf	??_initLCD& (0+255),c
  4346  003078  0E3A               	movlw	58
  4347  00307A                     u5157:
  4348  00307A  2EE8               	decfsz	wreg,f,c
  4349  00307C  D7FE               	bra	u5157
  4350  00307E  2E1F               	decfsz	??_initLCD& (0+255),f,c
  4351  003080  D7FC               	bra	u5157
  4352  003082  D000               	nop2	
  4353                           
  4354                           ;lcd.c: 82:     send_byte(0b00000110);
  4355  003084  0E06               	movlw	6
  4356  003086  ECBE  F01A         	call	_send_byte
  4357                           
  4358                           ;lcd.c: 85:     { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  4359  00308A  0E0F               	movlw	15
  4360  00308C  ECD4  F01A         	call	_lcdInst
  4361  003090  0012               	return		;funcret
  4362  003092                     __end_of_initLCD:
  4363                           	opt callstack 0
  4364                           
  4365 ;; *************** function ___flsub *****************
  4366 ;; Defined at:
  4367 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  b               4   42[COMRAM] void 
  4370 ;;  a               4   46[COMRAM] void 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  4   42[COMRAM] void 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4382 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;Total ram usage:        8 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    4
  4389 ;; This function calls:
  4390 ;;		___fladd
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text17
  4397  003318                     __ptext17:
  4398                           	opt callstack 0
  4399  003318                     ___flsub:
  4400                           	opt callstack 26
  4401                           
  4402                           ;incstack = 0
  4403  003318  0E00               	movlw	0
  4404  00331A  1A2F               	xorwf	___flsub@a,f,c
  4405  00331C  0E00               	movlw	0
  4406  00331E  1A30               	xorwf	___flsub@a+1,f,c
  4407  003320  0E00               	movlw	0
  4408  003322  1A31               	xorwf	___flsub@a+2,f,c
  4409  003324  0E80               	movlw	128
  4410  003326  1A32               	xorwf	___flsub@a+3,f,c
  4411  003328  C02B  F01B         	movff	___flsub@b,___fladd@b
  4412  00332C  C02C  F01C         	movff	___flsub@b+1,___fladd@b+1
  4413  003330  C02D  F01D         	movff	___flsub@b+2,___fladd@b+2
  4414  003334  C02E  F01E         	movff	___flsub@b+3,___fladd@b+3
  4415  003338  C02F  F01F         	movff	___flsub@a,___fladd@a
  4416  00333C  C030  F020         	movff	___flsub@a+1,___fladd@a+1
  4417  003340  C031  F021         	movff	___flsub@a+2,___fladd@a+2
  4418  003344  C032  F022         	movff	___flsub@a+3,___fladd@a+3
  4419  003348  EC9B  F00F         	call	___fladd	;wreg free
  4420  00334C  C01B  F02B         	movff	?___fladd,?___flsub
  4421  003350  C01C  F02C         	movff	?___fladd+1,?___flsub+1
  4422  003354  C01D  F02D         	movff	?___fladd+2,?___flsub+2
  4423  003358  C01E  F02E         	movff	?___fladd+3,?___flsub+3
  4424  00335C  0012               	return		;funcret
  4425  00335E                     __end_of___flsub:
  4426                           	opt callstack 0
  4427                           
  4428 ;; *************** function ___fladd *****************
  4429 ;; Defined at:
  4430 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  b               4   26[COMRAM] void 
  4433 ;;  a               4   30[COMRAM] void 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  grs             1   41[COMRAM] unsigned char 
  4436 ;;  bexp            1   40[COMRAM] unsigned char 
  4437 ;;  aexp            1   39[COMRAM] unsigned char 
  4438 ;;  signs           1   38[COMRAM] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  4   26[COMRAM] unsigned char 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4448 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;Total ram usage:       16 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    3
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		___flsub
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text18
  4463  001F36                     __ptext18:
  4464                           	opt callstack 0
  4465  001F36                     ___fladd:
  4466                           	opt callstack 26
  4467                           
  4468                           ;incstack = 0
  4469  001F36  501E               	movf	___fladd@b+3,w,c
  4470  001F38  0B80               	andlw	128
  4471  001F3A  6E27               	movwf	___fladd@signs,c
  4472  001F3C  501E               	movf	___fladd@b+3,w,c
  4473  001F3E  241E               	addwf	___fladd@b+3,w,c
  4474  001F40  6E29               	movwf	___fladd@bexp,c
  4475  001F42  BE1D               	btfsc	___fladd@b+2,7,c
  4476  001F44  8029               	bsf	___fladd@bexp,0,c
  4477  001F46  5029               	movf	___fladd@bexp,w,c
  4478  001F48  B4D8               	btfsc	status,2,c
  4479  001F4A  D00D               	goto	l3538
  4480  001F4C  2829               	incf	___fladd@bexp,w,c
  4481  001F4E  A4D8               	btfss	status,2,c
  4482  001F50  D008               	goto	l3534
  4483  001F52  0E00               	movlw	0
  4484  001F54  6E1B               	movwf	___fladd@b,c
  4485  001F56  0E00               	movlw	0
  4486  001F58  6E1C               	movwf	___fladd@b+1,c
  4487  001F5A  0E00               	movlw	0
  4488  001F5C  6E1D               	movwf	___fladd@b+2,c
  4489  001F5E  0E00               	movlw	0
  4490  001F60  6E1E               	movwf	___fladd@b+3,c
  4491  001F62                     l3534:
  4492  001F62  8E1D               	bsf	___fladd@b+2,7,c
  4493  001F64  D006               	goto	L1
  4494  001F66                     l3538:
  4495  001F66  0E00               	movlw	0
  4496  001F68  6E1B               	movwf	___fladd@b,c
  4497  001F6A  0E00               	movlw	0
  4498  001F6C  6E1C               	movwf	___fladd@b+1,c
  4499  001F6E  0E00               	movlw	0
  4500  001F70  6E1D               	movwf	___fladd@b+2,c
  4501  001F72                     L1:
  4502  001F72  0E00               	movlw	0
  4503  001F74  6E1E               	movwf	___fladd@b+3,c
  4504  001F76  5022               	movf	___fladd@a+3,w,c
  4505  001F78  0B80               	andlw	128
  4506  001F7A  6E28               	movwf	___fladd@aexp,c
  4507  001F7C  5027               	movf	___fladd@signs,w,c
  4508  001F7E  1828               	xorwf	___fladd@aexp,w,c
  4509  001F80  A4D8               	btfss	status,2,c
  4510  001F82  8C27               	bsf	___fladd@signs,6,c
  4511  001F84  5022               	movf	___fladd@a+3,w,c
  4512  001F86  2422               	addwf	___fladd@a+3,w,c
  4513  001F88  6E28               	movwf	___fladd@aexp,c
  4514  001F8A  BE21               	btfsc	___fladd@a+2,7,c
  4515  001F8C  8028               	bsf	___fladd@aexp,0,c
  4516  001F8E  5028               	movf	___fladd@aexp,w,c
  4517  001F90  B4D8               	btfsc	status,2,c
  4518  001F92  D00D               	goto	l3562
  4519  001F94  2828               	incf	___fladd@aexp,w,c
  4520  001F96  A4D8               	btfss	status,2,c
  4521  001F98  D008               	goto	l3558
  4522  001F9A  0E00               	movlw	0
  4523  001F9C  6E1F               	movwf	___fladd@a,c
  4524  001F9E  0E00               	movlw	0
  4525  001FA0  6E20               	movwf	___fladd@a+1,c
  4526  001FA2  0E00               	movlw	0
  4527  001FA4  6E21               	movwf	___fladd@a+2,c
  4528  001FA6  0E00               	movlw	0
  4529  001FA8  6E22               	movwf	___fladd@a+3,c
  4530  001FAA                     l3558:
  4531  001FAA  8E21               	bsf	___fladd@a+2,7,c
  4532  001FAC  D006               	goto	L2
  4533  001FAE                     l3562:
  4534  001FAE  0E00               	movlw	0
  4535  001FB0  6E1F               	movwf	___fladd@a,c
  4536  001FB2  0E00               	movlw	0
  4537  001FB4  6E20               	movwf	___fladd@a+1,c
  4538  001FB6  0E00               	movlw	0
  4539  001FB8  6E21               	movwf	___fladd@a+2,c
  4540  001FBA                     L2:
  4541  001FBA  0E00               	movlw	0
  4542  001FBC  6E22               	movwf	___fladd@a+3,c
  4543  001FBE  5029               	movf	___fladd@bexp,w,c
  4544  001FC0  5C28               	subwf	___fladd@aexp,w,c
  4545  001FC2  B0D8               	btfsc	status,0,c
  4546  001FC4  D022               	goto	l3600
  4547  001FC6  AC27               	btfss	___fladd@signs,6,c
  4548  001FC8  D002               	goto	l3570
  4549  001FCA  0E80               	movlw	128
  4550  001FCC  1A27               	xorwf	___fladd@signs,f,c
  4551  001FCE                     l3570:
  4552  001FCE  C029  F02A         	movff	___fladd@bexp,___fladd@grs
  4553  001FD2  C028  F029         	movff	___fladd@aexp,___fladd@bexp
  4554  001FD6  C02A  F028         	movff	___fladd@grs,___fladd@aexp
  4555  001FDA  C01B  F02A         	movff	___fladd@b,___fladd@grs
  4556  001FDE  C01F  F01B         	movff	___fladd@a,___fladd@b
  4557  001FE2  C02A  F01F         	movff	___fladd@grs,___fladd@a
  4558  001FE6  C01C  F02A         	movff	___fladd@b+1,___fladd@grs
  4559  001FEA  C020  F01C         	movff	___fladd@a+1,___fladd@b+1
  4560  001FEE  C02A  F020         	movff	___fladd@grs,___fladd@a+1
  4561  001FF2  C01D  F02A         	movff	___fladd@b+2,___fladd@grs
  4562  001FF6  C021  F01D         	movff	___fladd@a+2,___fladd@b+2
  4563  001FFA  C02A  F021         	movff	___fladd@grs,___fladd@a+2
  4564  001FFE  C01E  F02A         	movff	___fladd@b+3,___fladd@grs
  4565  002002  C022  F01E         	movff	___fladd@a+3,___fladd@b+3
  4566  002006  C02A  F022         	movff	___fladd@grs,___fladd@a+3
  4567  00200A                     l3600:
  4568  00200A  0E00               	movlw	0
  4569  00200C  6E2A               	movwf	___fladd@grs,c
  4570  00200E  5029               	movf	___fladd@bexp,w,c
  4571  002010  C028  F023         	movff	___fladd@aexp,??___fladd
  4572  002014  6A24               	clrf	(??___fladd+1)& (0+255),c
  4573  002016  5E23               	subwf	??___fladd,f,c
  4574  002018  0E00               	movlw	0
  4575  00201A  5A24               	subwfb	??___fladd+1,f,c
  4576  00201C  BE24               	btfsc	??___fladd+1,7,c
  4577  00201E  D02C               	goto	l1072
  4578  002020  5024               	movf	??___fladd+1,w,c
  4579  002022  E104               	bnz	u3100
  4580  002024  0E1A               	movlw	26
  4581  002026  5C23               	subwf	??___fladd,w,c
  4582  002028  A0D8               	btfss	status,0,c
  4583  00202A  D026               	goto	l1072
  4584  00202C                     u3100:
  4585  00202C  501B               	movf	___fladd@b,w,c
  4586  00202E  101C               	iorwf	___fladd@b+1,w,c
  4587  002030  101D               	iorwf	___fladd@b+2,w,c
  4588  002032  101E               	iorwf	___fladd@b+3,w,c
  4589  002034  B4D8               	btfsc	status,2,c
  4590  002036  D002               	goto	u3110
  4591  002038  0E01               	movlw	1
  4592  00203A  D001               	goto	u3120
  4593  00203C                     u3110:
  4594  00203C  0E00               	movlw	0
  4595  00203E                     u3120:
  4596  00203E  6E2A               	movwf	___fladd@grs,c
  4597  002040  0E00               	movlw	0
  4598  002042  6E1B               	movwf	___fladd@b,c
  4599  002044  0E00               	movlw	0
  4600  002046  6E1C               	movwf	___fladd@b+1,c
  4601  002048  0E00               	movlw	0
  4602  00204A  6E1D               	movwf	___fladd@b+2,c
  4603  00204C  0E00               	movlw	0
  4604  00204E  6E1E               	movwf	___fladd@b+3,c
  4605  002050  C028  F029         	movff	___fladd@aexp,___fladd@bexp
  4606  002054  D015               	goto	u3150
  4607  002056                     l1073:
  4608  002056  A02A               	btfss	___fladd@grs,0,c
  4609  002058  D005               	goto	l3612
  4610  00205A  90D8               	bcf	status,0,c
  4611  00205C  302A               	rrcf	___fladd@grs,w,c
  4612  00205E  0901               	iorlw	1
  4613  002060  6E2A               	movwf	___fladd@grs,c
  4614  002062  D002               	goto	l3614
  4615  002064                     l3612:
  4616  002064  90D8               	bcf	status,0,c
  4617  002066  322A               	rrcf	___fladd@grs,f,c
  4618  002068                     l3614:
  4619  002068  B01B               	btfsc	___fladd@b,0,c
  4620  00206A  8E2A               	bsf	___fladd@grs,7,c
  4621  00206C  341E               	rlcf	___fladd@b+3,w,c
  4622  00206E  321E               	rrcf	___fladd@b+3,f,c
  4623  002070  321D               	rrcf	___fladd@b+2,f,c
  4624  002072  321C               	rrcf	___fladd@b+1,f,c
  4625  002074  321B               	rrcf	___fladd@b,f,c
  4626  002076  2A29               	incf	___fladd@bexp,f,c
  4627  002078                     l1072:
  4628  002078  5028               	movf	___fladd@aexp,w,c
  4629  00207A  5C29               	subwf	___fladd@bexp,w,c
  4630  00207C  A0D8               	btfss	status,0,c
  4631  00207E  D7EB               	goto	l1073
  4632  002080                     u3150:
  4633  002080  BC27               	btfsc	___fladd@signs,6,c
  4634  002082  D028               	goto	l3646
  4635  002084  5029               	movf	___fladd@bexp,w,c
  4636  002086  A4D8               	btfss	status,2,c
  4637  002088  D009               	goto	l3628
  4638  00208A  0E00               	movlw	0
  4639  00208C  6E1B               	movwf	?___fladd,c
  4640  00208E  0E00               	movlw	0
  4641  002090  6E1C               	movwf	?___fladd+1,c
  4642  002092  0E00               	movlw	0
  4643  002094  6E1D               	movwf	?___fladd+2,c
  4644  002096  0E00               	movlw	0
  4645  002098  6E1E               	movwf	?___fladd+3,c
  4646  00209A  0012               	return	
  4647  00209C                     l3628:
  4648  00209C  501F               	movf	___fladd@a,w,c
  4649  00209E  261B               	addwf	___fladd@b,f,c
  4650  0020A0  5020               	movf	___fladd@a+1,w,c
  4651  0020A2  221C               	addwfc	___fladd@b+1,f,c
  4652  0020A4  5021               	movf	___fladd@a+2,w,c
  4653  0020A6  221D               	addwfc	___fladd@b+2,f,c
  4654  0020A8  5022               	movf	___fladd@a+3,w,c
  4655  0020AA  221E               	addwfc	___fladd@b+3,f,c
  4656  0020AC  A01E               	btfss	___fladd@b+3,0,c
  4657  0020AE  D071               	goto	u3280
  4658  0020B0  A02A               	btfss	___fladd@grs,0,c
  4659  0020B2  D005               	goto	l3636
  4660  0020B4  90D8               	bcf	status,0,c
  4661  0020B6  302A               	rrcf	___fladd@grs,w,c
  4662  0020B8  0901               	iorlw	1
  4663  0020BA  6E2A               	movwf	___fladd@grs,c
  4664  0020BC  D002               	goto	l3638
  4665  0020BE                     l3636:
  4666  0020BE  90D8               	bcf	status,0,c
  4667  0020C0  322A               	rrcf	___fladd@grs,f,c
  4668  0020C2                     l3638:
  4669  0020C2  B01B               	btfsc	___fladd@b,0,c
  4670  0020C4  8E2A               	bsf	___fladd@grs,7,c
  4671  0020C6  341E               	rlcf	___fladd@b+3,w,c
  4672  0020C8  321E               	rrcf	___fladd@b+3,f,c
  4673  0020CA  321D               	rrcf	___fladd@b+2,f,c
  4674  0020CC  321C               	rrcf	___fladd@b+1,f,c
  4675  0020CE  321B               	rrcf	___fladd@b,f,c
  4676  0020D0  2A29               	incf	___fladd@bexp,f,c
  4677  0020D2  D05F               	goto	u3280
  4678  0020D4                     l3646:
  4679  0020D4  501F               	movf	___fladd@a,w,c
  4680  0020D6  5C1B               	subwf	___fladd@b,w,c
  4681  0020D8  5020               	movf	___fladd@a+1,w,c
  4682  0020DA  581C               	subwfb	___fladd@b+1,w,c
  4683  0020DC  5021               	movf	___fladd@a+2,w,c
  4684  0020DE  581D               	subwfb	___fladd@b+2,w,c
  4685  0020E0  501E               	movf	___fladd@b+3,w,c
  4686  0020E2  0A80               	xorlw	128
  4687  0020E4  6E23               	movwf	??___fladd& (0+255),c
  4688  0020E6  5022               	movf	___fladd@a+3,w,c
  4689  0020E8  0A80               	xorlw	128
  4690  0020EA  5823               	subwfb	??___fladd& (0+255),w,c
  4691  0020EC  B0D8               	btfsc	status,0,c
  4692  0020EE  D025               	goto	l3656
  4693  0020F0  501B               	movf	___fladd@b,w,c
  4694  0020F2  5C1F               	subwf	___fladd@a,w,c
  4695  0020F4  6E23               	movwf	??___fladd& (0+255),c
  4696  0020F6  501C               	movf	___fladd@b+1,w,c
  4697  0020F8  5820               	subwfb	___fladd@a+1,w,c
  4698  0020FA  6E24               	movwf	(??___fladd+1)& (0+255),c
  4699  0020FC  501D               	movf	___fladd@b+2,w,c
  4700  0020FE  5821               	subwfb	___fladd@a+2,w,c
  4701  002100  6E25               	movwf	(??___fladd+2)& (0+255),c
  4702  002102  501E               	movf	___fladd@b+3,w,c
  4703  002104  5822               	subwfb	___fladd@a+3,w,c
  4704  002106  6E26               	movwf	(??___fladd+3)& (0+255),c
  4705  002108  0EFF               	movlw	255
  4706  00210A  2423               	addwf	??___fladd,w,c
  4707  00210C  6E1B               	movwf	___fladd@b,c
  4708  00210E  0EFF               	movlw	255
  4709  002110  2024               	addwfc	??___fladd+1,w,c
  4710  002112  6E1C               	movwf	___fladd@b+1,c
  4711  002114  0EFF               	movlw	255
  4712  002116  2025               	addwfc	??___fladd+2,w,c
  4713  002118  6E1D               	movwf	___fladd@b+2,c
  4714  00211A  0EFF               	movlw	255
  4715  00211C  2026               	addwfc	??___fladd+3,w,c
  4716  00211E  6E1E               	movwf	___fladd@b+3,c
  4717  002120  0E80               	movlw	128
  4718  002122  1A27               	xorwf	___fladd@signs,f,c
  4719  002124  6C2A               	negf	___fladd@grs,c
  4720  002126  502A               	movf	___fladd@grs,w,c
  4721  002128  A4D8               	btfss	status,2,c
  4722  00212A  D00F               	goto	l1088
  4723  00212C  0E01               	movlw	1
  4724  00212E  261B               	addwf	___fladd@b,f,c
  4725  002130  0E00               	movlw	0
  4726  002132  221C               	addwfc	___fladd@b+1,f,c
  4727  002134  221D               	addwfc	___fladd@b+2,f,c
  4728  002136  221E               	addwfc	___fladd@b+3,f,c
  4729  002138  D008               	goto	l1088
  4730  00213A                     l3656:
  4731  00213A  501F               	movf	___fladd@a,w,c
  4732  00213C  5E1B               	subwf	___fladd@b,f,c
  4733  00213E  5020               	movf	___fladd@a+1,w,c
  4734  002140  5A1C               	subwfb	___fladd@b+1,f,c
  4735  002142  5021               	movf	___fladd@a+2,w,c
  4736  002144  5A1D               	subwfb	___fladd@b+2,f,c
  4737  002146  5022               	movf	___fladd@a+3,w,c
  4738  002148  5A1E               	subwfb	___fladd@b+3,f,c
  4739  00214A                     l1088:
  4740  00214A  501B               	movf	___fladd@b,w,c
  4741  00214C  101C               	iorwf	___fladd@b+1,w,c
  4742  00214E  101D               	iorwf	___fladd@b+2,w,c
  4743  002150  101E               	iorwf	___fladd@b+3,w,c
  4744  002152  A4D8               	btfss	status,2,c
  4745  002154  D01C               	goto	l3680
  4746  002156  502A               	movf	___fladd@grs,w,c
  4747  002158  A4D8               	btfss	status,2,c
  4748  00215A  D019               	goto	l3680
  4749  00215C  0E00               	movlw	0
  4750  00215E  6E1B               	movwf	?___fladd,c
  4751  002160  0E00               	movlw	0
  4752  002162  6E1C               	movwf	?___fladd+1,c
  4753  002164  0E00               	movlw	0
  4754  002166  6E1D               	movwf	?___fladd+2,c
  4755  002168  0E00               	movlw	0
  4756  00216A  6E1E               	movwf	?___fladd+3,c
  4757  00216C  0012               	return	
  4758  00216E                     l3664:
  4759  00216E  90D8               	bcf	status,0,c
  4760  002170  361B               	rlcf	___fladd@b,f,c
  4761  002172  361C               	rlcf	___fladd@b+1,f,c
  4762  002174  361D               	rlcf	___fladd@b+2,f,c
  4763  002176  361E               	rlcf	___fladd@b+3,f,c
  4764  002178  BE2A               	btfsc	___fladd@grs,7,c
  4765  00217A  801B               	bsf	___fladd@b,0,c
  4766  00217C  A02A               	btfss	___fladd@grs,0,c
  4767  00217E  D002               	goto	l3674
  4768  002180  80D8               	bsf	status,0,c
  4769  002182  D001               	goto	L3
  4770  002184                     l3674:
  4771  002184  90D8               	bcf	status,0,c
  4772  002186                     L3:
  4773  002186  362A               	rlcf	___fladd@grs,f,c
  4774  002188  5029               	movf	___fladd@bexp,w,c
  4775  00218A  A4D8               	btfss	status,2,c
  4776  00218C  0629               	decf	___fladd@bexp,f,c
  4777  00218E                     l3680:
  4778  00218E  AE1D               	btfss	___fladd@b+2,7,c
  4779  002190  D7EE               	goto	l3664
  4780  002192                     u3280:
  4781  002192  0E00               	movlw	0
  4782  002194  6E28               	movwf	___fladd@aexp,c
  4783  002196  AE2A               	btfss	___fladd@grs,7,c
  4784  002198  D00B               	goto	l1097
  4785  00219A  C02A  F023         	movff	___fladd@grs,??___fladd
  4786  00219E  0E7F               	movlw	127
  4787  0021A0  1623               	andwf	??___fladd,f,c
  4788  0021A2  B4D8               	btfsc	status,2,c
  4789  0021A4  D003               	goto	l1098
  4790  0021A6                     u3300:
  4791  0021A6  0E01               	movlw	1
  4792  0021A8  6E28               	movwf	___fladd@aexp,c
  4793  0021AA  D002               	goto	l1097
  4794  0021AC                     l1098:
  4795  0021AC  B01B               	btfsc	___fladd@b,0,c
  4796  0021AE  D7FB               	goto	u3300
  4797  0021B0                     l1097:
  4798  0021B0  5028               	movf	___fladd@aexp,w,c
  4799  0021B2  B4D8               	btfsc	status,2,c
  4800  0021B4  D020               	goto	l3700
  4801  0021B6  0E01               	movlw	1
  4802  0021B8  261B               	addwf	___fladd@b,f,c
  4803  0021BA  0E00               	movlw	0
  4804  0021BC  221C               	addwfc	___fladd@b+1,f,c
  4805  0021BE  221D               	addwfc	___fladd@b+2,f,c
  4806  0021C0  221E               	addwfc	___fladd@b+3,f,c
  4807  0021C2  A01E               	btfss	___fladd@b+3,0,c
  4808  0021C4  D018               	goto	l3700
  4809  0021C6  C01B  F023         	movff	___fladd@b,??___fladd
  4810  0021CA  C01C  F024         	movff	___fladd@b+1,??___fladd+1
  4811  0021CE  C01D  F025         	movff	___fladd@b+2,??___fladd+2
  4812  0021D2  C01E  F026         	movff	___fladd@b+3,??___fladd+3
  4813  0021D6  3426               	rlcf	??___fladd+3,w,c
  4814  0021D8  3226               	rrcf	??___fladd+3,f,c
  4815  0021DA  3225               	rrcf	??___fladd+2,f,c
  4816  0021DC  3224               	rrcf	??___fladd+1,f,c
  4817  0021DE  3223               	rrcf	??___fladd,f,c
  4818  0021E0  C023  F01B         	movff	??___fladd,___fladd@b
  4819  0021E4  C024  F01C         	movff	??___fladd+1,___fladd@b+1
  4820  0021E8  C025  F01D         	movff	??___fladd+2,___fladd@b+2
  4821  0021EC  C026  F01E         	movff	??___fladd+3,___fladd@b+3
  4822  0021F0  2829               	incf	___fladd@bexp,w,c
  4823  0021F2  A4D8               	btfss	status,2,c
  4824  0021F4  2A29               	incf	___fladd@bexp,f,c
  4825  0021F6                     l3700:
  4826  0021F6  2829               	incf	___fladd@bexp,w,c
  4827  0021F8  B4D8               	btfsc	status,2,c
  4828  0021FA  D003               	goto	u3360
  4829  0021FC  5029               	movf	___fladd@bexp,w,c
  4830  0021FE  A4D8               	btfss	status,2,c
  4831  002200  D00D               	goto	l3708
  4832  002202                     u3360:
  4833  002202  0E00               	movlw	0
  4834  002204  6E1B               	movwf	___fladd@b,c
  4835  002206  0E00               	movlw	0
  4836  002208  6E1C               	movwf	___fladd@b+1,c
  4837  00220A  0E00               	movlw	0
  4838  00220C  6E1D               	movwf	___fladd@b+2,c
  4839  00220E  0E00               	movlw	0
  4840  002210  6E1E               	movwf	___fladd@b+3,c
  4841  002212  5029               	movf	___fladd@bexp,w,c
  4842  002214  A4D8               	btfss	status,2,c
  4843  002216  D002               	goto	l3708
  4844  002218  0E00               	movlw	0
  4845  00221A  6E27               	movwf	___fladd@signs,c
  4846  00221C                     l3708:
  4847  00221C  A029               	btfss	___fladd@bexp,0,c
  4848  00221E  D002               	goto	l3712
  4849  002220  8E1D               	bsf	___fladd@b+2,7,c
  4850  002222  D001               	goto	l3714
  4851  002224                     l3712:
  4852  002224  9E1D               	bcf	___fladd@b+2,7,c
  4853  002226                     l3714:
  4854  002226  90D8               	bcf	status,0,c
  4855  002228  3029               	rrcf	___fladd@bexp,w,c
  4856  00222A  6E1E               	movwf	___fladd@b+3,c
  4857  00222C  BE27               	btfsc	___fladd@signs,7,c
  4858  00222E  8E1E               	bsf	___fladd@b+3,7,c
  4859  002230  C01B  F01B         	movff	___fladd@b,?___fladd
  4860  002234  C01C  F01C         	movff	___fladd@b+1,?___fladd+1
  4861  002238  C01D  F01D         	movff	___fladd@b+2,?___fladd+2
  4862  00223C  C01E  F01E         	movff	___fladd@b+3,?___fladd+3
  4863  002240  0012               	return		;funcret
  4864  002242                     __end_of___fladd:
  4865                           	opt callstack 0
  4866                           
  4867 ;; *************** function ___flmul *****************
  4868 ;; Defined at:
  4869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  b               4   51[COMRAM] unsigned char 
  4872 ;;  a               4   55[COMRAM] unsigned char 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  prod            4   70[COMRAM] struct .
  4875 ;;  grs             4   64[COMRAM] unsigned long 
  4876 ;;  temp            2   74[COMRAM] struct .
  4877 ;;  bexp            1   69[COMRAM] unsigned char 
  4878 ;;  aexp            1   68[COMRAM] unsigned char 
  4879 ;;  sign            1   63[COMRAM] unsigned char 
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  4   51[COMRAM] unsigned char 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, prodl, prodh
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4889 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;Total ram usage:       25 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    3
  4896 ;; This function calls:
  4897 ;;		Nothing
  4898 ;; This function is called by:
  4899 ;;		_main
  4900 ;;		_absolute
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text19
  4905  001BE4                     __ptext19:
  4906                           	opt callstack 0
  4907  001BE4                     ___flmul:
  4908                           	opt callstack 27
  4909                           
  4910                           ;incstack = 0
  4911  001BE4  5037               	movf	___flmul@b+3,w,c
  4912  001BE6  0B80               	andlw	128
  4913  001BE8  6E40               	movwf	___flmul@sign,c
  4914  001BEA  5037               	movf	___flmul@b+3,w,c
  4915  001BEC  2437               	addwf	___flmul@b+3,w,c
  4916  001BEE  6E46               	movwf	___flmul@bexp,c
  4917  001BF0  BE36               	btfsc	___flmul@b+2,7,c
  4918  001BF2  8046               	bsf	___flmul@bexp,0,c
  4919  001BF4  5046               	movf	___flmul@bexp,w,c
  4920  001BF6  B4D8               	btfsc	status,2,c
  4921  001BF8  D00D               	goto	l4254
  4922  001BFA  2846               	incf	___flmul@bexp,w,c
  4923  001BFC  A4D8               	btfss	status,2,c
  4924  001BFE  D008               	goto	l4252
  4925  001C00  0E00               	movlw	0
  4926  001C02  6E34               	movwf	___flmul@b,c
  4927  001C04  0E00               	movlw	0
  4928  001C06  6E35               	movwf	___flmul@b+1,c
  4929  001C08  0E00               	movlw	0
  4930  001C0A  6E36               	movwf	___flmul@b+2,c
  4931  001C0C  0E00               	movlw	0
  4932  001C0E  6E37               	movwf	___flmul@b+3,c
  4933  001C10                     l4252:
  4934  001C10  8E36               	bsf	___flmul@b+2,7,c
  4935  001C12  D008               	goto	l4256
  4936  001C14                     l4254:
  4937  001C14  0E00               	movlw	0
  4938  001C16  6E34               	movwf	___flmul@b,c
  4939  001C18  0E00               	movlw	0
  4940  001C1A  6E35               	movwf	___flmul@b+1,c
  4941  001C1C  0E00               	movlw	0
  4942  001C1E  6E36               	movwf	___flmul@b+2,c
  4943  001C20  0E00               	movlw	0
  4944  001C22  6E37               	movwf	___flmul@b+3,c
  4945  001C24                     l4256:
  4946  001C24  503B               	movf	___flmul@a+3,w,c
  4947  001C26  0B80               	andlw	128
  4948  001C28  1A40               	xorwf	___flmul@sign,f,c
  4949  001C2A  503B               	movf	___flmul@a+3,w,c
  4950  001C2C  243B               	addwf	___flmul@a+3,w,c
  4951  001C2E  6E45               	movwf	___flmul@aexp,c
  4952  001C30  BE3A               	btfsc	___flmul@a+2,7,c
  4953  001C32  8045               	bsf	___flmul@aexp,0,c
  4954  001C34  5045               	movf	___flmul@aexp,w,c
  4955  001C36  B4D8               	btfsc	status,2,c
  4956  001C38  D00D               	goto	l4272
  4957  001C3A  2845               	incf	___flmul@aexp,w,c
  4958  001C3C  A4D8               	btfss	status,2,c
  4959  001C3E  D008               	goto	l4270
  4960  001C40  0E00               	movlw	0
  4961  001C42  6E38               	movwf	___flmul@a,c
  4962  001C44  0E00               	movlw	0
  4963  001C46  6E39               	movwf	___flmul@a+1,c
  4964  001C48  0E00               	movlw	0
  4965  001C4A  6E3A               	movwf	___flmul@a+2,c
  4966  001C4C  0E00               	movlw	0
  4967  001C4E  6E3B               	movwf	___flmul@a+3,c
  4968  001C50                     l4270:
  4969  001C50  8E3A               	bsf	___flmul@a+2,7,c
  4970  001C52  D008               	goto	l1157
  4971  001C54                     l4272:
  4972  001C54  0E00               	movlw	0
  4973  001C56  6E38               	movwf	___flmul@a,c
  4974  001C58  0E00               	movlw	0
  4975  001C5A  6E39               	movwf	___flmul@a+1,c
  4976  001C5C  0E00               	movlw	0
  4977  001C5E  6E3A               	movwf	___flmul@a+2,c
  4978  001C60  0E00               	movlw	0
  4979  001C62  6E3B               	movwf	___flmul@a+3,c
  4980  001C64                     l1157:
  4981  001C64  5045               	movf	___flmul@aexp,w,c
  4982  001C66  B4D8               	btfsc	status,2,c
  4983  001C68  D003               	goto	u4230
  4984  001C6A  5046               	movf	___flmul@bexp,w,c
  4985  001C6C  A4D8               	btfss	status,2,c
  4986  001C6E  D009               	goto	l4280
  4987  001C70                     u4230:
  4988  001C70  0E00               	movlw	0
  4989  001C72  6E34               	movwf	?___flmul,c
  4990  001C74  0E00               	movlw	0
  4991  001C76  6E35               	movwf	?___flmul+1,c
  4992  001C78  0E00               	movlw	0
  4993  001C7A  6E36               	movwf	?___flmul+2,c
  4994  001C7C  0E00               	movlw	0
  4995  001C7E  6E37               	movwf	?___flmul+3,c
  4996  001C80  0012               	return	
  4997  001C82                     l4280:
  4998  001C82  503A               	movf	___flmul@a+2,w,c
  4999  001C84  0234               	mulwf	___flmul@b,c
  5000  001C86  CFF3 F04B          	movff	prodl,___flmul@temp
  5001  001C8A  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5002  001C8E  504B               	movf	___flmul@temp,w,c
  5003  001C90  6E41               	movwf	___flmul@grs,c
  5004  001C92  6A42               	clrf	___flmul@grs+1,c
  5005  001C94  6A43               	clrf	___flmul@grs+2,c
  5006  001C96  6A44               	clrf	___flmul@grs+3,c
  5007  001C98  504C               	movf	___flmul@temp+1,w,c
  5008  001C9A  6E47               	movwf	___flmul@prod,c
  5009  001C9C  6A48               	clrf	___flmul@prod+1,c
  5010  001C9E  6A49               	clrf	___flmul@prod+2,c
  5011  001CA0  6A4A               	clrf	___flmul@prod+3,c
  5012  001CA2  5039               	movf	___flmul@a+1,w,c
  5013  001CA4  0235               	mulwf	___flmul@b+1,c
  5014  001CA6  CFF3 F04B          	movff	prodl,___flmul@temp
  5015  001CAA  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5016  001CAE  504B               	movf	___flmul@temp,w,c
  5017  001CB0  2641               	addwf	___flmul@grs,f,c
  5018  001CB2  0E00               	movlw	0
  5019  001CB4  2242               	addwfc	___flmul@grs+1,f,c
  5020  001CB6  2243               	addwfc	___flmul@grs+2,f,c
  5021  001CB8  2244               	addwfc	___flmul@grs+3,f,c
  5022  001CBA  504C               	movf	___flmul@temp+1,w,c
  5023  001CBC  2647               	addwf	___flmul@prod,f,c
  5024  001CBE  0E00               	movlw	0
  5025  001CC0  2248               	addwfc	___flmul@prod+1,f,c
  5026  001CC2  2249               	addwfc	___flmul@prod+2,f,c
  5027  001CC4  224A               	addwfc	___flmul@prod+3,f,c
  5028  001CC6  5038               	movf	___flmul@a,w,c
  5029  001CC8  0236               	mulwf	___flmul@b+2,c
  5030  001CCA  CFF3 F04B          	movff	prodl,___flmul@temp
  5031  001CCE  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5032  001CD2  504B               	movf	___flmul@temp,w,c
  5033  001CD4  2641               	addwf	___flmul@grs,f,c
  5034  001CD6  0E00               	movlw	0
  5035  001CD8  2242               	addwfc	___flmul@grs+1,f,c
  5036  001CDA  2243               	addwfc	___flmul@grs+2,f,c
  5037  001CDC  2244               	addwfc	___flmul@grs+3,f,c
  5038  001CDE  504C               	movf	___flmul@temp+1,w,c
  5039  001CE0  2647               	addwf	___flmul@prod,f,c
  5040  001CE2  0E00               	movlw	0
  5041  001CE4  2248               	addwfc	___flmul@prod+1,f,c
  5042  001CE6  2249               	addwfc	___flmul@prod+2,f,c
  5043  001CE8  224A               	addwfc	___flmul@prod+3,f,c
  5044  001CEA  C043  F044         	movff	___flmul@grs+2,___flmul@grs+3
  5045  001CEE  C042  F043         	movff	___flmul@grs+1,___flmul@grs+2
  5046  001CF2  C041  F042         	movff	___flmul@grs,___flmul@grs+1
  5047  001CF6  6A41               	clrf	___flmul@grs,c
  5048  001CF8  5038               	movf	___flmul@a,w,c
  5049  001CFA  0235               	mulwf	___flmul@b+1,c
  5050  001CFC  CFF3 F04B          	movff	prodl,___flmul@temp
  5051  001D00  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5052  001D04  504B               	movf	___flmul@temp,w,c
  5053  001D06  2641               	addwf	___flmul@grs,f,c
  5054  001D08  504C               	movf	___flmul@temp+1,w,c
  5055  001D0A  2242               	addwfc	___flmul@grs+1,f,c
  5056  001D0C  0E00               	movlw	0
  5057  001D0E  2243               	addwfc	___flmul@grs+2,f,c
  5058  001D10  0E00               	movlw	0
  5059  001D12  2244               	addwfc	___flmul@grs+3,f,c
  5060  001D14  5039               	movf	___flmul@a+1,w,c
  5061  001D16  0234               	mulwf	___flmul@b,c
  5062  001D18  CFF3 F04B          	movff	prodl,___flmul@temp
  5063  001D1C  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5064  001D20  504B               	movf	___flmul@temp,w,c
  5065  001D22  2641               	addwf	___flmul@grs,f,c
  5066  001D24  504C               	movf	___flmul@temp+1,w,c
  5067  001D26  2242               	addwfc	___flmul@grs+1,f,c
  5068  001D28  0E00               	movlw	0
  5069  001D2A  2243               	addwfc	___flmul@grs+2,f,c
  5070  001D2C  0E00               	movlw	0
  5071  001D2E  2244               	addwfc	___flmul@grs+3,f,c
  5072  001D30  C043  F044         	movff	___flmul@grs+2,___flmul@grs+3
  5073  001D34  C042  F043         	movff	___flmul@grs+1,___flmul@grs+2
  5074  001D38  C041  F042         	movff	___flmul@grs,___flmul@grs+1
  5075  001D3C  6A41               	clrf	___flmul@grs,c
  5076  001D3E  5038               	movf	___flmul@a,w,c
  5077  001D40  0234               	mulwf	___flmul@b,c
  5078  001D42  CFF3 F04B          	movff	prodl,___flmul@temp
  5079  001D46  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5080  001D4A  504B               	movf	___flmul@temp,w,c
  5081  001D4C  2641               	addwf	___flmul@grs,f,c
  5082  001D4E  504C               	movf	___flmul@temp+1,w,c
  5083  001D50  2242               	addwfc	___flmul@grs+1,f,c
  5084  001D52  0E00               	movlw	0
  5085  001D54  2243               	addwfc	___flmul@grs+2,f,c
  5086  001D56  0E00               	movlw	0
  5087  001D58  2244               	addwfc	___flmul@grs+3,f,c
  5088  001D5A  503A               	movf	___flmul@a+2,w,c
  5089  001D5C  0235               	mulwf	___flmul@b+1,c
  5090  001D5E  CFF3 F04B          	movff	prodl,___flmul@temp
  5091  001D62  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5092  001D66  504B               	movf	___flmul@temp,w,c
  5093  001D68  2647               	addwf	___flmul@prod,f,c
  5094  001D6A  504C               	movf	___flmul@temp+1,w,c
  5095  001D6C  2248               	addwfc	___flmul@prod+1,f,c
  5096  001D6E  0E00               	movlw	0
  5097  001D70  2249               	addwfc	___flmul@prod+2,f,c
  5098  001D72  0E00               	movlw	0
  5099  001D74  224A               	addwfc	___flmul@prod+3,f,c
  5100  001D76  5039               	movf	___flmul@a+1,w,c
  5101  001D78  0236               	mulwf	___flmul@b+2,c
  5102  001D7A  CFF3 F04B          	movff	prodl,___flmul@temp
  5103  001D7E  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5104  001D82  504B               	movf	___flmul@temp,w,c
  5105  001D84  2647               	addwf	___flmul@prod,f,c
  5106  001D86  504C               	movf	___flmul@temp+1,w,c
  5107  001D88  2248               	addwfc	___flmul@prod+1,f,c
  5108  001D8A  0E00               	movlw	0
  5109  001D8C  2249               	addwfc	___flmul@prod+2,f,c
  5110  001D8E  0E00               	movlw	0
  5111  001D90  224A               	addwfc	___flmul@prod+3,f,c
  5112  001D92  503A               	movf	___flmul@a+2,w,c
  5113  001D94  0236               	mulwf	___flmul@b+2,c
  5114  001D96  CFF3 F04B          	movff	prodl,___flmul@temp
  5115  001D9A  CFF4 F04C          	movff	prodh,___flmul@temp+1
  5116  001D9E  504B               	movf	___flmul@temp,w,c
  5117  001DA0  6E3C               	movwf	??___flmul& (0+255),c
  5118  001DA2  504C               	movf	___flmul@temp+1,w,c
  5119  001DA4  6E3D               	movwf	(??___flmul+1)& (0+255),c
  5120  001DA6  6A3E               	clrf	(??___flmul+2)& (0+255),c
  5121  001DA8  6A3F               	clrf	(??___flmul+3)& (0+255),c
  5122  001DAA  C03E  F03F         	movff	??___flmul+2,??___flmul+3
  5123  001DAE  C03D  F03E         	movff	??___flmul+1,??___flmul+2
  5124  001DB2  C03C  F03D         	movff	??___flmul,??___flmul+1
  5125  001DB6  6A3C               	clrf	??___flmul,c
  5126  001DB8  503C               	movf	??___flmul,w,c
  5127  001DBA  2647               	addwf	___flmul@prod,f,c
  5128  001DBC  503D               	movf	??___flmul+1,w,c
  5129  001DBE  2248               	addwfc	___flmul@prod+1,f,c
  5130  001DC0  503E               	movf	??___flmul+2,w,c
  5131  001DC2  2249               	addwfc	___flmul@prod+2,f,c
  5132  001DC4  503F               	movf	??___flmul+3,w,c
  5133  001DC6  224A               	addwfc	___flmul@prod+3,f,c
  5134  001DC8  C041  F03C         	movff	___flmul@grs,??___flmul
  5135  001DCC  C042  F03D         	movff	___flmul@grs+1,??___flmul+1
  5136  001DD0  C043  F03E         	movff	___flmul@grs+2,??___flmul+2
  5137  001DD4  C044  F03F         	movff	___flmul@grs+3,??___flmul+3
  5138  001DD8  0E19               	movlw	25
  5139  001DDA  D005               	goto	u4240
  5140  001DDC                     u4245:
  5141  001DDC  90D8               	bcf	status,0,c
  5142  001DDE  323F               	rrcf	??___flmul+3,f,c
  5143  001DE0  323E               	rrcf	??___flmul+2,f,c
  5144  001DE2  323D               	rrcf	??___flmul+1,f,c
  5145  001DE4  323C               	rrcf	??___flmul,f,c
  5146  001DE6                     u4240:
  5147  001DE6  2EE8               	decfsz	wreg,f,c
  5148  001DE8  D7F9               	goto	u4245
  5149  001DEA  503C               	movf	??___flmul,w,c
  5150  001DEC  2647               	addwf	___flmul@prod,f,c
  5151  001DEE  503D               	movf	??___flmul+1,w,c
  5152  001DF0  2248               	addwfc	___flmul@prod+1,f,c
  5153  001DF2  503E               	movf	??___flmul+2,w,c
  5154  001DF4  2249               	addwfc	___flmul@prod+2,f,c
  5155  001DF6  503F               	movf	??___flmul+3,w,c
  5156  001DF8  224A               	addwfc	___flmul@prod+3,f,c
  5157  001DFA  C043  F044         	movff	___flmul@grs+2,___flmul@grs+3
  5158  001DFE  C042  F043         	movff	___flmul@grs+1,___flmul@grs+2
  5159  001E02  C041  F042         	movff	___flmul@grs,___flmul@grs+1
  5160  001E06  6A41               	clrf	___flmul@grs,c
  5161  001E08  5045               	movf	___flmul@aexp,w,c
  5162  001E0A  C046  F03C         	movff	___flmul@bexp,??___flmul
  5163  001E0E  6A3D               	clrf	(??___flmul+1)& (0+255),c
  5164  001E10  263C               	addwf	??___flmul,f,c
  5165  001E12  0E00               	movlw	0
  5166  001E14  223D               	addwfc	??___flmul+1,f,c
  5167  001E16  0E82               	movlw	130
  5168  001E18  243C               	addwf	??___flmul,w,c
  5169  001E1A  6E4B               	movwf	___flmul@temp,c
  5170  001E1C  0EFF               	movlw	255
  5171  001E1E  203D               	addwfc	??___flmul+1,w,c
  5172  001E20  6E4C               	movwf	___flmul@temp+1,c
  5173  001E22  D00F               	goto	l4328
  5174  001E24                     l4322:
  5175  001E24  90D8               	bcf	status,0,c
  5176  001E26  3647               	rlcf	___flmul@prod,f,c
  5177  001E28  3648               	rlcf	___flmul@prod+1,f,c
  5178  001E2A  3649               	rlcf	___flmul@prod+2,f,c
  5179  001E2C  364A               	rlcf	___flmul@prod+3,f,c
  5180  001E2E  BE44               	btfsc	___flmul@grs+3,7,c
  5181  001E30  8047               	bsf	___flmul@prod,0,c
  5182  001E32  90D8               	bcf	status,0,c
  5183  001E34  3641               	rlcf	___flmul@grs,f,c
  5184  001E36  3642               	rlcf	___flmul@grs+1,f,c
  5185  001E38  3643               	rlcf	___flmul@grs+2,f,c
  5186  001E3A  3644               	rlcf	___flmul@grs+3,f,c
  5187  001E3C  064B               	decf	___flmul@temp,f,c
  5188  001E3E  A0D8               	btfss	status,0,c
  5189  001E40  064C               	decf	___flmul@temp+1,f,c
  5190  001E42                     l4328:
  5191  001E42  AE49               	btfss	___flmul@prod+2,7,c
  5192  001E44  D7EF               	goto	l4322
  5193  001E46  0E00               	movlw	0
  5194  001E48  6E45               	movwf	___flmul@aexp,c
  5195  001E4A  AE44               	btfss	___flmul@grs+3,7,c
  5196  001E4C  D017               	goto	l1166
  5197  001E4E  0EFF               	movlw	255
  5198  001E50  1441               	andwf	___flmul@grs,w,c
  5199  001E52  6E3C               	movwf	??___flmul& (0+255),c
  5200  001E54  0EFF               	movlw	255
  5201  001E56  1442               	andwf	___flmul@grs+1,w,c
  5202  001E58  6E3D               	movwf	(??___flmul+1)& (0+255),c
  5203  001E5A  0EFF               	movlw	255
  5204  001E5C  1443               	andwf	___flmul@grs+2,w,c
  5205  001E5E  6E3E               	movwf	(??___flmul+2)& (0+255),c
  5206  001E60  0E7F               	movlw	127
  5207  001E62  1444               	andwf	___flmul@grs+3,w,c
  5208  001E64  6E3F               	movwf	(??___flmul+3)& (0+255),c
  5209  001E66  503C               	movf	??___flmul,w,c
  5210  001E68  103D               	iorwf	??___flmul+1,w,c
  5211  001E6A  103E               	iorwf	??___flmul+2,w,c
  5212  001E6C  103F               	iorwf	??___flmul+3,w,c
  5213  001E6E  B4D8               	btfsc	status,2,c
  5214  001E70  D003               	goto	l1167
  5215  001E72                     u4280:
  5216  001E72  0E01               	movlw	1
  5217  001E74  6E45               	movwf	___flmul@aexp,c
  5218  001E76  D002               	goto	l1166
  5219  001E78                     l1167:
  5220  001E78  B047               	btfsc	___flmul@prod,0,c
  5221  001E7A  D7FB               	goto	u4280
  5222  001E7C                     l1166:
  5223  001E7C  5045               	movf	___flmul@aexp,w,c
  5224  001E7E  B4D8               	btfsc	status,2,c
  5225  001E80  D01F               	goto	l4348
  5226  001E82  0E01               	movlw	1
  5227  001E84  2647               	addwf	___flmul@prod,f,c
  5228  001E86  0E00               	movlw	0
  5229  001E88  2248               	addwfc	___flmul@prod+1,f,c
  5230  001E8A  2249               	addwfc	___flmul@prod+2,f,c
  5231  001E8C  224A               	addwfc	___flmul@prod+3,f,c
  5232  001E8E  A04A               	btfss	___flmul@prod+3,0,c
  5233  001E90  D017               	goto	l4348
  5234  001E92  C047  F03C         	movff	___flmul@prod,??___flmul
  5235  001E96  C048  F03D         	movff	___flmul@prod+1,??___flmul+1
  5236  001E9A  C049  F03E         	movff	___flmul@prod+2,??___flmul+2
  5237  001E9E  C04A  F03F         	movff	___flmul@prod+3,??___flmul+3
  5238  001EA2  343F               	rlcf	??___flmul+3,w,c
  5239  001EA4  323F               	rrcf	??___flmul+3,f,c
  5240  001EA6  323E               	rrcf	??___flmul+2,f,c
  5241  001EA8  323D               	rrcf	??___flmul+1,f,c
  5242  001EAA  323C               	rrcf	??___flmul,f,c
  5243  001EAC  C03C  F047         	movff	??___flmul,___flmul@prod
  5244  001EB0  C03D  F048         	movff	??___flmul+1,___flmul@prod+1
  5245  001EB4  C03E  F049         	movff	??___flmul+2,___flmul@prod+2
  5246  001EB8  C03F  F04A         	movff	??___flmul+3,___flmul@prod+3
  5247  001EBC  4A4B               	infsnz	___flmul@temp,f,c
  5248  001EBE  2A4C               	incf	___flmul@temp+1,f,c
  5249  001EC0                     l4348:
  5250  001EC0  BE4C               	btfsc	___flmul@temp+1,7,c
  5251  001EC2  D00D               	goto	l4352
  5252  001EC4  504C               	movf	___flmul@temp+1,w,c
  5253  001EC6  E103               	bnz	u4320
  5254  001EC8  284B               	incf	___flmul@temp,w,c
  5255  001ECA  A0D8               	btfss	status,0,c
  5256  001ECC  D008               	goto	l4352
  5257  001ECE                     u4320:
  5258  001ECE  0E00               	movlw	0
  5259  001ED0  6E47               	movwf	___flmul@prod,c
  5260  001ED2  0E00               	movlw	0
  5261  001ED4  6E48               	movwf	___flmul@prod+1,c
  5262  001ED6  0E80               	movlw	128
  5263  001ED8  6E49               	movwf	___flmul@prod+2,c
  5264  001EDA  0E7F               	movlw	127
  5265  001EDC  D020               	goto	L4
  5266  001EDE                     l4352:
  5267  001EDE  BE4C               	btfsc	___flmul@temp+1,7,c
  5268  001EE0  D005               	goto	u4330
  5269  001EE2  504C               	movf	___flmul@temp+1,w,c
  5270  001EE4  E10E               	bnz	l1174
  5271  001EE6  044B               	decf	___flmul@temp,w,c
  5272  001EE8  B0D8               	btfsc	status,0,c
  5273  001EEA  D00B               	goto	l1174
  5274  001EEC                     u4330:
  5275  001EEC  0E00               	movlw	0
  5276  001EEE  6E47               	movwf	___flmul@prod,c
  5277  001EF0  0E00               	movlw	0
  5278  001EF2  6E48               	movwf	___flmul@prod+1,c
  5279  001EF4  0E00               	movlw	0
  5280  001EF6  6E49               	movwf	___flmul@prod+2,c
  5281  001EF8  0E00               	movlw	0
  5282  001EFA  6E4A               	movwf	___flmul@prod+3,c
  5283  001EFC  0E00               	movlw	0
  5284  001EFE  6E40               	movwf	___flmul@sign,c
  5285  001F00  D00F               	goto	l4364
  5286  001F02                     l1174:
  5287  001F02  C04B  F046         	movff	___flmul@temp,___flmul@bexp
  5288  001F06  0EFF               	movlw	255
  5289  001F08  1647               	andwf	___flmul@prod,f,c
  5290  001F0A  0EFF               	movlw	255
  5291  001F0C  1648               	andwf	___flmul@prod+1,f,c
  5292  001F0E  0E7F               	movlw	127
  5293  001F10  1649               	andwf	___flmul@prod+2,f,c
  5294  001F12  0E00               	movlw	0
  5295  001F14  164A               	andwf	___flmul@prod+3,f,c
  5296  001F16  B046               	btfsc	___flmul@bexp,0,c
  5297  001F18  8E49               	bsf	___flmul@prod+2,7,c
  5298  001F1A  90D8               	bcf	status,0,c
  5299  001F1C  3046               	rrcf	___flmul@bexp,w,c
  5300  001F1E                     L4:
  5301  001F1E  6E4A               	movwf	___flmul@prod+3,c
  5302  001F20                     l4364:
  5303  001F20  5040               	movf	___flmul@sign,w,c
  5304  001F22  124A               	iorwf	___flmul@prod+3,f,c
  5305  001F24  C047  F034         	movff	___flmul@prod,?___flmul
  5306  001F28  C048  F035         	movff	___flmul@prod+1,?___flmul+1
  5307  001F2C  C049  F036         	movff	___flmul@prod+2,?___flmul+2
  5308  001F30  C04A  F037         	movff	___flmul@prod+3,?___flmul+3
  5309  001F34  0012               	return		;funcret
  5310  001F36                     __end_of___flmul:
  5311                           	opt callstack 0
  5312                           
  5313 ;; *************** function ___flge *****************
  5314 ;; Defined at:
  5315 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  ff1             4   50[COMRAM] unsigned char 
  5318 ;;  ff2             4   54[COMRAM] unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;		None               void
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;Total ram usage:       12 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    3
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_main
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text20
  5345  002B9C                     __ptext20:
  5346                           	opt callstack 0
  5347  002B9C                     ___flge:
  5348                           	opt callstack 27
  5349                           
  5350                           ;incstack = 0
  5351  002B9C  0E00               	movlw	0
  5352  002B9E  1433               	andwf	___flge@ff1,w,c
  5353  002BA0  6E3B               	movwf	??___flge& (0+255),c
  5354  002BA2  0E00               	movlw	0
  5355  002BA4  1434               	andwf	___flge@ff1+1,w,c
  5356  002BA6  6E3C               	movwf	(??___flge+1)& (0+255),c
  5357  002BA8  0E80               	movlw	128
  5358  002BAA  1435               	andwf	___flge@ff1+2,w,c
  5359  002BAC  6E3D               	movwf	(??___flge+2)& (0+255),c
  5360  002BAE  0E7F               	movlw	127
  5361  002BB0  1436               	andwf	___flge@ff1+3,w,c
  5362  002BB2  6E3E               	movwf	(??___flge+3)& (0+255),c
  5363  002BB4  503B               	movf	??___flge,w,c
  5364  002BB6  103C               	iorwf	??___flge+1,w,c
  5365  002BB8  103D               	iorwf	??___flge+2,w,c
  5366  002BBA  103E               	iorwf	??___flge+3,w,c
  5367  002BBC  A4D8               	btfss	status,2,c
  5368  002BBE  D008               	goto	l4380
  5369  002BC0  0E00               	movlw	0
  5370  002BC2  6E33               	movwf	___flge@ff1,c
  5371  002BC4  0E00               	movlw	0
  5372  002BC6  6E34               	movwf	___flge@ff1+1,c
  5373  002BC8  0E00               	movlw	0
  5374  002BCA  6E35               	movwf	___flge@ff1+2,c
  5375  002BCC  0E00               	movlw	0
  5376  002BCE  6E36               	movwf	___flge@ff1+3,c
  5377  002BD0                     l4380:
  5378  002BD0  0E00               	movlw	0
  5379  002BD2  1437               	andwf	___flge@ff2,w,c
  5380  002BD4  6E3B               	movwf	??___flge& (0+255),c
  5381  002BD6  0E00               	movlw	0
  5382  002BD8  1438               	andwf	___flge@ff2+1,w,c
  5383  002BDA  6E3C               	movwf	(??___flge+1)& (0+255),c
  5384  002BDC  0E80               	movlw	128
  5385  002BDE  1439               	andwf	___flge@ff2+2,w,c
  5386  002BE0  6E3D               	movwf	(??___flge+2)& (0+255),c
  5387  002BE2  0E7F               	movlw	127
  5388  002BE4  143A               	andwf	___flge@ff2+3,w,c
  5389  002BE6  6E3E               	movwf	(??___flge+3)& (0+255),c
  5390  002BE8  503B               	movf	??___flge,w,c
  5391  002BEA  103C               	iorwf	??___flge+1,w,c
  5392  002BEC  103D               	iorwf	??___flge+2,w,c
  5393  002BEE  103E               	iorwf	??___flge+3,w,c
  5394  002BF0  A4D8               	btfss	status,2,c
  5395  002BF2  D008               	goto	l4384
  5396  002BF4  0E00               	movlw	0
  5397  002BF6  6E37               	movwf	___flge@ff2,c
  5398  002BF8  0E00               	movlw	0
  5399  002BFA  6E38               	movwf	___flge@ff2+1,c
  5400  002BFC  0E00               	movlw	0
  5401  002BFE  6E39               	movwf	___flge@ff2+2,c
  5402  002C00  0E00               	movlw	0
  5403  002C02  6E3A               	movwf	___flge@ff2+3,c
  5404  002C04                     l4384:
  5405  002C04  AE36               	btfss	___flge@ff1+3,7,c
  5406  002C06  D009               	goto	l4388
  5407  002C08  6C33               	negf	___flge@ff1,c
  5408  002C0A  1E34               	comf	___flge@ff1+1,f,c
  5409  002C0C  B0D8               	btfsc	status,0,c
  5410  002C0E  2A34               	incf	___flge@ff1+1,f,c
  5411  002C10  1E35               	comf	___flge@ff1+2,f,c
  5412  002C12  B0D8               	btfsc	status,0,c
  5413  002C14  2A35               	incf	___flge@ff1+2,f,c
  5414  002C16  0E80               	movlw	128
  5415  002C18  5636               	subfwb	___flge@ff1+3,f,c
  5416  002C1A                     l4388:
  5417  002C1A  AE3A               	btfss	___flge@ff2+3,7,c
  5418  002C1C  D009               	goto	l808
  5419  002C1E  6C37               	negf	___flge@ff2,c
  5420  002C20  1E38               	comf	___flge@ff2+1,f,c
  5421  002C22  B0D8               	btfsc	status,0,c
  5422  002C24  2A38               	incf	___flge@ff2+1,f,c
  5423  002C26  1E39               	comf	___flge@ff2+2,f,c
  5424  002C28  B0D8               	btfsc	status,0,c
  5425  002C2A  2A39               	incf	___flge@ff2+2,f,c
  5426  002C2C  0E80               	movlw	128
  5427  002C2E  563A               	subfwb	___flge@ff2+3,f,c
  5428  002C30                     l808:
  5429  002C30  0E00               	movlw	0
  5430  002C32  1A33               	xorwf	___flge@ff1,f,c
  5431  002C34  0E00               	movlw	0
  5432  002C36  1A34               	xorwf	___flge@ff1+1,f,c
  5433  002C38  0E00               	movlw	0
  5434  002C3A  1A35               	xorwf	___flge@ff1+2,f,c
  5435  002C3C  0E80               	movlw	128
  5436  002C3E  1A36               	xorwf	___flge@ff1+3,f,c
  5437  002C40  0E00               	movlw	0
  5438  002C42  1A37               	xorwf	___flge@ff2,f,c
  5439  002C44  0E00               	movlw	0
  5440  002C46  1A38               	xorwf	___flge@ff2+1,f,c
  5441  002C48  0E00               	movlw	0
  5442  002C4A  1A39               	xorwf	___flge@ff2+2,f,c
  5443  002C4C  0E80               	movlw	128
  5444  002C4E  1A3A               	xorwf	___flge@ff2+3,f,c
  5445  002C50  5037               	movf	___flge@ff2,w,c
  5446  002C52  5C33               	subwf	___flge@ff1,w,c
  5447  002C54  5038               	movf	___flge@ff2+1,w,c
  5448  002C56  5834               	subwfb	___flge@ff1+1,w,c
  5449  002C58  5039               	movf	___flge@ff2+2,w,c
  5450  002C5A  5835               	subwfb	___flge@ff1+2,w,c
  5451  002C5C  503A               	movf	___flge@ff2+3,w,c
  5452  002C5E  5836               	subwfb	___flge@ff1+3,w,c
  5453  002C60  B0D8               	btfsc	status,0,c
  5454  002C62  D002               	goto	l4394
  5455  002C64  90D8               	bcf	status,0,c
  5456  002C66  0012               	return	
  5457  002C68                     l4394:
  5458  002C68  80D8               	bsf	status,0,c
  5459  002C6A  0012               	return		;funcret
  5460  002C6C                     __end_of___flge:
  5461                           	opt callstack 0
  5462                           
  5463 ;; *************** function ___fldiv *****************
  5464 ;; Defined at:
  5465 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  b               4   26[COMRAM] unsigned char 
  5468 ;;  a               4   30[COMRAM] unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  grs             4   45[COMRAM] unsigned long 
  5471 ;;  rem             4   38[COMRAM] unsigned long 
  5472 ;;  new_exp         2   43[COMRAM] short 
  5473 ;;  aexp            1   50[COMRAM] unsigned char 
  5474 ;;  bexp            1   49[COMRAM] unsigned char 
  5475 ;;  sign            1   42[COMRAM] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  4   26[COMRAM] unsigned char 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:       25 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    3
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_main
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text21
  5500  00254E                     __ptext21:
  5501                           	opt callstack 0
  5502  00254E                     ___fldiv:
  5503                           	opt callstack 27
  5504                           
  5505                           ;incstack = 0
  5506  00254E  501E               	movf	___fldiv@b+3,w,c
  5507  002550  0B80               	andlw	128
  5508  002552  6E2B               	movwf	___fldiv@sign,c
  5509  002554  501E               	movf	___fldiv@b+3,w,c
  5510  002556  241E               	addwf	___fldiv@b+3,w,c
  5511  002558  6E32               	movwf	___fldiv@bexp,c
  5512  00255A  BE1D               	btfsc	___fldiv@b+2,7,c
  5513  00255C  8032               	bsf	___fldiv@bexp,0,c
  5514  00255E  5032               	movf	___fldiv@bexp,w,c
  5515  002560  B4D8               	btfsc	status,2,c
  5516  002562  D00D               	goto	l4118
  5517  002564  2832               	incf	___fldiv@bexp,w,c
  5518  002566  A4D8               	btfss	status,2,c
  5519  002568  D008               	goto	l4114
  5520  00256A  0E00               	movlw	0
  5521  00256C  6E1B               	movwf	___fldiv@b,c
  5522  00256E  0E00               	movlw	0
  5523  002570  6E1C               	movwf	___fldiv@b+1,c
  5524  002572  0E00               	movlw	0
  5525  002574  6E1D               	movwf	___fldiv@b+2,c
  5526  002576  0E00               	movlw	0
  5527  002578  6E1E               	movwf	___fldiv@b+3,c
  5528  00257A                     l4114:
  5529  00257A  8E1D               	bsf	___fldiv@b+2,7,c
  5530  00257C  D006               	goto	L5
  5531  00257E                     l4118:
  5532  00257E  0E00               	movlw	0
  5533  002580  6E1B               	movwf	___fldiv@b,c
  5534  002582  0E00               	movlw	0
  5535  002584  6E1C               	movwf	___fldiv@b+1,c
  5536  002586  0E00               	movlw	0
  5537  002588  6E1D               	movwf	___fldiv@b+2,c
  5538  00258A                     L5:
  5539  00258A  0E00               	movlw	0
  5540  00258C  6E1E               	movwf	___fldiv@b+3,c
  5541  00258E  5022               	movf	___fldiv@a+3,w,c
  5542  002590  0B80               	andlw	128
  5543  002592  1A2B               	xorwf	___fldiv@sign,f,c
  5544  002594  5022               	movf	___fldiv@a+3,w,c
  5545  002596  2422               	addwf	___fldiv@a+3,w,c
  5546  002598  6E33               	movwf	___fldiv@aexp,c
  5547  00259A  BE21               	btfsc	___fldiv@a+2,7,c
  5548  00259C  8033               	bsf	___fldiv@aexp,0,c
  5549  00259E  5033               	movf	___fldiv@aexp,w,c
  5550  0025A0  B4D8               	btfsc	status,2,c
  5551  0025A2  D00D               	goto	l4138
  5552  0025A4  2833               	incf	___fldiv@aexp,w,c
  5553  0025A6  A4D8               	btfss	status,2,c
  5554  0025A8  D008               	goto	l4134
  5555  0025AA  0E00               	movlw	0
  5556  0025AC  6E1F               	movwf	___fldiv@a,c
  5557  0025AE  0E00               	movlw	0
  5558  0025B0  6E20               	movwf	___fldiv@a+1,c
  5559  0025B2  0E00               	movlw	0
  5560  0025B4  6E21               	movwf	___fldiv@a+2,c
  5561  0025B6  0E00               	movlw	0
  5562  0025B8  6E22               	movwf	___fldiv@a+3,c
  5563  0025BA                     l4134:
  5564  0025BA  8E21               	bsf	___fldiv@a+2,7,c
  5565  0025BC  D006               	goto	L6
  5566  0025BE                     l4138:
  5567  0025BE  0E00               	movlw	0
  5568  0025C0  6E1F               	movwf	___fldiv@a,c
  5569  0025C2  0E00               	movlw	0
  5570  0025C4  6E20               	movwf	___fldiv@a+1,c
  5571  0025C6  0E00               	movlw	0
  5572  0025C8  6E21               	movwf	___fldiv@a+2,c
  5573  0025CA                     L6:
  5574  0025CA  0E00               	movlw	0
  5575  0025CC  6E22               	movwf	___fldiv@a+3,c
  5576  0025CE  501F               	movf	___fldiv@a,w,c
  5577  0025D0  1020               	iorwf	___fldiv@a+1,w,c
  5578  0025D2  1021               	iorwf	___fldiv@a+2,w,c
  5579  0025D4  1022               	iorwf	___fldiv@a+3,w,c
  5580  0025D6  A4D8               	btfss	status,2,c
  5581  0025D8  D017               	goto	l4152
  5582  0025DA  0E00               	movlw	0
  5583  0025DC  6E1B               	movwf	___fldiv@b,c
  5584  0025DE  0E00               	movlw	0
  5585  0025E0  6E1C               	movwf	___fldiv@b+1,c
  5586  0025E2  0E00               	movlw	0
  5587  0025E4  6E1D               	movwf	___fldiv@b+2,c
  5588  0025E6  0E00               	movlw	0
  5589  0025E8  6E1E               	movwf	___fldiv@b+3,c
  5590  0025EA  0E80               	movlw	128
  5591  0025EC  121D               	iorwf	___fldiv@b+2,f,c
  5592  0025EE  0E7F               	movlw	127
  5593  0025F0  121E               	iorwf	___fldiv@b+3,f,c
  5594  0025F2                     l4146:
  5595  0025F2  502B               	movf	___fldiv@sign,w,c
  5596  0025F4  121E               	iorwf	___fldiv@b+3,f,c
  5597  0025F6  C01B  F01B         	movff	___fldiv@b,?___fldiv
  5598  0025FA  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
  5599  0025FE  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
  5600  002602  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
  5601  002606  0012               	return	
  5602  002608                     l4152:
  5603  002608  5032               	movf	___fldiv@bexp,w,c
  5604  00260A  A4D8               	btfss	status,2,c
  5605  00260C  D009               	goto	l4160
  5606  00260E  0E00               	movlw	0
  5607  002610  6E1B               	movwf	?___fldiv,c
  5608  002612  0E00               	movlw	0
  5609  002614  6E1C               	movwf	?___fldiv+1,c
  5610  002616  0E00               	movlw	0
  5611  002618  6E1D               	movwf	?___fldiv+2,c
  5612  00261A  0E00               	movlw	0
  5613  00261C  6E1E               	movwf	?___fldiv+3,c
  5614  00261E  0012               	return	
  5615  002620                     l4160:
  5616  002620  5033               	movf	___fldiv@aexp,w,c
  5617  002622  C032  F023         	movff	___fldiv@bexp,??___fldiv
  5618  002626  6A24               	clrf	(??___fldiv+1)& (0+255),c
  5619  002628  5E23               	subwf	??___fldiv,f,c
  5620  00262A  0E00               	movlw	0
  5621  00262C  5A24               	subwfb	??___fldiv+1,f,c
  5622  00262E  0E7F               	movlw	127
  5623  002630  2423               	addwf	??___fldiv,w,c
  5624  002632  6E2C               	movwf	___fldiv@new_exp,c
  5625  002634  0E00               	movlw	0
  5626  002636  2024               	addwfc	??___fldiv+1,w,c
  5627  002638  6E2D               	movwf	___fldiv@new_exp+1,c
  5628  00263A  C01B  F027         	movff	___fldiv@b,___fldiv@rem
  5629  00263E  C01C  F028         	movff	___fldiv@b+1,___fldiv@rem+1
  5630  002642  C01D  F029         	movff	___fldiv@b+2,___fldiv@rem+2
  5631  002646  C01E  F02A         	movff	___fldiv@b+3,___fldiv@rem+3
  5632  00264A  0E00               	movlw	0
  5633  00264C  6E1B               	movwf	___fldiv@b,c
  5634  00264E  0E00               	movlw	0
  5635  002650  6E1C               	movwf	___fldiv@b+1,c
  5636  002652  0E00               	movlw	0
  5637  002654  6E1D               	movwf	___fldiv@b+2,c
  5638  002656  0E00               	movlw	0
  5639  002658  6E1E               	movwf	___fldiv@b+3,c
  5640  00265A  0E00               	movlw	0
  5641  00265C  6E2E               	movwf	___fldiv@grs,c
  5642  00265E  0E00               	movlw	0
  5643  002660  6E2F               	movwf	___fldiv@grs+1,c
  5644  002662  0E00               	movlw	0
  5645  002664  6E30               	movwf	___fldiv@grs+2,c
  5646  002666  0E00               	movlw	0
  5647  002668  6E31               	movwf	___fldiv@grs+3,c
  5648  00266A  0E00               	movlw	0
  5649  00266C  6E33               	movwf	___fldiv@aexp,c
  5650  00266E  D028               	goto	l1127
  5651  002670                     l4170:
  5652  002670  5033               	movf	___fldiv@aexp,w,c
  5653  002672  B4D8               	btfsc	status,2,c
  5654  002674  D011               	goto	l4178
  5655  002676  90D8               	bcf	status,0,c
  5656  002678  3627               	rlcf	___fldiv@rem,f,c
  5657  00267A  3628               	rlcf	___fldiv@rem+1,f,c
  5658  00267C  3629               	rlcf	___fldiv@rem+2,f,c
  5659  00267E  362A               	rlcf	___fldiv@rem+3,f,c
  5660  002680  90D8               	bcf	status,0,c
  5661  002682  361B               	rlcf	___fldiv@b,f,c
  5662  002684  361C               	rlcf	___fldiv@b+1,f,c
  5663  002686  361D               	rlcf	___fldiv@b+2,f,c
  5664  002688  361E               	rlcf	___fldiv@b+3,f,c
  5665  00268A  BE31               	btfsc	___fldiv@grs+3,7,c
  5666  00268C  801B               	bsf	___fldiv@b,0,c
  5667  00268E  90D8               	bcf	status,0,c
  5668  002690  362E               	rlcf	___fldiv@grs,f,c
  5669  002692  362F               	rlcf	___fldiv@grs+1,f,c
  5670  002694  3630               	rlcf	___fldiv@grs+2,f,c
  5671  002696  3631               	rlcf	___fldiv@grs+3,f,c
  5672  002698                     l4178:
  5673  002698  501F               	movf	___fldiv@a,w,c
  5674  00269A  5C27               	subwf	___fldiv@rem,w,c
  5675  00269C  5020               	movf	___fldiv@a+1,w,c
  5676  00269E  5828               	subwfb	___fldiv@rem+1,w,c
  5677  0026A0  5021               	movf	___fldiv@a+2,w,c
  5678  0026A2  5829               	subwfb	___fldiv@rem+2,w,c
  5679  0026A4  5022               	movf	___fldiv@a+3,w,c
  5680  0026A6  582A               	subwfb	___fldiv@rem+3,w,c
  5681  0026A8  A0D8               	btfss	status,0,c
  5682  0026AA  D009               	goto	l4184
  5683  0026AC  8C31               	bsf	___fldiv@grs+3,6,c
  5684  0026AE  501F               	movf	___fldiv@a,w,c
  5685  0026B0  5E27               	subwf	___fldiv@rem,f,c
  5686  0026B2  5020               	movf	___fldiv@a+1,w,c
  5687  0026B4  5A28               	subwfb	___fldiv@rem+1,f,c
  5688  0026B6  5021               	movf	___fldiv@a+2,w,c
  5689  0026B8  5A29               	subwfb	___fldiv@rem+2,f,c
  5690  0026BA  5022               	movf	___fldiv@a+3,w,c
  5691  0026BC  5A2A               	subwfb	___fldiv@rem+3,f,c
  5692  0026BE                     l4184:
  5693  0026BE  2A33               	incf	___fldiv@aexp,f,c
  5694  0026C0                     l1127:
  5695  0026C0  0E19               	movlw	25
  5696  0026C2  6433               	cpfsgt	___fldiv@aexp,c
  5697  0026C4  D7D5               	goto	l4170
  5698  0026C6  5027               	movf	___fldiv@rem,w,c
  5699  0026C8  1028               	iorwf	___fldiv@rem+1,w,c
  5700  0026CA  1029               	iorwf	___fldiv@rem+2,w,c
  5701  0026CC  102A               	iorwf	___fldiv@rem+3,w,c
  5702  0026CE  B4D8               	btfsc	status,2,c
  5703  0026D0  D011               	goto	l4196
  5704  0026D2  802E               	bsf	___fldiv@grs,0,c
  5705  0026D4  D00F               	goto	l4196
  5706  0026D6                     l4190:
  5707  0026D6  90D8               	bcf	status,0,c
  5708  0026D8  361B               	rlcf	___fldiv@b,f,c
  5709  0026DA  361C               	rlcf	___fldiv@b+1,f,c
  5710  0026DC  361D               	rlcf	___fldiv@b+2,f,c
  5711  0026DE  361E               	rlcf	___fldiv@b+3,f,c
  5712  0026E0  BE31               	btfsc	___fldiv@grs+3,7,c
  5713  0026E2  801B               	bsf	___fldiv@b,0,c
  5714  0026E4  90D8               	bcf	status,0,c
  5715  0026E6  362E               	rlcf	___fldiv@grs,f,c
  5716  0026E8  362F               	rlcf	___fldiv@grs+1,f,c
  5717  0026EA  3630               	rlcf	___fldiv@grs+2,f,c
  5718  0026EC  3631               	rlcf	___fldiv@grs+3,f,c
  5719  0026EE  062C               	decf	___fldiv@new_exp,f,c
  5720  0026F0  A0D8               	btfss	status,0,c
  5721  0026F2  062D               	decf	___fldiv@new_exp+1,f,c
  5722  0026F4                     l4196:
  5723  0026F4  AE1D               	btfss	___fldiv@b+2,7,c
  5724  0026F6  D7EF               	goto	l4190
  5725  0026F8  0E00               	movlw	0
  5726  0026FA  6E33               	movwf	___fldiv@aexp,c
  5727  0026FC  AE31               	btfss	___fldiv@grs+3,7,c
  5728  0026FE  D017               	goto	l1138
  5729  002700  0EFF               	movlw	255
  5730  002702  142E               	andwf	___fldiv@grs,w,c
  5731  002704  6E23               	movwf	??___fldiv& (0+255),c
  5732  002706  0EFF               	movlw	255
  5733  002708  142F               	andwf	___fldiv@grs+1,w,c
  5734  00270A  6E24               	movwf	(??___fldiv+1)& (0+255),c
  5735  00270C  0EFF               	movlw	255
  5736  00270E  1430               	andwf	___fldiv@grs+2,w,c
  5737  002710  6E25               	movwf	(??___fldiv+2)& (0+255),c
  5738  002712  0E7F               	movlw	127
  5739  002714  1431               	andwf	___fldiv@grs+3,w,c
  5740  002716  6E26               	movwf	(??___fldiv+3)& (0+255),c
  5741  002718  5023               	movf	??___fldiv,w,c
  5742  00271A  1024               	iorwf	??___fldiv+1,w,c
  5743  00271C  1025               	iorwf	??___fldiv+2,w,c
  5744  00271E  1026               	iorwf	??___fldiv+3,w,c
  5745  002720  B4D8               	btfsc	status,2,c
  5746  002722  D003               	goto	l1139
  5747  002724                     u4090:
  5748  002724  0E01               	movlw	1
  5749  002726  6E33               	movwf	___fldiv@aexp,c
  5750  002728  D002               	goto	l1138
  5751  00272A                     l1139:
  5752  00272A  B01B               	btfsc	___fldiv@b,0,c
  5753  00272C  D7FB               	goto	u4090
  5754  00272E                     l1138:
  5755  00272E  5033               	movf	___fldiv@aexp,w,c
  5756  002730  B4D8               	btfsc	status,2,c
  5757  002732  D01F               	goto	l4216
  5758  002734  0E01               	movlw	1
  5759  002736  261B               	addwf	___fldiv@b,f,c
  5760  002738  0E00               	movlw	0
  5761  00273A  221C               	addwfc	___fldiv@b+1,f,c
  5762  00273C  221D               	addwfc	___fldiv@b+2,f,c
  5763  00273E  221E               	addwfc	___fldiv@b+3,f,c
  5764  002740  A01E               	btfss	___fldiv@b+3,0,c
  5765  002742  D017               	goto	l4216
  5766  002744  C01B  F023         	movff	___fldiv@b,??___fldiv
  5767  002748  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
  5768  00274C  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
  5769  002750  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
  5770  002754  3426               	rlcf	??___fldiv+3,w,c
  5771  002756  3226               	rrcf	??___fldiv+3,f,c
  5772  002758  3225               	rrcf	??___fldiv+2,f,c
  5773  00275A  3224               	rrcf	??___fldiv+1,f,c
  5774  00275C  3223               	rrcf	??___fldiv,f,c
  5775  00275E  C023  F01B         	movff	??___fldiv,___fldiv@b
  5776  002762  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
  5777  002766  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
  5778  00276A  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
  5779  00276E  4A2C               	infsnz	___fldiv@new_exp,f,c
  5780  002770  2A2D               	incf	___fldiv@new_exp+1,f,c
  5781  002772                     l4216:
  5782  002772  BE2D               	btfsc	___fldiv@new_exp+1,7,c
  5783  002774  D010               	goto	l4220
  5784  002776  502D               	movf	___fldiv@new_exp+1,w,c
  5785  002778  E103               	bnz	u4130
  5786  00277A  282C               	incf	___fldiv@new_exp,w,c
  5787  00277C  A0D8               	btfss	status,0,c
  5788  00277E  D00B               	goto	l4220
  5789  002780                     u4130:
  5790  002780  0E00               	movlw	0
  5791  002782  6E2D               	movwf	___fldiv@new_exp+1,c
  5792  002784  682C               	setf	___fldiv@new_exp,c
  5793  002786  0E00               	movlw	0
  5794  002788  6E1B               	movwf	___fldiv@b,c
  5795  00278A  0E00               	movlw	0
  5796  00278C  6E1C               	movwf	___fldiv@b+1,c
  5797  00278E  0E00               	movlw	0
  5798  002790  6E1D               	movwf	___fldiv@b+2,c
  5799  002792  0E00               	movlw	0
  5800  002794  6E1E               	movwf	___fldiv@b+3,c
  5801  002796                     l4220:
  5802  002796  BE2D               	btfsc	___fldiv@new_exp+1,7,c
  5803  002798  D005               	goto	u4140
  5804  00279A  502D               	movf	___fldiv@new_exp+1,w,c
  5805  00279C  E111               	bnz	l4224
  5806  00279E  042C               	decf	___fldiv@new_exp,w,c
  5807  0027A0  B0D8               	btfsc	status,0,c
  5808  0027A2  D00E               	goto	l4224
  5809  0027A4                     u4140:
  5810  0027A4  0E00               	movlw	0
  5811  0027A6  6E2D               	movwf	___fldiv@new_exp+1,c
  5812  0027A8  0E00               	movlw	0
  5813  0027AA  6E2C               	movwf	___fldiv@new_exp,c
  5814  0027AC  0E00               	movlw	0
  5815  0027AE  6E1B               	movwf	___fldiv@b,c
  5816  0027B0  0E00               	movlw	0
  5817  0027B2  6E1C               	movwf	___fldiv@b+1,c
  5818  0027B4  0E00               	movlw	0
  5819  0027B6  6E1D               	movwf	___fldiv@b+2,c
  5820  0027B8  0E00               	movlw	0
  5821  0027BA  6E1E               	movwf	___fldiv@b+3,c
  5822  0027BC  0E00               	movlw	0
  5823  0027BE  6E2B               	movwf	___fldiv@sign,c
  5824  0027C0                     l4224:
  5825  0027C0  C02C  F032         	movff	___fldiv@new_exp,___fldiv@bexp
  5826  0027C4  A032               	btfss	___fldiv@bexp,0,c
  5827  0027C6  D002               	goto	l4230
  5828  0027C8  8E1D               	bsf	___fldiv@b+2,7,c
  5829  0027CA  D001               	goto	l4232
  5830  0027CC                     l4230:
  5831  0027CC  9E1D               	bcf	___fldiv@b+2,7,c
  5832  0027CE                     l4232:
  5833  0027CE  90D8               	bcf	status,0,c
  5834  0027D0  3032               	rrcf	___fldiv@bexp,w,c
  5835  0027D2  6E1E               	movwf	___fldiv@b+3,c
  5836  0027D4  D70E               	goto	l4146
  5837  0027D6                     __end_of___fldiv:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function _UART_send_string *****************
  5841 ;; Defined at:
  5842 ;;		line 65 in file "uart.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  message         2   27[COMRAM] PTR unsigned char 
  5845 ;;		 -> main@uart_char_to_send(25), STR_1(15), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  i               2   31[COMRAM] int 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;Total ram usage:        6 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    4
  5864 ;; This function calls:
  5865 ;;		_UART_send_char
  5866 ;; This function is called by:
  5867 ;;		_main
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text22
  5872  002D38                     __ptext22:
  5873                           	opt callstack 0
  5874  002D38                     _UART_send_string:
  5875                           	opt callstack 26
  5876                           
  5877                           ;uart.c: 67:     int i;;uart.c: 68:     i=0;
  5878                           
  5879                           ;incstack = 0
  5880  002D38  0E00               	movlw	0
  5881  002D3A  6E21               	movwf	UART_send_string@i+1,c
  5882  002D3C  0E00               	movlw	0
  5883  002D3E  6E20               	movwf	UART_send_string@i,c
  5884                           
  5885                           ;uart.c: 69:     while(message[i]!='\0'){
  5886  002D40  D035               	goto	l4054
  5887  002D42                     l4046:
  5888                           
  5889                           ;uart.c: 70:         if(message[i] == '\0'){
  5890  002D42  5020               	movf	UART_send_string@i,w,c
  5891  002D44  241C               	addwf	UART_send_string@message,w,c
  5892  002D46  6E1E               	movwf	??_UART_send_string& (0+255),c
  5893  002D48  5021               	movf	UART_send_string@i+1,w,c
  5894  002D4A  201D               	addwfc	UART_send_string@message+1,w,c
  5895  002D4C  6E1F               	movwf	(??_UART_send_string+1)& (0+255),c
  5896  002D4E  C01E  FFF6         	movff	??_UART_send_string,tblptrl
  5897  002D52  C01F  FFF7         	movff	??_UART_send_string+1,tblptrh
  5898  002D56  0E00               	movlw	low (__smallconst shr (0+16))
  5899  002D58  6EF8               	movwf	tblptru,c
  5900  002D5A  0E0F               	movlw	(high __ramtop+-1)
  5901  002D5C  64F7               	cpfsgt	tblptrh,c
  5902  002D5E  D003               	bra	u3877
  5903  002D60  0008               	tblrd		*
  5904  002D62  50F5               	movf	tablat,w,c
  5905  002D64  D005               	bra	u3870
  5906  002D66                     u3877:
  5907  002D66  CFF6 FFE9          	movff	tblptrl,fsr0l
  5908  002D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5909  002D6E  50EF               	movf	indf0,w,c
  5910  002D70                     u3870:
  5911  002D70  0900               	iorlw	0
  5912  002D72  B4D8               	btfsc	status,2,c
  5913  002D74  0012               	return	
  5914                           
  5915                           ;uart.c: 75:         UART_send_char(message[i]);
  5916  002D76  5020               	movf	UART_send_string@i,w,c
  5917  002D78  241C               	addwf	UART_send_string@message,w,c
  5918  002D7A  6E1E               	movwf	??_UART_send_string& (0+255),c
  5919  002D7C  5021               	movf	UART_send_string@i+1,w,c
  5920  002D7E  201D               	addwfc	UART_send_string@message+1,w,c
  5921  002D80  6E1F               	movwf	(??_UART_send_string+1)& (0+255),c
  5922  002D82  C01E  FFF6         	movff	??_UART_send_string,tblptrl
  5923  002D86  C01F  FFF7         	movff	??_UART_send_string+1,tblptrh
  5924  002D8A  0E00               	movlw	low (__smallconst shr (0+16))
  5925  002D8C  6EF8               	movwf	tblptru,c
  5926  002D8E  0E0F               	movlw	(high __ramtop+-1)
  5927  002D90  64F7               	cpfsgt	tblptrh,c
  5928  002D92  D003               	bra	u3897
  5929  002D94  0008               	tblrd		*
  5930  002D96  50F5               	movf	tablat,w,c
  5931  002D98  D005               	bra	u3890
  5932  002D9A                     u3897:
  5933  002D9A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5934  002D9E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5935  002DA2  50EF               	movf	indf0,w,c
  5936  002DA4                     u3890:
  5937  002DA4  EC9C  F01A         	call	_UART_send_char
  5938                           
  5939                           ;uart.c: 76:         i++;
  5940  002DA8  4A20               	infsnz	UART_send_string@i,f,c
  5941  002DAA  2A21               	incf	UART_send_string@i+1,f,c
  5942  002DAC                     l4054:
  5943                           
  5944                           ;uart.c: 69:     while(message[i]!='\0'){
  5945  002DAC  5020               	movf	UART_send_string@i,w,c
  5946  002DAE  241C               	addwf	UART_send_string@message,w,c
  5947  002DB0  6E1E               	movwf	??_UART_send_string& (0+255),c
  5948  002DB2  5021               	movf	UART_send_string@i+1,w,c
  5949  002DB4  201D               	addwfc	UART_send_string@message+1,w,c
  5950  002DB6  6E1F               	movwf	(??_UART_send_string+1)& (0+255),c
  5951  002DB8  C01E  FFF6         	movff	??_UART_send_string,tblptrl
  5952  002DBC  C01F  FFF7         	movff	??_UART_send_string+1,tblptrh
  5953  002DC0  0E00               	movlw	low (__smallconst shr (0+16))
  5954  002DC2  6EF8               	movwf	tblptru,c
  5955  002DC4  0E0F               	movlw	(high __ramtop+-1)
  5956  002DC6  64F7               	cpfsgt	tblptrh,c
  5957  002DC8  D003               	bra	u3907
  5958  002DCA  0008               	tblrd		*
  5959  002DCC  50F5               	movf	tablat,w,c
  5960  002DCE  D005               	bra	u3900
  5961  002DD0                     u3907:
  5962  002DD0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5963  002DD4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5964  002DD8  50EF               	movf	indf0,w,c
  5965  002DDA                     u3900:
  5966  002DDA  0900               	iorlw	0
  5967  002DDC  B4D8               	btfsc	status,2,c
  5968  002DDE  0012               	return	
  5969  002DE0  D7B0               	goto	l4046
  5970  002DE2                     __end_of_UART_send_string:
  5971                           	opt callstack 0
  5972                           
  5973 ;; *************** function _UART_send_char *****************
  5974 ;; Defined at:
  5975 ;;		line 58 in file "uart.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  c               1    wreg     const unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  c               1   26[COMRAM] const unsigned char 
  5980 ;; Return value:  Size  Location     Type
  5981 ;;                  1    wreg      void 
  5982 ;; Registers used:
  5983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5984 ;; Tracked objects:
  5985 ;;		On entry : 0/0
  5986 ;;		On exit  : 0/0
  5987 ;;		Unchanged: 0/0
  5988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;Total ram usage:        1 bytes
  5994 ;; Hardware stack levels used:    1
  5995 ;; Hardware stack levels required when called:    3
  5996 ;; This function calls:
  5997 ;;		Nothing
  5998 ;; This function is called by:
  5999 ;;		_UART_send_string
  6000 ;; This function uses a non-reentrant model
  6001 ;;
  6002                           
  6003                           	psect	text23
  6004  003538                     __ptext23:
  6005                           	opt callstack 0
  6006  003538                     _UART_send_char:
  6007                           	opt callstack 26
  6008                           
  6009                           ;incstack = 0
  6010                           ;UART_send_char@c stored from wreg
  6011  003538  6E1B               	movwf	UART_send_char@c,c
  6012                           
  6013                           ;uart.c: 59:     _tx_buffer[_tx_buffer_head] = c;
  6014  00353A  0E00               	movlw	low __tx_buffer
  6015  00353C  245B               	addwf	__tx_buffer_head,w,c	;volatile
  6016  00353E  6ED9               	movwf	fsr2l,c
  6017  003540  6ADA               	clrf	fsr2h,c
  6018  003542  0E01               	movlw	high __tx_buffer
  6019  003544  22DA               	addwfc	fsr2h,f,c
  6020  003546  C01B  FFDF         	movff	UART_send_char@c,indf2
  6021                           
  6022                           ;uart.c: 60:     _tx_buffer_head = (unsigned char) (_tx_buffer_head + 1) % 64;
  6023  00354A  285B               	incf	__tx_buffer_head,w,c	;volatile
  6024  00354C  0B3F               	andlw	63
  6025  00354E  6E5B               	movwf	__tx_buffer_head,c	;volatile
  6026                           
  6027                           ;uart.c: 61:     TXIE = 1;
  6028  003550  889D               	bsf	3997,4,c	;volatile
  6029  003552  0012               	return		;funcret
  6030  003554                     __end_of_UART_send_char:
  6031                           	opt callstack 0
  6032                           
  6033 ;; *************** function _UART_read *****************
  6034 ;; Defined at:
  6035 ;;		line 89 in file "uart.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;		None
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  c               1   26[COMRAM] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      unsigned char 
  6042 ;; Registers used:
  6043 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;Total ram usage:        1 bytes
  6054 ;; Hardware stack levels used:    1
  6055 ;; Hardware stack levels required when called:    3
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_main
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text24
  6064  0034F2                     __ptext24:
  6065                           	opt callstack 0
  6066  0034F2                     _UART_read:
  6067                           	opt callstack 27
  6068                           
  6069                           ;uart.c: 90:     if(_rx_buffer_head == _rx_buffer_tail){
  6070                           
  6071                           ;incstack = 0
  6072  0034F2  505C               	movf	__rx_buffer_tail,w,c	;volatile
  6073  0034F4  185D               	xorwf	__rx_buffer_head,w,c	;volatile
  6074  0034F6  A4D8               	btfss	status,2,c
  6075  0034F8  D002               	goto	l4076
  6076                           
  6077                           ;uart.c: 91:         return -1;
  6078  0034FA  0EFF               	movlw	255
  6079  0034FC  0012               	return	
  6080  0034FE                     l4076:
  6081                           
  6082                           ;uart.c: 93:         unsigned char c = _rx_buffer[_rx_buffer_tail];
  6083  0034FE  0E40               	movlw	low __rx_buffer
  6084  003500  245C               	addwf	__rx_buffer_tail,w,c	;volatile
  6085  003502  6ED9               	movwf	fsr2l,c
  6086  003504  6ADA               	clrf	fsr2h,c
  6087  003506  0E01               	movlw	high __rx_buffer
  6088  003508  22DA               	addwfc	fsr2h,f,c
  6089  00350A  50DF               	movf	indf2,w,c
  6090  00350C  6E1B               	movwf	UART_read@c,c
  6091                           
  6092                           ;uart.c: 94:         _rx_buffer_tail = (unsigned char)(_rx_buffer_tail + 1) % 64;
  6093  00350E  285C               	incf	__rx_buffer_tail,w,c	;volatile
  6094  003510  0B3F               	andlw	63
  6095  003512  6E5C               	movwf	__rx_buffer_tail,c	;volatile
  6096                           
  6097                           ;uart.c: 95:         return c;
  6098  003514  501B               	movf	UART_read@c,w,c
  6099  003516  0012               	return		;funcret
  6100  003518                     __end_of_UART_read:
  6101                           	opt callstack 0
  6102                           
  6103 ;; *************** function _UART_available *****************
  6104 ;; Defined at:
  6105 ;;		line 85 in file "uart.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;		None
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  2   26[COMRAM] int 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;Total ram usage:        4 bytes
  6124 ;; Hardware stack levels used:    1
  6125 ;; Hardware stack levels required when called:    3
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_main
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text25
  6134  003518                     __ptext25:
  6135                           	opt callstack 0
  6136  003518                     _UART_available:
  6137                           	opt callstack 27
  6138                           
  6139                           ;uart.c: 86:     return ((unsigned int)(64 + _rx_buffer_head - _rx_buffer_tail)) % 64;
  6140                           
  6141                           ;incstack = 0
  6142  003518  505C               	movf	__rx_buffer_tail,w,c	;volatile
  6143  00351A  C05D  F01D         	movff	__rx_buffer_head,??_UART_available	;volatile
  6144  00351E  6A1E               	clrf	(??_UART_available+1)& (0+255),c
  6145  003520  5E1D               	subwf	??_UART_available,f,c
  6146  003522  0E00               	movlw	0
  6147  003524  5A1E               	subwfb	??_UART_available+1,f,c
  6148  003526  0E40               	movlw	64
  6149  003528  261D               	addwf	??_UART_available,f,c
  6150  00352A  0E00               	movlw	0
  6151  00352C  221E               	addwfc	??_UART_available+1,f,c
  6152  00352E  0E3F               	movlw	63
  6153  003530  141D               	andwf	??_UART_available,w,c
  6154  003532  6E1B               	movwf	?_UART_available,c
  6155  003534  6A1C               	clrf	?_UART_available+1,c
  6156  003536  0012               	return		;funcret
  6157  003538                     __end_of_UART_available:
  6158                           	opt callstack 0
  6159                           
  6160 ;; *************** function _UART_Init *****************
  6161 ;; Defined at:
  6162 ;;		line 15 in file "uart.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  baudRate        4   44[COMRAM] long 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;Total ram usage:        8 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    4
  6183 ;; This function calls:
  6184 ;;		___aldiv
  6185 ;; This function is called by:
  6186 ;;		_main
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text26
  6191  002F18                     __ptext26:
  6192                           	opt callstack 0
  6193  002F18                     _UART_Init:
  6194                           	opt callstack 26
  6195                           
  6196                           ;uart.c: 16:     _rx_buffer_head = 0;
  6197                           
  6198                           ;incstack = 0
  6199  002F18  0E00               	movlw	0
  6200  002F1A  6E5D               	movwf	__rx_buffer_head,c	;volatile
  6201                           
  6202                           ;uart.c: 17:     _rx_buffer_tail = 0;
  6203  002F1C  0E00               	movlw	0
  6204  002F1E  6E5C               	movwf	__rx_buffer_tail,c	;volatile
  6205                           
  6206                           ;uart.c: 18:     _tx_buffer_head = 0;
  6207  002F20  0E00               	movlw	0
  6208  002F22  6E5B               	movwf	__tx_buffer_head,c	;volatile
  6209                           
  6210                           ;uart.c: 19:     _tx_buffer_tail = 0;
  6211  002F24  0E00               	movlw	0
  6212  002F26  6E5A               	movwf	__tx_buffer_tail,c	;volatile
  6213                           
  6214                           ;uart.c: 20:     long baudRate = 19200;
  6215  002F28  0E00               	movlw	0
  6216  002F2A  6E2D               	movwf	UART_Init@baudRate,c
  6217  002F2C  0E4B               	movlw	75
  6218  002F2E  6E2E               	movwf	UART_Init@baudRate+1,c
  6219  002F30  0E00               	movlw	0
  6220  002F32  6E2F               	movwf	UART_Init@baudRate+2,c
  6221  002F34  0E00               	movlw	0
  6222  002F36  6E30               	movwf	UART_Init@baudRate+3,c
  6223                           
  6224                           ;uart.c: 28:     SPBRG = (unsigned char)((10000000 / (64 * baudRate)) - 1);
  6225  002F38  0E80               	movlw	128
  6226  002F3A  6E1B               	movwf	___aldiv@dividend,c
  6227  002F3C  0E96               	movlw	150
  6228  002F3E  6E1C               	movwf	___aldiv@dividend+1,c
  6229  002F40  0E98               	movlw	152
  6230  002F42  6E1D               	movwf	___aldiv@dividend+2,c
  6231  002F44  0E00               	movlw	0
  6232  002F46  6E1E               	movwf	___aldiv@dividend+3,c
  6233  002F48  C02D  F029         	movff	UART_Init@baudRate,??_UART_Init
  6234  002F4C  C02E  F02A         	movff	UART_Init@baudRate+1,??_UART_Init+1
  6235  002F50  C02F  F02B         	movff	UART_Init@baudRate+2,??_UART_Init+2
  6236  002F54  C030  F02C         	movff	UART_Init@baudRate+3,??_UART_Init+3
  6237  002F58  0E06               	movlw	6
  6238  002F5A                     u3865:
  6239  002F5A  90D8               	bcf	status,0,c
  6240  002F5C  3629               	rlcf	??_UART_Init,f,c
  6241  002F5E  362A               	rlcf	??_UART_Init+1,f,c
  6242  002F60  362B               	rlcf	??_UART_Init+2,f,c
  6243  002F62  362C               	rlcf	??_UART_Init+3,f,c
  6244  002F64  2EE8               	decfsz	wreg,f,c
  6245  002F66  D7F9               	goto	u3865
  6246  002F68  C029  F01F         	movff	??_UART_Init,___aldiv@divisor
  6247  002F6C  C02A  F020         	movff	??_UART_Init+1,___aldiv@divisor+1
  6248  002F70  C02B  F021         	movff	??_UART_Init+2,___aldiv@divisor+2
  6249  002F74  C02C  F022         	movff	??_UART_Init+3,___aldiv@divisor+3
  6250  002F78  EC36  F016         	call	___aldiv	;wreg free
  6251  002F7C  041B               	decf	?___aldiv,w,c
  6252  002F7E  6EAF               	movwf	4015,c	;volatile
  6253                           
  6254                           ;uart.c: 31:     TRISCbits.TRISC6 = 0;
  6255  002F80  9C94               	bcf	3988,6,c	;volatile
  6256                           
  6257                           ;uart.c: 32:     TRISCbits.TRISC7 = 1;
  6258  002F82  8E94               	bsf	3988,7,c	;volatile
  6259                           
  6260                           ;uart.c: 35:     TXSTAbits.TX9 = 0;
  6261  002F84  9CAC               	bcf	4012,6,c	;volatile
  6262                           
  6263                           ;uart.c: 36:     TXSTAbits.SYNC = 0;
  6264  002F86  98AC               	bcf	4012,4,c	;volatile
  6265                           
  6266                           ;uart.c: 38:     TXSTAbits.TXEN = 1;
  6267  002F88  8AAC               	bsf	4012,5,c	;volatile
  6268                           
  6269                           ;uart.c: 39:     _delay((unsigned long)((5)*(10000000/4000.0)));
  6270  002F8A  0E11               	movlw	17
  6271  002F8C  6E29               	movwf	??_UART_Init& (0+255),c
  6272  002F8E  0E3A               	movlw	58
  6273  002F90                     u5167:
  6274  002F90  2EE8               	decfsz	wreg,f,c
  6275  002F92  D7FE               	bra	u5167
  6276  002F94  2E29               	decfsz	??_UART_Init& (0+255),f,c
  6277  002F96  D7FC               	bra	u5167
  6278  002F98  D000               	nop2	
  6279                           
  6280                           ;uart.c: 41:     RCSTAbits.SPEN = 1;
  6281  002F9A  8EAB               	bsf	4011,7,c	;volatile
  6282                           
  6283                           ;uart.c: 42:     RCSTAbits.RX9 = 0;
  6284  002F9C  9CAB               	bcf	4011,6,c	;volatile
  6285                           
  6286                           ;uart.c: 43:     RCSTAbits.CREN = 1;
  6287  002F9E  88AB               	bsf	4011,4,c	;volatile
  6288                           
  6289                           ;uart.c: 45:     PIE1bits.RCIE = 1;
  6290  002FA0  8A9D               	bsf	3997,5,c	;volatile
  6291                           
  6292                           ;uart.c: 46:     PIE1bits.TXIE = 1;
  6293  002FA2  889D               	bsf	3997,4,c	;volatile
  6294  002FA4  0012               	return		;funcret
  6295  002FA6                     __end_of_UART_Init:
  6296                           	opt callstack 0
  6297                           
  6298 ;; *************** function ___aldiv *****************
  6299 ;; Defined at:
  6300 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;  dividend        4   26[COMRAM] long 
  6303 ;;  divisor         4   30[COMRAM] long 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  quotient        4   36[COMRAM] long 
  6306 ;;  sign            1   35[COMRAM] unsigned char 
  6307 ;;  counter         1   34[COMRAM] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  4   26[COMRAM] long 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6317 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;Total ram usage:       14 bytes
  6322 ;; Hardware stack levels used:    1
  6323 ;; Hardware stack levels required when called:    3
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_UART_Init
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text27
  6332  002C6C                     __ptext27:
  6333                           	opt callstack 0
  6334  002C6C                     ___aldiv:
  6335                           	opt callstack 26
  6336                           
  6337                           ;incstack = 0
  6338  002C6C  0E00               	movlw	0
  6339  002C6E  6E24               	movwf	___aldiv@sign,c
  6340  002C70  AE22               	btfss	___aldiv@divisor+3,7,c
  6341  002C72  D00A               	goto	l3486
  6342  002C74  1E22               	comf	___aldiv@divisor+3,f,c
  6343  002C76  1E21               	comf	___aldiv@divisor+2,f,c
  6344  002C78  1E20               	comf	___aldiv@divisor+1,f,c
  6345  002C7A  6C1F               	negf	___aldiv@divisor,c
  6346  002C7C  0E00               	movlw	0
  6347  002C7E  2220               	addwfc	___aldiv@divisor+1,f,c
  6348  002C80  2221               	addwfc	___aldiv@divisor+2,f,c
  6349  002C82  2222               	addwfc	___aldiv@divisor+3,f,c
  6350  002C84  0E01               	movlw	1
  6351  002C86  6E24               	movwf	___aldiv@sign,c
  6352  002C88                     l3486:
  6353  002C88  AE1E               	btfss	___aldiv@dividend+3,7,c
  6354  002C8A  D00A               	goto	l3492
  6355  002C8C  1E1E               	comf	___aldiv@dividend+3,f,c
  6356  002C8E  1E1D               	comf	___aldiv@dividend+2,f,c
  6357  002C90  1E1C               	comf	___aldiv@dividend+1,f,c
  6358  002C92  6C1B               	negf	___aldiv@dividend,c
  6359  002C94  0E00               	movlw	0
  6360  002C96  221C               	addwfc	___aldiv@dividend+1,f,c
  6361  002C98  221D               	addwfc	___aldiv@dividend+2,f,c
  6362  002C9A  221E               	addwfc	___aldiv@dividend+3,f,c
  6363  002C9C  0E01               	movlw	1
  6364  002C9E  1A24               	xorwf	___aldiv@sign,f,c
  6365  002CA0                     l3492:
  6366  002CA0  0E00               	movlw	0
  6367  002CA2  6E25               	movwf	___aldiv@quotient,c
  6368  002CA4  0E00               	movlw	0
  6369  002CA6  6E26               	movwf	___aldiv@quotient+1,c
  6370  002CA8  0E00               	movlw	0
  6371  002CAA  6E27               	movwf	___aldiv@quotient+2,c
  6372  002CAC  0E00               	movlw	0
  6373  002CAE  6E28               	movwf	___aldiv@quotient+3,c
  6374  002CB0  501F               	movf	___aldiv@divisor,w,c
  6375  002CB2  1020               	iorwf	___aldiv@divisor+1,w,c
  6376  002CB4  1021               	iorwf	___aldiv@divisor+2,w,c
  6377  002CB6  1022               	iorwf	___aldiv@divisor+3,w,c
  6378  002CB8  B4D8               	btfsc	status,2,c
  6379  002CBA  D02A               	goto	l3514
  6380  002CBC  0E01               	movlw	1
  6381  002CBE  6E23               	movwf	___aldiv@counter,c
  6382  002CC0  D006               	goto	l3500
  6383  002CC2                     l3498:
  6384  002CC2  90D8               	bcf	status,0,c
  6385  002CC4  361F               	rlcf	___aldiv@divisor,f,c
  6386  002CC6  3620               	rlcf	___aldiv@divisor+1,f,c
  6387  002CC8  3621               	rlcf	___aldiv@divisor+2,f,c
  6388  002CCA  3622               	rlcf	___aldiv@divisor+3,f,c
  6389  002CCC  2A23               	incf	___aldiv@counter,f,c
  6390  002CCE                     l3500:
  6391  002CCE  AE22               	btfss	___aldiv@divisor+3,7,c
  6392  002CD0  D7F8               	goto	l3498
  6393  002CD2                     u2980:
  6394  002CD2  90D8               	bcf	status,0,c
  6395  002CD4  3625               	rlcf	___aldiv@quotient,f,c
  6396  002CD6  3626               	rlcf	___aldiv@quotient+1,f,c
  6397  002CD8  3627               	rlcf	___aldiv@quotient+2,f,c
  6398  002CDA  3628               	rlcf	___aldiv@quotient+3,f,c
  6399  002CDC  501F               	movf	___aldiv@divisor,w,c
  6400  002CDE  5C1B               	subwf	___aldiv@dividend,w,c
  6401  002CE0  5020               	movf	___aldiv@divisor+1,w,c
  6402  002CE2  581C               	subwfb	___aldiv@dividend+1,w,c
  6403  002CE4  5021               	movf	___aldiv@divisor+2,w,c
  6404  002CE6  581D               	subwfb	___aldiv@dividend+2,w,c
  6405  002CE8  5022               	movf	___aldiv@divisor+3,w,c
  6406  002CEA  581E               	subwfb	___aldiv@dividend+3,w,c
  6407  002CEC  A0D8               	btfss	status,0,c
  6408  002CEE  D009               	goto	l3510
  6409  002CF0  501F               	movf	___aldiv@divisor,w,c
  6410  002CF2  5E1B               	subwf	___aldiv@dividend,f,c
  6411  002CF4  5020               	movf	___aldiv@divisor+1,w,c
  6412  002CF6  5A1C               	subwfb	___aldiv@dividend+1,f,c
  6413  002CF8  5021               	movf	___aldiv@divisor+2,w,c
  6414  002CFA  5A1D               	subwfb	___aldiv@dividend+2,f,c
  6415  002CFC  5022               	movf	___aldiv@divisor+3,w,c
  6416  002CFE  5A1E               	subwfb	___aldiv@dividend+3,f,c
  6417  002D00  8025               	bsf	___aldiv@quotient,0,c
  6418  002D02                     l3510:
  6419  002D02  90D8               	bcf	status,0,c
  6420  002D04  3222               	rrcf	___aldiv@divisor+3,f,c
  6421  002D06  3221               	rrcf	___aldiv@divisor+2,f,c
  6422  002D08  3220               	rrcf	___aldiv@divisor+1,f,c
  6423  002D0A  321F               	rrcf	___aldiv@divisor,f,c
  6424  002D0C  2E23               	decfsz	___aldiv@counter,f,c
  6425  002D0E  D7E1               	goto	u2980
  6426  002D10                     l3514:
  6427  002D10  5024               	movf	___aldiv@sign,w,c
  6428  002D12  B4D8               	btfsc	status,2,c
  6429  002D14  D008               	goto	l3518
  6430  002D16  1E28               	comf	___aldiv@quotient+3,f,c
  6431  002D18  1E27               	comf	___aldiv@quotient+2,f,c
  6432  002D1A  1E26               	comf	___aldiv@quotient+1,f,c
  6433  002D1C  6C25               	negf	___aldiv@quotient,c
  6434  002D1E  0E00               	movlw	0
  6435  002D20  2226               	addwfc	___aldiv@quotient+1,f,c
  6436  002D22  2227               	addwfc	___aldiv@quotient+2,f,c
  6437  002D24  2228               	addwfc	___aldiv@quotient+3,f,c
  6438  002D26                     l3518:
  6439  002D26  C025  F01B         	movff	___aldiv@quotient,?___aldiv
  6440  002D2A  C026  F01C         	movff	___aldiv@quotient+1,?___aldiv+1
  6441  002D2E  C027  F01D         	movff	___aldiv@quotient+2,?___aldiv+2
  6442  002D32  C028  F01E         	movff	___aldiv@quotient+3,?___aldiv+3
  6443  002D36  0012               	return		;funcret
  6444  002D38                     __end_of___aldiv:
  6445                           	opt callstack 0
  6446                           
  6447 ;; *************** function _RTC_Init *****************
  6448 ;; Defined at:
  6449 ;;		line 31 in file "rtc.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;Total ram usage:        0 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    5
  6470 ;; This function calls:
  6471 ;;		_I2C_Master_Start
  6472 ;;		_I2C_Master_Stop
  6473 ;;		_I2C_Master_Write
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text28
  6480  00344A                     __ptext28:
  6481                           	opt callstack 0
  6482  00344A                     _RTC_Init:
  6483                           	opt callstack 25
  6484                           
  6485                           ;rtc.c: 33:     I2C_Master_Start();
  6486                           
  6487                           ;incstack = 0
  6488  00344A  ECED  F01A         	call	_I2C_Master_Start	;wreg free
  6489                           
  6490                           ;rtc.c: 35:     I2C_Master_Write(0xD0u);
  6491  00344E  0E00               	movlw	0
  6492  003450  6E1D               	movwf	I2C_Master_Write@byteToWrite+1,c
  6493  003452  0ED0               	movlw	208
  6494  003454  6E1C               	movwf	I2C_Master_Write@byteToWrite,c
  6495  003456  ECDA  F01A         	call	_I2C_Master_Write	;wreg free
  6496                           
  6497                           ;rtc.c: 36:     I2C_Master_Write(0x07u);
  6498  00345A  0E00               	movlw	0
  6499  00345C  6E1D               	movwf	I2C_Master_Write@byteToWrite+1,c
  6500  00345E  0E07               	movlw	7
  6501  003460  6E1C               	movwf	I2C_Master_Write@byteToWrite,c
  6502  003462  ECDA  F01A         	call	_I2C_Master_Write	;wreg free
  6503                           
  6504                           ;rtc.c: 38:     I2C_Master_Write(0x00);
  6505  003466  0E00               	movlw	0
  6506  003468  6E1D               	movwf	I2C_Master_Write@byteToWrite+1,c
  6507  00346A  0E00               	movlw	0
  6508  00346C  6E1C               	movwf	I2C_Master_Write@byteToWrite,c
  6509  00346E  ECDA  F01A         	call	_I2C_Master_Write	;wreg free
  6510                           
  6511                           ;rtc.c: 40:     I2C_Master_Stop();
  6512  003472  ECE9  F01A         	call	_I2C_Master_Stop	;wreg free
  6513  003476  0012               	return		;funcret
  6514  003478                     __end_of_RTC_Init:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function _I2C_Master_Write *****************
  6518 ;; Defined at:
  6519 ;;		line 66 in file "I2C.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  byteToWrite     2   27[COMRAM] unsigned int 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        2 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    4
  6540 ;; This function calls:
  6541 ;;		_I2C_Master_Wait
  6542 ;; This function is called by:
  6543 ;;		_RTC_Init
  6544 ;;		_RTC_SetDateTime
  6545 ;;		_RTC_GetDateTime
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text29
  6550  0035B4                     __ptext29:
  6551                           	opt callstack 0
  6552  0035B4                     _I2C_Master_Write:
  6553                           	opt callstack 25
  6554                           
  6555                           ;I2C.c: 67:     I2C_Master_Wait();
  6556                           
  6557                           ;incstack = 0
  6558  0035B4  ECB5  F01A         	call	_I2C_Master_Wait	;wreg free
  6559                           
  6560                           ;I2C.c: 70:     SSPBUF = byteToWrite;
  6561  0035B8  C01C  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
  6562  0035BC  0012               	return		;funcret
  6563  0035BE                     __end_of_I2C_Master_Write:
  6564                           	opt callstack 0
  6565                           
  6566 ;; *************** function _I2C_Master_Stop *****************
  6567 ;; Defined at:
  6568 ;;		line 61 in file "I2C.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg, status,2, status,0, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    4
  6589 ;; This function calls:
  6590 ;;		_I2C_Master_Wait
  6591 ;; This function is called by:
  6592 ;;		_RTC_Init
  6593 ;;		_RTC_SetDateTime
  6594 ;;		_RTC_GetDateTime
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text30
  6599  0035D2                     __ptext30:
  6600                           	opt callstack 0
  6601  0035D2                     _I2C_Master_Stop:
  6602                           	opt callstack 25
  6603                           
  6604                           ;I2C.c: 62:     I2C_Master_Wait();
  6605                           
  6606                           ;incstack = 0
  6607  0035D2  ECB5  F01A         	call	_I2C_Master_Wait	;wreg free
  6608                           
  6609                           ;I2C.c: 63:     SSPCON2bits.PEN = 1;
  6610  0035D6  84C5               	bsf	4037,2,c	;volatile
  6611  0035D8  0012               	return		;funcret
  6612  0035DA                     __end_of_I2C_Master_Stop:
  6613                           	opt callstack 0
  6614                           
  6615 ;; *************** function _I2C_Master_Start *****************
  6616 ;; Defined at:
  6617 ;;		line 51 in file "I2C.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;		None
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;		None
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0, cstack
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; Hardware stack levels required when called:    4
  6638 ;; This function calls:
  6639 ;;		_I2C_Master_Wait
  6640 ;; This function is called by:
  6641 ;;		_RTC_Init
  6642 ;;		_RTC_SetDateTime
  6643 ;;		_RTC_GetDateTime
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text31
  6648  0035DA                     __ptext31:
  6649                           	opt callstack 0
  6650  0035DA                     _I2C_Master_Start:
  6651                           	opt callstack 25
  6652                           
  6653                           ;I2C.c: 52:     I2C_Master_Wait();
  6654                           
  6655                           ;incstack = 0
  6656  0035DA  ECB5  F01A         	call	_I2C_Master_Wait	;wreg free
  6657                           
  6658                           ;I2C.c: 53:     SSPCON2bits.SEN = 1;
  6659  0035DE  80C5               	bsf	4037,0,c	;volatile
  6660  0035E0  0012               	return		;funcret
  6661  0035E2                     __end_of_I2C_Master_Start:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function _I2C_Master_Wait *****************
  6665 ;; Defined at:
  6666 ;;		line 17 in file "I2C.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;Total ram usage:        1 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    3
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_I2C_Master_Start
  6691 ;;		_I2C_Master_Stop
  6692 ;;		_I2C_Master_Write
  6693 ;;		_I2C_Master_RepeatedStart
  6694 ;;		_I2C_Master_Read
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text32
  6699  00356A                     __ptext32:
  6700                           	opt callstack 0
  6701  00356A                     _I2C_Master_Wait:
  6702                           	opt callstack 25
  6703                           
  6704                           ;I2C.c: 22:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
  6705                           
  6706                           ;I2C.c: 24:     }
  6707                           
  6708                           ;incstack = 0
  6709  00356A  B4C7               	btfsc	4039,2,c	;volatile
  6710  00356C  D7FE               	goto	_I2C_Master_Wait
  6711  00356E  CFC5 F01B          	movff	4037,??_I2C_Master_Wait	;volatile
  6712  003572  0E1F               	movlw	31
  6713  003574  161B               	andwf	??_I2C_Master_Wait,f,c
  6714  003576  B4D8               	btfsc	status,2,c
  6715  003578  0012               	return	
  6716  00357A  D7F7               	goto	_I2C_Master_Wait
  6717  00357C                     __end_of_I2C_Master_Wait:
  6718                           	opt callstack 0
  6719                           
  6720 ;; *************** function _LCD_write_str *****************
  6721 ;; Defined at:
  6722 ;;		line 123 in file "lcd.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  str             2   29[COMRAM] PTR unsigned char 
  6725 ;;		 -> main@lcdDisplay(16), 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  i               2   32[COMRAM] int 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;Total ram usage:        5 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    6
  6744 ;; This function calls:
  6745 ;;		_send_byte
  6746 ;; This function is called by:
  6747 ;;		_main
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           	psect	text33
  6752  0032CE                     __ptext33:
  6753                           	opt callstack 0
  6754  0032CE                     _LCD_write_str:
  6755                           	opt callstack 24
  6756                           
  6757                           ;lcd.c: 124:     int i=0;
  6758                           
  6759                           ;incstack = 0
  6760  0032CE  0E00               	movlw	0
  6761  0032D0  6E22               	movwf	LCD_write_str@i+1,c
  6762  0032D2  0E00               	movlw	0
  6763  0032D4  6E21               	movwf	LCD_write_str@i,c
  6764                           
  6765                           ;lcd.c: 125:     while(str[i]!=0 && str[i] != '\n'){
  6766  0032D6  D00C               	goto	l3986
  6767  0032D8                     l98:
  6768                           
  6769                           ;lcd.c: 127:         LATDbits.LATD2 = 1;
  6770  0032D8  848C               	bsf	3980,2,c	;volatile
  6771                           
  6772                           ;lcd.c: 128:         send_byte((unsigned char)str[i]);
  6773  0032DA  5021               	movf	LCD_write_str@i,w,c
  6774  0032DC  241E               	addwf	LCD_write_str@str,w,c
  6775  0032DE  6ED9               	movwf	fsr2l,c
  6776  0032E0  5022               	movf	LCD_write_str@i+1,w,c
  6777  0032E2  201F               	addwfc	LCD_write_str@str+1,w,c
  6778  0032E4  6EDA               	movwf	fsr2h,c
  6779  0032E6  50DF               	movf	indf2,w,c
  6780  0032E8  ECBE  F01A         	call	_send_byte
  6781                           
  6782                           ;lcd.c: 129:         i++;
  6783  0032EC  4A21               	infsnz	LCD_write_str@i,f,c
  6784  0032EE  2A22               	incf	LCD_write_str@i+1,f,c
  6785  0032F0                     l3986:
  6786                           
  6787                           ;lcd.c: 125:     while(str[i]!=0 && str[i] != '\n'){
  6788  0032F0  5021               	movf	LCD_write_str@i,w,c
  6789  0032F2  241E               	addwf	LCD_write_str@str,w,c
  6790  0032F4  6ED9               	movwf	fsr2l,c
  6791  0032F6  5022               	movf	LCD_write_str@i+1,w,c
  6792  0032F8  201F               	addwfc	LCD_write_str@str+1,w,c
  6793  0032FA  6EDA               	movwf	fsr2h,c
  6794  0032FC  50DF               	movf	indf2,w,c
  6795  0032FE  B4D8               	btfsc	status,2,c
  6796  003300  0012               	return	
  6797  003302  5021               	movf	LCD_write_str@i,w,c
  6798  003304  241E               	addwf	LCD_write_str@str,w,c
  6799  003306  6ED9               	movwf	fsr2l,c
  6800  003308  5022               	movf	LCD_write_str@i+1,w,c
  6801  00330A  201F               	addwfc	LCD_write_str@str+1,w,c
  6802  00330C  6EDA               	movwf	fsr2h,c
  6803  00330E  0E0A               	movlw	10
  6804  003310  18DE               	xorwf	postinc2,w,c
  6805  003312  B4D8               	btfsc	status,2,c
  6806  003314  0012               	return	
  6807  003316  D7E0               	goto	l98
  6808  003318                     __end_of_LCD_write_str:
  6809                           	opt callstack 0
  6810                           
  6811 ;; *************** function _LCD_set_cursor *****************
  6812 ;; Defined at:
  6813 ;;		line 106 in file "lcd.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  row             2   30[COMRAM] unsigned int 
  6816 ;;  column          2   32[COMRAM] unsigned int 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;Total ram usage:        4 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    7
  6835 ;; This function calls:
  6836 ;;		_lcdInst
  6837 ;; This function is called by:
  6838 ;;		_main
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text34
  6843  003280                     __ptext34:
  6844                           	opt callstack 0
  6845  003280                     _LCD_set_cursor:
  6846                           	opt callstack 23
  6847                           
  6848                           ;lcd.c: 108:     row=row%4;
  6849                           
  6850                           ;incstack = 0
  6851  003280  0E03               	movlw	3
  6852  003282  141F               	andwf	LCD_set_cursor@row,w,c
  6853  003284  6E1F               	movwf	LCD_set_cursor@row,c
  6854  003286  6A20               	clrf	LCD_set_cursor@row+1,c
  6855                           
  6856                           ;lcd.c: 109:     column = column %16;
  6857  003288  0E0F               	movlw	15
  6858  00328A  1421               	andwf	LCD_set_cursor@column,w,c
  6859  00328C  6E21               	movwf	LCD_set_cursor@column,c
  6860  00328E  6A22               	clrf	LCD_set_cursor@column+1,c
  6861                           
  6862                           ;lcd.c: 110:     if(row==1){
  6863  003290  041F               	decf	LCD_set_cursor@row,w,c
  6864  003292  1020               	iorwf	LCD_set_cursor@row+1,w,c
  6865  003294  A4D8               	btfss	status,2,c
  6866  003296  D004               	goto	l91
  6867                           
  6868                           ;lcd.c: 111:         column +=LCD_LINE2_ADDR;
  6869  003298  0E40               	movlw	64
  6870  00329A  2621               	addwf	LCD_set_cursor@column,f,c
  6871  00329C  0E00               	movlw	0
  6872  00329E  2222               	addwfc	LCD_set_cursor@column+1,f,c
  6873  0032A0                     l91:
  6874                           
  6875                           ;lcd.c: 113:     if(row==2){
  6876  0032A0  0E02               	movlw	2
  6877  0032A2  181F               	xorwf	LCD_set_cursor@row,w,c
  6878  0032A4  1020               	iorwf	LCD_set_cursor@row+1,w,c
  6879  0032A6  A4D8               	btfss	status,2,c
  6880  0032A8  D004               	goto	l92
  6881                           
  6882                           ;lcd.c: 114:         column +=LCD_LINE3_ADDR;
  6883  0032AA  0E10               	movlw	16
  6884  0032AC  2621               	addwf	LCD_set_cursor@column,f,c
  6885  0032AE  0E00               	movlw	0
  6886  0032B0  2222               	addwfc	LCD_set_cursor@column+1,f,c
  6887  0032B2                     l92:
  6888                           
  6889                           ;lcd.c: 116:     if(row==3){
  6890  0032B2  0E03               	movlw	3
  6891  0032B4  181F               	xorwf	LCD_set_cursor@row,w,c
  6892  0032B6  1020               	iorwf	LCD_set_cursor@row+1,w,c
  6893  0032B8  A4D8               	btfss	status,2,c
  6894  0032BA  D004               	goto	l3978
  6895                           
  6896                           ;lcd.c: 117:         column +=LCD_LINE4_ADDR;
  6897  0032BC  0E50               	movlw	80
  6898  0032BE  2621               	addwf	LCD_set_cursor@column,f,c
  6899  0032C0  0E00               	movlw	0
  6900  0032C2  2222               	addwfc	LCD_set_cursor@column+1,f,c
  6901  0032C4                     l3978:
  6902                           
  6903                           ;lcd.c: 120:     { lcdInst(0x80 | column);};
  6904  0032C4  5021               	movf	LCD_set_cursor@column,w,c
  6905  0032C6  0980               	iorlw	128
  6906  0032C8  ECD4  F01A         	call	_lcdInst
  6907  0032CC  0012               	return		;funcret
  6908  0032CE                     __end_of_LCD_set_cursor:
  6909                           	opt callstack 0
  6910                           
  6911 ;; *************** function _lcdInst *****************
  6912 ;; Defined at:
  6913 ;;		line 62 in file "lcd.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  data            1    wreg     unsigned char 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  data            1   29[COMRAM] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;Total ram usage:        1 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    6
  6934 ;; This function calls:
  6935 ;;		_send_byte
  6936 ;; This function is called by:
  6937 ;;		_initLCD
  6938 ;;		_LCD_set_cursor
  6939 ;;		_lcd_shift_cursor
  6940 ;;		_lcd_shift_display
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text35
  6945  0035A8                     __ptext35:
  6946                           	opt callstack 0
  6947  0035A8                     _lcdInst:
  6948                           	opt callstack 23
  6949                           
  6950                           ;incstack = 0
  6951                           ;lcdInst@data stored from wreg
  6952  0035A8  6E1E               	movwf	lcdInst@data,c
  6953                           
  6954                           ;lcd.c: 63:     LATDbits.LATD2 = 0;
  6955  0035AA  948C               	bcf	3980,2,c	;volatile
  6956                           
  6957                           ;lcd.c: 64:     send_byte(data);
  6958  0035AC  501E               	movf	lcdInst@data,w,c
  6959  0035AE  ECBE  F01A         	call	_send_byte
  6960  0035B2  0012               	return		;funcret
  6961  0035B4                     __end_of_lcdInst:
  6962                           	opt callstack 0
  6963                           
  6964 ;; *************** function _send_byte *****************
  6965 ;; Defined at:
  6966 ;;		line 53 in file "lcd.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  data            1    wreg     unsigned char 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  data            1   28[COMRAM] unsigned char 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  1    wreg      void 
  6973 ;; Registers used:
  6974 ;;		wreg, status,2, status,0, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6984 ;;Total ram usage:        1 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    5
  6987 ;; This function calls:
  6988 ;;		_send_nibble
  6989 ;; This function is called by:
  6990 ;;		_lcdInst
  6991 ;;		_initLCD
  6992 ;;		_putch
  6993 ;;		_LCD_write_str
  6994 ;;		_LCD_write_char
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text36
  6999  00357C                     __ptext36:
  7000                           	opt callstack 0
  7001  00357C                     _send_byte:
  7002                           	opt callstack 19
  7003                           
  7004                           ;incstack = 0
  7005                           ;send_byte@data stored from wreg
  7006  00357C  6E1D               	movwf	send_byte@data,c
  7007                           
  7008                           ;lcd.c: 55:     send_nibble(data >> 4);
  7009  00357E  381D               	swapf	send_byte@data,w,c
  7010  003580  0B0F               	andlw	15
  7011  003582  ECAA  F01A         	call	_send_nibble
  7012                           
  7013                           ;lcd.c: 58:     send_nibble(data);
  7014  003586  501D               	movf	send_byte@data,w,c
  7015  003588  ECAA  F01A         	call	_send_nibble
  7016  00358C  0012               	return		;funcret
  7017  00358E                     __end_of_send_byte:
  7018                           	opt callstack 0
  7019                           
  7020 ;; *************** function _send_nibble *****************
  7021 ;; Defined at:
  7022 ;;		line 42 in file "lcd.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  data            1    wreg     unsigned char 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  data            1   27[COMRAM] unsigned char 
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;Total ram usage:        1 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    4
  7043 ;; This function calls:
  7044 ;;		_pulse_e
  7045 ;; This function is called by:
  7046 ;;		_send_byte
  7047 ;;		_initLCD
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text37
  7052  003554                     __ptext37:
  7053                           	opt callstack 0
  7054  003554                     _send_nibble:
  7055                           	opt callstack 19
  7056                           
  7057                           ;incstack = 0
  7058                           ;send_nibble@data stored from wreg
  7059  003554  6E1C               	movwf	send_nibble@data,c
  7060                           
  7061                           ;lcd.c: 44:     LATD = (unsigned char)(LATD & 0x0F);
  7062  003556  508C               	movf	3980,w,c	;volatile
  7063  003558  0B0F               	andlw	15
  7064  00355A  6E8C               	movwf	3980,c	;volatile
  7065                           
  7066                           ;lcd.c: 45:     LATD = (unsigned char)((data << 4) | LATD);
  7067  00355C  381C               	swapf	send_nibble@data,w,c
  7068  00355E  0BF0               	andlw	240
  7069  003560  108C               	iorwf	3980,w,c	;volatile
  7070  003562  6E8C               	movwf	3980,c	;volatile
  7071                           
  7072                           ;lcd.c: 46:     pulse_e();
  7073  003564  EC51  F01A         	call	_pulse_e	;wreg free
  7074  003568  0012               	return		;funcret
  7075  00356A                     __end_of_send_nibble:
  7076                           	opt callstack 0
  7077                           
  7078 ;; *************** function _pulse_e *****************
  7079 ;; Defined at:
  7080 ;;		line 26 in file "lcd.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;		None
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  interruptSta    1   26[COMRAM] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;Total ram usage:        1 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    3
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_send_nibble
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text38
  7109  0034A2                     __ptext38:
  7110                           	opt callstack 0
  7111  0034A2                     _pulse_e:
  7112                           	opt callstack 19
  7113                           
  7114                           ;lcd.c: 27:     unsigned char interruptState = INTCONbits.GIE;
  7115                           
  7116                           ;incstack = 0
  7117  0034A2  0E00               	movlw	0
  7118  0034A4  BEF2               	btfsc	4082,7,c	;volatile
  7119  0034A6  0E01               	movlw	1
  7120  0034A8  6E1B               	movwf	pulse_e@interruptState,c
  7121                           
  7122                           ;lcd.c: 28:     (INTCONbits.GIE = 0);
  7123  0034AA  9EF2               	bcf	4082,7,c	;volatile
  7124                           
  7125                           ;lcd.c: 29:     LATDbits.LATD3 = 1;
  7126  0034AC  868C               	bsf	3980,3,c	;volatile
  7127                           
  7128                           ;lcd.c: 32:     _delay((unsigned long)((25)*(10000000/4000000.0)));
  7129  0034AE  0E14               	movlw	20
  7130  0034B0                     u5177:
  7131  0034B0  2EE8               	decfsz	wreg,f,c
  7132  0034B2  D7FE               	bra	u5177
  7133  0034B4  D000               	nop2	
  7134                           
  7135                           ;lcd.c: 33:     LATDbits.LATD3 = 0;
  7136  0034B6  968C               	bcf	3980,3,c	;volatile
  7137                           
  7138                           ;lcd.c: 34:     _delay((unsigned long)((100)*(10000000/4000000.0)));
  7139  0034B8  0E53               	movlw	83
  7140  0034BA                     u5187:
  7141  0034BA  2EE8               	decfsz	wreg,f,c
  7142  0034BC  D7FE               	bra	u5187
  7143  0034BE  F000               	nop	
  7144                           
  7145                           ;lcd.c: 35:     INTCONbits.GIE = interruptState;
  7146  0034C0  B01B               	btfsc	pulse_e@interruptState,0,c
  7147  0034C2  D002               	bra	u2435
  7148  0034C4  9EF2               	bcf	4082,7,c	;volatile
  7149  0034C6  D001               	bra	u2436
  7150  0034C8                     u2435:
  7151  0034C8  8EF2               	bsf	4082,7,c	;volatile
  7152  0034CA                     u2436:
  7153  0034CA  0012               	return		;funcret
  7154  0034CC                     __end_of_pulse_e:
  7155                           	opt callstack 0
  7156                           
  7157 ;; *************** function _I2C_Master_Init *****************
  7158 ;; Defined at:
  7159 ;;		line 28 in file "I2C.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  clockFreq       4   39[COMRAM] const unsigned long 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0, cstack
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;Total ram usage:        8 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    4
  7180 ;; This function calls:
  7181 ;;		___lldiv
  7182 ;; This function is called by:
  7183 ;;		_main
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           	psect	text39
  7188  003092                     __ptext39:
  7189                           	opt callstack 0
  7190  003092                     _I2C_Master_Init:
  7191                           	opt callstack 26
  7192                           
  7193                           ;I2C.c: 30:     SSPCON1bits.SSPEN = 0;
  7194                           
  7195                           ;incstack = 0
  7196  003092  9AC6               	bcf	4038,5,c	;volatile
  7197                           
  7198                           ;I2C.c: 33:     TRISCbits.TRISC3 = 1;
  7199  003094  8694               	bsf	3988,3,c	;volatile
  7200                           
  7201                           ;I2C.c: 34:     TRISCbits.TRISC4 = 1;
  7202  003096  8894               	bsf	3988,4,c	;volatile
  7203                           
  7204                           ;I2C.c: 39:     SSPADD = (10000000 / (4 * clockFreq)) - 1;
  7205  003098  0E80               	movlw	128
  7206  00309A  6E1B               	movwf	___lldiv@dividend,c
  7207  00309C  0E96               	movlw	150
  7208  00309E  6E1C               	movwf	___lldiv@dividend+1,c
  7209  0030A0  0E98               	movlw	152
  7210  0030A2  6E1D               	movwf	___lldiv@dividend+2,c
  7211  0030A4  0E00               	movlw	0
  7212  0030A6  6E1E               	movwf	___lldiv@dividend+3,c
  7213  0030A8  C028  F02C         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
  7214  0030AC  C029  F02D         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
  7215  0030B0  C02A  F02E         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
  7216  0030B4  C02B  F02F         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
  7217  0030B8  0E02               	movlw	2
  7218  0030BA                     u3795:
  7219  0030BA  90D8               	bcf	status,0,c
  7220  0030BC  362C               	rlcf	??_I2C_Master_Init,f,c
  7221  0030BE  362D               	rlcf	??_I2C_Master_Init+1,f,c
  7222  0030C0  362E               	rlcf	??_I2C_Master_Init+2,f,c
  7223  0030C2  362F               	rlcf	??_I2C_Master_Init+3,f,c
  7224  0030C4  2EE8               	decfsz	wreg,f,c
  7225  0030C6  D7F9               	goto	u3795
  7226  0030C8  C02C  F01F         	movff	??_I2C_Master_Init,___lldiv@divisor
  7227  0030CC  C02D  F020         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  7228  0030D0  C02E  F021         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  7229  0030D4  C02F  F022         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  7230  0030D8  ECD3  F017         	call	___lldiv	;wreg free
  7231  0030DC  041B               	decf	?___lldiv,w,c
  7232  0030DE  6EC8               	movwf	4040,c	;volatile
  7233                           
  7234                           ;I2C.c: 42:     SSPSTAT = 0b10000000;
  7235  0030E0  0E80               	movlw	128
  7236  0030E2  6EC7               	movwf	4039,c	;volatile
  7237                           
  7238                           ;I2C.c: 45:     SSPCON1 = 0b00101000;
  7239  0030E4  0E28               	movlw	40
  7240  0030E6  6EC6               	movwf	4038,c	;volatile
  7241                           
  7242                           ;I2C.c: 48:     SSPCON2 = 0b00000000;
  7243  0030E8  0E00               	movlw	0
  7244  0030EA  6EC5               	movwf	4037,c	;volatile
  7245  0030EC  0012               	return		;funcret
  7246  0030EE                     __end_of_I2C_Master_Init:
  7247                           	opt callstack 0
  7248                           
  7249 ;; *************** function ___lldiv *****************
  7250 ;; Defined at:
  7251 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__lldiv.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  dividend        4   26[COMRAM] unsigned long 
  7254 ;;  divisor         4   30[COMRAM] unsigned long 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  quotient        4   34[COMRAM] unsigned long 
  7257 ;;  counter         1   38[COMRAM] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  4   26[COMRAM] unsigned long 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:       13 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    3
  7274 ;; This function calls:
  7275 ;;		Nothing
  7276 ;; This function is called by:
  7277 ;;		_I2C_Master_Init
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text40
  7282  002FA6                     __ptext40:
  7283                           	opt callstack 0
  7284  002FA6                     ___lldiv:
  7285                           	opt callstack 26
  7286                           
  7287                           ;incstack = 0
  7288  002FA6  0E00               	movlw	0
  7289  002FA8  6E23               	movwf	___lldiv@quotient,c
  7290  002FAA  0E00               	movlw	0
  7291  002FAC  6E24               	movwf	___lldiv@quotient+1,c
  7292  002FAE  0E00               	movlw	0
  7293  002FB0  6E25               	movwf	___lldiv@quotient+2,c
  7294  002FB2  0E00               	movlw	0
  7295  002FB4  6E26               	movwf	___lldiv@quotient+3,c
  7296  002FB6  501F               	movf	___lldiv@divisor,w,c
  7297  002FB8  1020               	iorwf	___lldiv@divisor+1,w,c
  7298  002FBA  1021               	iorwf	___lldiv@divisor+2,w,c
  7299  002FBC  1022               	iorwf	___lldiv@divisor+3,w,c
  7300  002FBE  B4D8               	btfsc	status,2,c
  7301  002FC0  D02A               	goto	l570
  7302  002FC2  0E01               	movlw	1
  7303  002FC4  6E27               	movwf	___lldiv@counter,c
  7304  002FC6  D006               	goto	l3464
  7305  002FC8                     l3462:
  7306  002FC8  90D8               	bcf	status,0,c
  7307  002FCA  361F               	rlcf	___lldiv@divisor,f,c
  7308  002FCC  3620               	rlcf	___lldiv@divisor+1,f,c
  7309  002FCE  3621               	rlcf	___lldiv@divisor+2,f,c
  7310  002FD0  3622               	rlcf	___lldiv@divisor+3,f,c
  7311  002FD2  2A27               	incf	___lldiv@counter,f,c
  7312  002FD4                     l3464:
  7313  002FD4  AE22               	btfss	___lldiv@divisor+3,7,c
  7314  002FD6  D7F8               	goto	l3462
  7315  002FD8                     u2930:
  7316  002FD8  90D8               	bcf	status,0,c
  7317  002FDA  3623               	rlcf	___lldiv@quotient,f,c
  7318  002FDC  3624               	rlcf	___lldiv@quotient+1,f,c
  7319  002FDE  3625               	rlcf	___lldiv@quotient+2,f,c
  7320  002FE0  3626               	rlcf	___lldiv@quotient+3,f,c
  7321  002FE2  501F               	movf	___lldiv@divisor,w,c
  7322  002FE4  5C1B               	subwf	___lldiv@dividend,w,c
  7323  002FE6  5020               	movf	___lldiv@divisor+1,w,c
  7324  002FE8  581C               	subwfb	___lldiv@dividend+1,w,c
  7325  002FEA  5021               	movf	___lldiv@divisor+2,w,c
  7326  002FEC  581D               	subwfb	___lldiv@dividend+2,w,c
  7327  002FEE  5022               	movf	___lldiv@divisor+3,w,c
  7328  002FF0  581E               	subwfb	___lldiv@dividend+3,w,c
  7329  002FF2  A0D8               	btfss	status,0,c
  7330  002FF4  D009               	goto	l3474
  7331  002FF6  501F               	movf	___lldiv@divisor,w,c
  7332  002FF8  5E1B               	subwf	___lldiv@dividend,f,c
  7333  002FFA  5020               	movf	___lldiv@divisor+1,w,c
  7334  002FFC  5A1C               	subwfb	___lldiv@dividend+1,f,c
  7335  002FFE  5021               	movf	___lldiv@divisor+2,w,c
  7336  003000  5A1D               	subwfb	___lldiv@dividend+2,f,c
  7337  003002  5022               	movf	___lldiv@divisor+3,w,c
  7338  003004  5A1E               	subwfb	___lldiv@dividend+3,f,c
  7339  003006  8023               	bsf	___lldiv@quotient,0,c
  7340  003008                     l3474:
  7341  003008  90D8               	bcf	status,0,c
  7342  00300A  3222               	rrcf	___lldiv@divisor+3,f,c
  7343  00300C  3221               	rrcf	___lldiv@divisor+2,f,c
  7344  00300E  3220               	rrcf	___lldiv@divisor+1,f,c
  7345  003010  321F               	rrcf	___lldiv@divisor,f,c
  7346  003012  2E27               	decfsz	___lldiv@counter,f,c
  7347  003014  D7E1               	goto	u2930
  7348  003016                     l570:
  7349  003016  C023  F01B         	movff	___lldiv@quotient,?___lldiv
  7350  00301A  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  7351  00301E  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  7352  003022  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  7353  003026  0012               	return		;funcret
  7354  003028                     __end_of___lldiv:
  7355                           	opt callstack 0
  7356                           
  7357 ;; *************** function _DCMotorRightOFF *****************
  7358 ;; Defined at:
  7359 ;;		line 8 in file "motors.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;		None
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		None
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;Total ram usage:        0 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    3
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_main
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text41
  7388  00360A                     __ptext41:
  7389                           	opt callstack 0
  7390  00360A                     _DCMotorRightOFF:
  7391                           	opt callstack 27
  7392                           
  7393                           ;motors.c: 9:     LATAbits.LATA0 = 0;
  7394                           
  7395                           ;incstack = 0
  7396  00360A  9089               	bcf	3977,0,c	;volatile
  7397                           
  7398                           ;motors.c: 10:     LATAbits.LATA1 = 0;
  7399  00360C  9289               	bcf	3977,1,c	;volatile
  7400  00360E  0012               	return		;funcret
  7401  003610                     __end_of_DCMotorRightOFF:
  7402                           	opt callstack 0
  7403                           
  7404 ;; *************** function _DCMotorLeftRightFwdON *****************
  7405 ;; Defined at:
  7406 ;;		line 59 in file "motors.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;		None
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;		None
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;Total ram usage:        0 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    4
  7427 ;; This function calls:
  7428 ;;		_DCMotorLeftFwd
  7429 ;;		_DCMotorRightFwd
  7430 ;; This function is called by:
  7431 ;;		_main
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text42
  7436  0035BE                     __ptext42:
  7437                           	opt callstack 0
  7438  0035BE                     _DCMotorLeftRightFwdON:
  7439                           	opt callstack 26
  7440                           
  7441                           ;motors.c: 60:     DCMotorLeftFwd();
  7442                           
  7443                           ;incstack = 0
  7444  0035BE  ECF5  F01A         	call	_DCMotorLeftFwd	;wreg free
  7445                           
  7446                           ;motors.c: 61:     DCMotorRightFwd();
  7447  0035C2  ECF1  F01A         	call	_DCMotorRightFwd	;wreg free
  7448  0035C6  0012               	return		;funcret
  7449  0035C8                     __end_of_DCMotorLeftRightFwdON:
  7450                           	opt callstack 0
  7451                           
  7452 ;; *************** function _DCMotorRightFwd *****************
  7453 ;; Defined at:
  7454 ;;		line 29 in file "motors.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		None
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    3
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;;		_DCMotorLeftRightFwdON
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text43
  7484  0035E2                     __ptext43:
  7485                           	opt callstack 0
  7486  0035E2                     _DCMotorRightFwd:
  7487                           	opt callstack 27
  7488                           
  7489                           ;motors.c: 30:     LATAbits.LATA1 = 0;
  7490                           
  7491                           ;incstack = 0
  7492  0035E2  9289               	bcf	3977,1,c	;volatile
  7493                           
  7494                           ;motors.c: 31:     LATAbits.LATA3 = 0;
  7495  0035E4  9689               	bcf	3977,3,c	;volatile
  7496                           
  7497                           ;motors.c: 33:     LATAbits.LATA0 = 1;
  7498  0035E6  8089               	bsf	3977,0,c	;volatile
  7499  0035E8  0012               	return		;funcret
  7500  0035EA                     __end_of_DCMotorRightFwd:
  7501                           	opt callstack 0
  7502                           
  7503 ;; *************** function _DCMotorLeftFwd *****************
  7504 ;; Defined at:
  7505 ;;		line 23 in file "motors.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		None
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7523 ;;Total ram usage:        0 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    3
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_main
  7530 ;;		_DCMotorLeftRightFwdON
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text44
  7535  0035EA                     __ptext44:
  7536                           	opt callstack 0
  7537  0035EA                     _DCMotorLeftFwd:
  7538                           	opt callstack 26
  7539                           
  7540                           ;motors.c: 24:     LATAbits.LATA1 = 0;
  7541                           
  7542                           ;incstack = 0
  7543  0035EA  9289               	bcf	3977,1,c	;volatile
  7544                           
  7545                           ;motors.c: 25:     LATAbits.LATA3 = 0;
  7546  0035EC  9689               	bcf	3977,3,c	;volatile
  7547                           
  7548                           ;motors.c: 27:     LATAbits.LATA2 = 1;
  7549  0035EE  8489               	bsf	3977,2,c	;volatile
  7550  0035F0  0012               	return		;funcret
  7551  0035F2                     __end_of_DCMotorLeftFwd:
  7552                           	opt callstack 0
  7553                           
  7554 ;; *************** function _DCMotorLeftRightBkwdON *****************
  7555 ;; Defined at:
  7556 ;;		line 63 in file "motors.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;		None
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;Total ram usage:        0 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    4
  7577 ;; This function calls:
  7578 ;;		_DCMotorLeftBkwd
  7579 ;;		_DCMotorRightBkwd
  7580 ;; This function is called by:
  7581 ;;		_main
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text45
  7586  0035C8                     __ptext45:
  7587                           	opt callstack 0
  7588  0035C8                     _DCMotorLeftRightBkwdON:
  7589                           	opt callstack 26
  7590                           
  7591                           ;motors.c: 64:     DCMotorLeftBkwd();
  7592                           
  7593                           ;incstack = 0
  7594  0035C8  ECFD  F01A         	call	_DCMotorLeftBkwd	;wreg free
  7595                           
  7596                           ;motors.c: 65:     DCMotorRightBkwd();
  7597  0035CC  ECF9  F01A         	call	_DCMotorRightBkwd	;wreg free
  7598  0035D0  0012               	return		;funcret
  7599  0035D2                     __end_of_DCMotorLeftRightBkwdON:
  7600                           	opt callstack 0
  7601                           
  7602 ;; *************** function _DCMotorRightBkwd *****************
  7603 ;; Defined at:
  7604 ;;		line 41 in file "motors.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		None
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;Total ram usage:        0 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:    3
  7625 ;; This function calls:
  7626 ;;		Nothing
  7627 ;; This function is called by:
  7628 ;;		_main
  7629 ;;		_DCMotorLeftRightBkwdON
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text46
  7634  0035F2                     __ptext46:
  7635                           	opt callstack 0
  7636  0035F2                     _DCMotorRightBkwd:
  7637                           	opt callstack 27
  7638                           
  7639                           ;motors.c: 42:     LATAbits.LATA0 = 0;
  7640                           
  7641                           ;incstack = 0
  7642  0035F2  9089               	bcf	3977,0,c	;volatile
  7643                           
  7644                           ;motors.c: 43:     LATAbits.LATA2 = 0;
  7645  0035F4  9489               	bcf	3977,2,c	;volatile
  7646                           
  7647                           ;motors.c: 45:     LATAbits.LATA1 = 1;
  7648  0035F6  8289               	bsf	3977,1,c	;volatile
  7649  0035F8  0012               	return		;funcret
  7650  0035FA                     __end_of_DCMotorRightBkwd:
  7651                           	opt callstack 0
  7652                           
  7653 ;; *************** function _DCMotorLeftBkwd *****************
  7654 ;; Defined at:
  7655 ;;		line 35 in file "motors.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      void 
  7662 ;; Registers used:
  7663 ;;		None
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;Total ram usage:        0 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    3
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		_main
  7680 ;;		_DCMotorLeftRightBkwdON
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text47
  7685  0035FA                     __ptext47:
  7686                           	opt callstack 0
  7687  0035FA                     _DCMotorLeftBkwd:
  7688                           	opt callstack 26
  7689                           
  7690                           ;motors.c: 36:     LATAbits.LATA0 = 0;
  7691                           
  7692                           ;incstack = 0
  7693  0035FA  9089               	bcf	3977,0,c	;volatile
  7694                           
  7695                           ;motors.c: 37:     LATAbits.LATA2 = 0;
  7696  0035FC  9489               	bcf	3977,2,c	;volatile
  7697                           
  7698                           ;motors.c: 39:     LATAbits.LATA3 = 1;
  7699  0035FE  8689               	bsf	3977,3,c	;volatile
  7700  003600  0012               	return		;funcret
  7701  003602                     __end_of_DCMotorLeftBkwd:
  7702                           	opt callstack 0
  7703                           
  7704 ;; *************** function _DCMotorLeftOFF *****************
  7705 ;; Defined at:
  7706 ;;		line 4 in file "motors.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;		None
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  1    wreg      void 
  7713 ;; Registers used:
  7714 ;;		None
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7724 ;;Total ram usage:        0 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    3
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text48
  7735  003610                     __ptext48:
  7736                           	opt callstack 0
  7737  003610                     _DCMotorLeftOFF:
  7738                           	opt callstack 27
  7739                           
  7740                           ;motors.c: 5:     LATAbits.LATA2 = 0;
  7741                           
  7742                           ;incstack = 0
  7743  003610  9489               	bcf	3977,2,c	;volatile
  7744                           
  7745                           ;motors.c: 6:     LATAbits.LATA3 = 0;
  7746  003612  9689               	bcf	3977,3,c	;volatile
  7747  003614  0012               	return		;funcret
  7748  003616                     __end_of_DCMotorLeftOFF:
  7749                           	opt callstack 0
  7750                           
  7751 ;; *************** function _DCMotorCenterRight *****************
  7752 ;; Defined at:
  7753 ;;		line 18 in file "motors.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;		None
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1    wreg      void 
  7760 ;; Registers used:
  7761 ;;		None
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7771 ;;Total ram usage:        0 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    3
  7774 ;; This function calls:
  7775 ;;		Nothing
  7776 ;; This function is called by:
  7777 ;;		_main
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text49
  7782  003616                     __ptext49:
  7783                           	opt callstack 0
  7784  003616                     _DCMotorCenterRight:
  7785                           	opt callstack 27
  7786                           
  7787                           ;motors.c: 19:     LATAbits.LATA4 = 0;
  7788                           
  7789                           ;incstack = 0
  7790  003616  9889               	bcf	3977,4,c	;volatile
  7791                           
  7792                           ;motors.c: 20:     LATAbits.LATA5 = 1;
  7793  003618  8A89               	bsf	3977,5,c	;volatile
  7794  00361A  0012               	return		;funcret
  7795  00361C                     __end_of_DCMotorCenterRight:
  7796                           	opt callstack 0
  7797                           
  7798 ;; *************** function _DCMotorCenterLeft *****************
  7799 ;; Defined at:
  7800 ;;		line 13 in file "motors.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		None
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used:    1
  7820 ;; Hardware stack levels required when called:    3
  7821 ;; This function calls:
  7822 ;;		Nothing
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text50
  7829  00361C                     __ptext50:
  7830                           	opt callstack 0
  7831  00361C                     _DCMotorCenterLeft:
  7832                           	opt callstack 27
  7833                           
  7834                           ;motors.c: 14:     LATAbits.LATA5 = 0;
  7835                           
  7836                           ;incstack = 0
  7837  00361C  9A89               	bcf	3977,5,c	;volatile
  7838                           
  7839                           ;motors.c: 15:     LATAbits.LATA4 = 1;
  7840  00361E  8889               	bsf	3977,4,c	;volatile
  7841  003620  0012               	return		;funcret
  7842  003622                     __end_of_DCMotorCenterLeft:
  7843                           	opt callstack 0
  7844                           
  7845 ;; *************** function _DCMotorAllOff *****************
  7846 ;; Defined at:
  7847 ;;		line 47 in file "motors.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		None
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;Total ram usage:        0 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    3
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_main
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text51
  7876  00358E                     __ptext51:
  7877                           	opt callstack 0
  7878  00358E                     _DCMotorAllOff:
  7879                           	opt callstack 27
  7880                           
  7881                           ;motors.c: 48:     LATAbits.LATA0 = 0;
  7882                           
  7883                           ;incstack = 0
  7884  00358E  9089               	bcf	3977,0,c	;volatile
  7885                           
  7886                           ;motors.c: 49:     LATAbits.LATA2 = 0;
  7887  003590  9489               	bcf	3977,2,c	;volatile
  7888                           
  7889                           ;motors.c: 51:     LATAbits.LATA1 = 0;
  7890  003592  9289               	bcf	3977,1,c	;volatile
  7891                           
  7892                           ;motors.c: 52:     LATAbits.LATA3 = 0;
  7893  003594  9689               	bcf	3977,3,c	;volatile
  7894                           
  7895                           ;motors.c: 54:     LATAbits.LATA4 = 0;
  7896  003596  9889               	bcf	3977,4,c	;volatile
  7897                           
  7898                           ;motors.c: 55:     LATAbits.LATA5 = 0;
  7899  003598  9A89               	bcf	3977,5,c	;volatile
  7900  00359A  0012               	return		;funcret
  7901  00359C                     __end_of_DCMotorAllOff:
  7902                           	opt callstack 0
  7903                           
  7904 ;; *************** function _high_isr *****************
  7905 ;; Defined at:
  7906 ;;		line 298 in file "main.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7924 ;;Total ram usage:        2 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    2
  7927 ;; This function calls:
  7928 ;;		i2___fladd
  7929 ;;		i2___flsub
  7930 ;; This function is called by:
  7931 ;;		Interrupt level 2
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	intcode
  7936  000008                     __pintcode:
  7937                           	opt callstack 0
  7938  000008                     _high_isr:
  7939                           	opt callstack 17
  7940                           
  7941                           ;incstack = 0
  7942  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7943  00000A  EDEB  F013         	call	int_func,f	;refresh shadow registers
  7944                           
  7945                           	psect	intcode_body
  7946  0027D6                     __pintcode_body:
  7947                           	opt callstack 17
  7948  0027D6                     int_func:
  7949                           	opt callstack 17
  7950  0027D6  0006               	pop		; remove dummy address from shadow register refresh
  7951  0027D8  CFD9 F019          	movff	fsr2l,??_high_isr
  7952  0027DC  CFDA F01A          	movff	fsr2h,??_high_isr+1
  7953                           
  7954                           ;main.c: 299:     (INTCONbits.GIE = 0);
  7955  0027E0  9EF2               	bcf	4082,7,c	;volatile
  7956                           
  7957                           ;main.c: 301:     if (INT0IE && INT0IF){
  7958  0027E2  B8F2               	btfsc	4082,4,c	;volatile
  7959  0027E4  A2F2               	btfss	4082,1,c	;volatile
  7960  0027E6  D038               	goto	i2l4720
  7961                           
  7962                           ;main.c: 302:         if(PORTDbits.RD0){
  7963  0027E8  A083               	btfss	3971,0,c	;volatile
  7964  0027EA  D01B               	goto	i2l4716
  7965                           
  7966                           ;main.c: 303:             tickL++;
  7967  0027EC  C0F3  F001         	movff	_tickL,i2___fladd@b	;volatile
  7968  0027F0  C0F4  F002         	movff	_tickL+1,i2___fladd@b+1	;volatile
  7969  0027F4  C0F5  F003         	movff	_tickL+2,i2___fladd@b+2	;volatile
  7970  0027F8  C0F6  F004         	movff	_tickL+3,i2___fladd@b+3	;volatile
  7971  0027FC  0E00               	movlw	0
  7972  0027FE  6E05               	movwf	i2___fladd@a,c
  7973  002800  0E00               	movlw	0
  7974  002802  6E06               	movwf	i2___fladd@a+1,c
  7975  002804  0E80               	movlw	128
  7976  002806  6E07               	movwf	i2___fladd@a+2,c
  7977  002808  0E3F               	movlw	63
  7978  00280A  6E08               	movwf	i2___fladd@a+3,c
  7979  00280C  EC21  F011         	call	i2___fladd	;wreg free
  7980  002810  C001  F0F3         	movff	?i2___fladd,_tickL	;volatile
  7981  002814  C002  F0F4         	movff	?i2___fladd+1,_tickL+1	;volatile
  7982  002818  C003  F0F5         	movff	?i2___fladd+2,_tickL+2	;volatile
  7983  00281C  C004  F0F6         	movff	?i2___fladd+3,_tickL+3	;volatile
  7984                           
  7985                           ;main.c: 304:         }else{
  7986  002820  D01A               	goto	i2l4718
  7987  002822                     i2l4716:
  7988                           
  7989                           ;main.c: 305:             tickL--;
  7990  002822  C0F3  F011         	movff	_tickL,i2___flsub@b	;volatile
  7991  002826  C0F4  F012         	movff	_tickL+1,i2___flsub@b+1	;volatile
  7992  00282A  C0F5  F013         	movff	_tickL+2,i2___flsub@b+2	;volatile
  7993  00282E  C0F6  F014         	movff	_tickL+3,i2___flsub@b+3	;volatile
  7994  002832  0E00               	movlw	0
  7995  002834  6E15               	movwf	i2___flsub@a,c
  7996  002836  0E00               	movlw	0
  7997  002838  6E16               	movwf	i2___flsub@a+1,c
  7998  00283A  0E80               	movlw	128
  7999  00283C  6E17               	movwf	i2___flsub@a+2,c
  8000  00283E  0E3F               	movlw	63
  8001  002840  6E18               	movwf	i2___flsub@a+3,c
  8002  002842  ECAF  F019         	call	i2___flsub	;wreg free
  8003  002846  C011  F0F3         	movff	?i2___flsub,_tickL	;volatile
  8004  00284A  C012  F0F4         	movff	?i2___flsub+1,_tickL+1	;volatile
  8005  00284E  C013  F0F5         	movff	?i2___flsub+2,_tickL+2	;volatile
  8006  002852  C014  F0F6         	movff	?i2___flsub+3,_tickL+3	;volatile
  8007  002856                     i2l4718:
  8008                           
  8009                           ;main.c: 307:         INT0IF = 0;
  8010  002856  92F2               	bcf	4082,1,c	;volatile
  8011  002858                     i2l4720:
  8012                           
  8013                           ;main.c: 310:     if (INT2IE && INT2IF){
  8014  002858  B8F0               	btfsc	4080,4,c	;volatile
  8015  00285A  A2F0               	btfss	4080,1,c	;volatile
  8016  00285C  D038               	goto	i2l4732
  8017                           
  8018                           ;main.c: 311:         if(PORTDbits.RD1){
  8019  00285E  A283               	btfss	3971,1,c	;volatile
  8020  002860  D01B               	goto	i2l4728
  8021                           
  8022                           ;main.c: 312:             tickR++;
  8023  002862  C0EF  F001         	movff	_tickR,i2___fladd@b	;volatile
  8024  002866  C0F0  F002         	movff	_tickR+1,i2___fladd@b+1	;volatile
  8025  00286A  C0F1  F003         	movff	_tickR+2,i2___fladd@b+2	;volatile
  8026  00286E  C0F2  F004         	movff	_tickR+3,i2___fladd@b+3	;volatile
  8027  002872  0E00               	movlw	0
  8028  002874  6E05               	movwf	i2___fladd@a,c
  8029  002876  0E00               	movlw	0
  8030  002878  6E06               	movwf	i2___fladd@a+1,c
  8031  00287A  0E80               	movlw	128
  8032  00287C  6E07               	movwf	i2___fladd@a+2,c
  8033  00287E  0E3F               	movlw	63
  8034  002880  6E08               	movwf	i2___fladd@a+3,c
  8035  002882  EC21  F011         	call	i2___fladd	;wreg free
  8036  002886  C001  F0EF         	movff	?i2___fladd,_tickR	;volatile
  8037  00288A  C002  F0F0         	movff	?i2___fladd+1,_tickR+1	;volatile
  8038  00288E  C003  F0F1         	movff	?i2___fladd+2,_tickR+2	;volatile
  8039  002892  C004  F0F2         	movff	?i2___fladd+3,_tickR+3	;volatile
  8040                           
  8041                           ;main.c: 313:         }else{
  8042  002896  D01A               	goto	i2l4730
  8043  002898                     i2l4728:
  8044                           
  8045                           ;main.c: 314:             tickR--;
  8046  002898  C0EF  F011         	movff	_tickR,i2___flsub@b	;volatile
  8047  00289C  C0F0  F012         	movff	_tickR+1,i2___flsub@b+1	;volatile
  8048  0028A0  C0F1  F013         	movff	_tickR+2,i2___flsub@b+2	;volatile
  8049  0028A4  C0F2  F014         	movff	_tickR+3,i2___flsub@b+3	;volatile
  8050  0028A8  0E00               	movlw	0
  8051  0028AA  6E15               	movwf	i2___flsub@a,c
  8052  0028AC  0E00               	movlw	0
  8053  0028AE  6E16               	movwf	i2___flsub@a+1,c
  8054  0028B0  0E80               	movlw	128
  8055  0028B2  6E17               	movwf	i2___flsub@a+2,c
  8056  0028B4  0E3F               	movlw	63
  8057  0028B6  6E18               	movwf	i2___flsub@a+3,c
  8058  0028B8  ECAF  F019         	call	i2___flsub	;wreg free
  8059  0028BC  C011  F0EF         	movff	?i2___flsub,_tickR	;volatile
  8060  0028C0  C012  F0F0         	movff	?i2___flsub+1,_tickR+1	;volatile
  8061  0028C4  C013  F0F1         	movff	?i2___flsub+2,_tickR+2	;volatile
  8062  0028C8  C014  F0F2         	movff	?i2___flsub+3,_tickR+3	;volatile
  8063  0028CC                     i2l4730:
  8064                           
  8065                           ;main.c: 316:         INT2IF = 0;
  8066  0028CC  92F0               	bcf	4080,1,c	;volatile
  8067  0028CE                     i2l4732:
  8068                           
  8069                           ;main.c: 319:     if(INT1IF && INT1IE){
  8070  0028CE  B0F0               	btfsc	4080,0,c	;volatile
  8071  0028D0  A6F0               	btfss	4080,3,c	;volatile
  8072  0028D2  D004               	goto	i2l4740
  8073                           
  8074                           ;main.c: 322:         key_was_pressed = 1;
  8075  0028D4  0E01               	movlw	1
  8076  0028D6  0100               	movlb	0	; () banked
  8077  0028D8  6FFB               	movwf	_key_was_pressed& (0+255),b	;volatile
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;main.c: 323:         INT1IF = 0;
  8081  0028DA  90F0               	bcf	4080,0,c	;volatile
  8082  0028DC                     i2l4740:
  8083                           
  8084                           ;main.c: 325:      if(RCIE && RCIF){
  8085  0028DC  BA9D               	btfsc	3997,5,c	;volatile
  8086  0028DE  AA9E               	btfss	3998,5,c	;volatile
  8087  0028E0  D00C               	goto	i2l4750
  8088                           
  8089                           ;main.c: 326:         _rx_buffer[_rx_buffer_head] = RCREG;
  8090  0028E2  0E40               	movlw	low __rx_buffer
  8091  0028E4  245D               	addwf	__rx_buffer_head,w,c	;volatile
  8092  0028E6  6ED9               	movwf	fsr2l,c
  8093  0028E8  6ADA               	clrf	fsr2h,c
  8094  0028EA  0E01               	movlw	high __rx_buffer
  8095  0028EC  22DA               	addwfc	fsr2h,f,c
  8096  0028EE  CFAE FFDF          	movff	4014,indf2	;volatile
  8097                           
  8098                           ;main.c: 327:         _rx_buffer_head = (unsigned char)(_rx_buffer_head + 1) % 64;
  8099  0028F2  285D               	incf	__rx_buffer_head,w,c	;volatile
  8100  0028F4  0B3F               	andlw	63
  8101  0028F6  6E5D               	movwf	__rx_buffer_head,c	;volatile
  8102                           
  8103                           ;main.c: 328:         RCIF = 0;
  8104  0028F8  9A9E               	bcf	3998,5,c	;volatile
  8105  0028FA                     i2l4750:
  8106                           
  8107                           ;main.c: 330:     if(TXIE && TXIF){
  8108  0028FA  B89D               	btfsc	3997,4,c	;volatile
  8109  0028FC  A89E               	btfss	3998,4,c	;volatile
  8110  0028FE  D013               	goto	i2l320
  8111                           
  8112                           ;main.c: 331:         if((_tx_buffer_tail != _tx_buffer_head)){
  8113  002900  505B               	movf	__tx_buffer_head,w,c	;volatile
  8114  002902  185A               	xorwf	__tx_buffer_tail,w,c	;volatile
  8115  002904  B4D8               	btfsc	status,2,c
  8116  002906  D00D               	goto	i2l321
  8117                           
  8118                           ;main.c: 332:             TXREG = _tx_buffer[_tx_buffer_tail];
  8119  002908  0E00               	movlw	low __tx_buffer
  8120  00290A  245A               	addwf	__tx_buffer_tail,w,c	;volatile
  8121  00290C  6ED9               	movwf	fsr2l,c
  8122  00290E  6ADA               	clrf	fsr2h,c
  8123  002910  0E01               	movlw	high __tx_buffer
  8124  002912  22DA               	addwfc	fsr2h,f,c
  8125  002914  50DF               	movf	indf2,w,c
  8126  002916  6EAD               	movwf	4013,c	;volatile
  8127                           
  8128                           ;main.c: 333:             _tx_buffer_tail = (unsigned char)(_tx_buffer_tail + 1) % 64;
  8129  002918  285A               	incf	__tx_buffer_tail,w,c	;volatile
  8130  00291A  0B3F               	andlw	63
  8131  00291C  6E5A               	movwf	__tx_buffer_tail,c	;volatile
  8132                           
  8133                           ;main.c: 334:             TXIF = 0;
  8134  00291E  989E               	bcf	3998,4,c	;volatile
  8135                           
  8136                           ;main.c: 335:         }else{
  8137  002920  D002               	goto	i2l320
  8138  002922                     i2l321:
  8139                           
  8140                           ;main.c: 336:             TXIF = 0;
  8141  002922  989E               	bcf	3998,4,c	;volatile
  8142                           
  8143                           ;main.c: 337:             TXIE = 0;
  8144  002924  989D               	bcf	3997,4,c	;volatile
  8145  002926                     i2l320:
  8146                           
  8147                           ;main.c: 341:     (INTCONbits.GIE = 1);
  8148  002926  8EF2               	bsf	4082,7,c	;volatile
  8149  002928  C01A  FFDA         	movff	??_high_isr+1,fsr2h
  8150  00292C  C019  FFD9         	movff	??_high_isr,fsr2l
  8151  002930  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8152  002932  0011               	retfie		f
  8153  002934                     __end_of_high_isr:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function i2___flsub *****************
  8157 ;; Defined at:
  8158 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  b               4   16[COMRAM] void 
  8161 ;;  a               4   20[COMRAM] void 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  4   16[COMRAM] void 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0, cstack
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8173 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;Total ram usage:        8 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    1
  8180 ;; This function calls:
  8181 ;;		i2___fladd
  8182 ;; This function is called by:
  8183 ;;		_high_isr
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text53
  8188  00335E                     __ptext53:
  8189                           	opt callstack 0
  8190  00335E                     i2___flsub:
  8191                           	opt callstack 17
  8192                           
  8193                           ;incstack = 0
  8194  00335E  0E00               	movlw	0
  8195  003360  1A15               	xorwf	i2___flsub@a,f,c
  8196  003362  0E00               	movlw	0
  8197  003364  1A16               	xorwf	i2___flsub@a+1,f,c
  8198  003366  0E00               	movlw	0
  8199  003368  1A17               	xorwf	i2___flsub@a+2,f,c
  8200  00336A  0E80               	movlw	128
  8201  00336C  1A18               	xorwf	i2___flsub@a+3,f,c
  8202  00336E  C011  F001         	movff	i2___flsub@b,i2___fladd@b
  8203  003372  C012  F002         	movff	i2___flsub@b+1,i2___fladd@b+1
  8204  003376  C013  F003         	movff	i2___flsub@b+2,i2___fladd@b+2
  8205  00337A  C014  F004         	movff	i2___flsub@b+3,i2___fladd@b+3
  8206  00337E  C015  F005         	movff	i2___flsub@a,i2___fladd@a
  8207  003382  C016  F006         	movff	i2___flsub@a+1,i2___fladd@a+1
  8208  003386  C017  F007         	movff	i2___flsub@a+2,i2___fladd@a+2
  8209  00338A  C018  F008         	movff	i2___flsub@a+3,i2___fladd@a+3
  8210  00338E  EC21  F011         	call	i2___fladd	;wreg free
  8211  003392  C001  F011         	movff	?i2___fladd,?i2___flsub
  8212  003396  C002  F012         	movff	?i2___fladd+1,?i2___flsub+1
  8213  00339A  C003  F013         	movff	?i2___fladd+2,?i2___flsub+2
  8214  00339E  C004  F014         	movff	?i2___fladd+3,?i2___flsub+3
  8215  0033A2  0012               	return		;funcret
  8216  0033A4                     __end_ofi2___flsub:
  8217                           	opt callstack 0
  8218                           
  8219 ;; *************** function i2___fladd *****************
  8220 ;; Defined at:
  8221 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  b               4    0[COMRAM] void 
  8224 ;;  a               4    4[COMRAM] void 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  __fladd         1   15[COMRAM] unsigned char 
  8227 ;;  __fladd         1   14[COMRAM] unsigned char 
  8228 ;;  __fladd         1   13[COMRAM] unsigned char 
  8229 ;;  __fladd         1   12[COMRAM] unsigned char 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  4    0[COMRAM] unsigned char 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8239 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;Total ram usage:       16 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; This function calls:
  8246 ;;		Nothing
  8247 ;; This function is called by:
  8248 ;;		_high_isr
  8249 ;;		i2___flsub
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text54
  8254  002242                     __ptext54:
  8255                           	opt callstack 0
  8256  002242                     i2___fladd:
  8257                           	opt callstack 17
  8258                           
  8259                           ;incstack = 0
  8260  002242  5004               	movf	i2___fladd@b+3,w,c
  8261  002244  0B80               	andlw	128
  8262  002246  6E0D               	movwf	i2___fladd@signs,c
  8263  002248  5004               	movf	i2___fladd@b+3,w,c
  8264  00224A  2404               	addwf	i2___fladd@b+3,w,c
  8265  00224C  6E0F               	movwf	i2___fladd@bexp,c
  8266  00224E  BE03               	btfsc	i2___fladd@b+2,7,c
  8267  002250  800F               	bsf	i2___fladd@bexp,0,c
  8268  002252  500F               	movf	i2___fladd@bexp,w,c
  8269  002254  B4D8               	btfsc	status,2,c
  8270  002256  D00D               	goto	i2l3740
  8271  002258  280F               	incf	i2___fladd@bexp,w,c
  8272  00225A  A4D8               	btfss	status,2,c
  8273  00225C  D008               	goto	i2l3736
  8274  00225E  0E00               	movlw	0
  8275  002260  6E01               	movwf	i2___fladd@b,c
  8276  002262  0E00               	movlw	0
  8277  002264  6E02               	movwf	i2___fladd@b+1,c
  8278  002266  0E00               	movlw	0
  8279  002268  6E03               	movwf	i2___fladd@b+2,c
  8280  00226A  0E00               	movlw	0
  8281  00226C  6E04               	movwf	i2___fladd@b+3,c
  8282  00226E                     i2l3736:
  8283  00226E  8E03               	bsf	i2___fladd@b+2,7,c
  8284  002270  D006               	goto	L7
  8285  002272                     i2l3740:
  8286  002272  0E00               	movlw	0
  8287  002274  6E01               	movwf	i2___fladd@b,c
  8288  002276  0E00               	movlw	0
  8289  002278  6E02               	movwf	i2___fladd@b+1,c
  8290  00227A  0E00               	movlw	0
  8291  00227C  6E03               	movwf	i2___fladd@b+2,c
  8292  00227E                     L7:
  8293  00227E  0E00               	movlw	0
  8294  002280  6E04               	movwf	i2___fladd@b+3,c
  8295  002282  5008               	movf	i2___fladd@a+3,w,c
  8296  002284  0B80               	andlw	128
  8297  002286  6E0E               	movwf	i2___fladd@aexp,c
  8298  002288  500D               	movf	i2___fladd@signs,w,c
  8299  00228A  180E               	xorwf	i2___fladd@aexp,w,c
  8300  00228C  A4D8               	btfss	status,2,c
  8301  00228E  8C0D               	bsf	i2___fladd@signs,6,c
  8302  002290  5008               	movf	i2___fladd@a+3,w,c
  8303  002292  2408               	addwf	i2___fladd@a+3,w,c
  8304  002294  6E0E               	movwf	i2___fladd@aexp,c
  8305  002296  BE07               	btfsc	i2___fladd@a+2,7,c
  8306  002298  800E               	bsf	i2___fladd@aexp,0,c
  8307  00229A  500E               	movf	i2___fladd@aexp,w,c
  8308  00229C  B4D8               	btfsc	status,2,c
  8309  00229E  D00D               	goto	i2l3764
  8310  0022A0  280E               	incf	i2___fladd@aexp,w,c
  8311  0022A2  A4D8               	btfss	status,2,c
  8312  0022A4  D008               	goto	i2l3760
  8313  0022A6  0E00               	movlw	0
  8314  0022A8  6E05               	movwf	i2___fladd@a,c
  8315  0022AA  0E00               	movlw	0
  8316  0022AC  6E06               	movwf	i2___fladd@a+1,c
  8317  0022AE  0E00               	movlw	0
  8318  0022B0  6E07               	movwf	i2___fladd@a+2,c
  8319  0022B2  0E00               	movlw	0
  8320  0022B4  6E08               	movwf	i2___fladd@a+3,c
  8321  0022B6                     i2l3760:
  8322  0022B6  8E07               	bsf	i2___fladd@a+2,7,c
  8323  0022B8  D006               	goto	L8
  8324  0022BA                     i2l3764:
  8325  0022BA  0E00               	movlw	0
  8326  0022BC  6E05               	movwf	i2___fladd@a,c
  8327  0022BE  0E00               	movlw	0
  8328  0022C0  6E06               	movwf	i2___fladd@a+1,c
  8329  0022C2  0E00               	movlw	0
  8330  0022C4  6E07               	movwf	i2___fladd@a+2,c
  8331  0022C6                     L8:
  8332  0022C6  0E00               	movlw	0
  8333  0022C8  6E08               	movwf	i2___fladd@a+3,c
  8334  0022CA  500F               	movf	i2___fladd@bexp,w,c
  8335  0022CC  5C0E               	subwf	i2___fladd@aexp,w,c
  8336  0022CE  B0D8               	btfsc	status,0,c
  8337  0022D0  D022               	goto	i2l3802
  8338  0022D2  AC0D               	btfss	i2___fladd@signs,6,c
  8339  0022D4  D002               	goto	i2l3772
  8340  0022D6  0E80               	movlw	128
  8341  0022D8  1A0D               	xorwf	i2___fladd@signs,f,c
  8342  0022DA                     i2l3772:
  8343  0022DA  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
  8344  0022DE  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
  8345  0022E2  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
  8346  0022E6  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
  8347  0022EA  C005  F001         	movff	i2___fladd@a,i2___fladd@b
  8348  0022EE  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
  8349  0022F2  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
  8350  0022F6  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
  8351  0022FA  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
  8352  0022FE  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
  8353  002302  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
  8354  002306  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
  8355  00230A  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
  8356  00230E  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
  8357  002312  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
  8358  002316                     i2l3802:
  8359  002316  0E00               	movlw	0
  8360  002318  6E10               	movwf	i2___fladd@grs,c
  8361  00231A  500F               	movf	i2___fladd@bexp,w,c
  8362  00231C  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
  8363  002320  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
  8364  002322  5E09               	subwf	??i2___fladd,f,c
  8365  002324  0E00               	movlw	0
  8366  002326  5A0A               	subwfb	??i2___fladd+1,f,c
  8367  002328  BE0A               	btfsc	??i2___fladd+1,7,c
  8368  00232A  D02C               	goto	i2l1072
  8369  00232C  500A               	movf	??i2___fladd+1,w,c
  8370  00232E  E104               	bnz	i2u349_40
  8371  002330  0E1A               	movlw	26
  8372  002332  5C09               	subwf	??i2___fladd,w,c
  8373  002334  A0D8               	btfss	status,0,c
  8374  002336  D026               	goto	i2l1072
  8375  002338                     i2u349_40:
  8376  002338  5001               	movf	i2___fladd@b,w,c
  8377  00233A  1002               	iorwf	i2___fladd@b+1,w,c
  8378  00233C  1003               	iorwf	i2___fladd@b+2,w,c
  8379  00233E  1004               	iorwf	i2___fladd@b+3,w,c
  8380  002340  B4D8               	btfsc	status,2,c
  8381  002342  D002               	goto	i2u350_40
  8382  002344  0E01               	movlw	1
  8383  002346  D001               	goto	i2u351_40
  8384  002348                     i2u350_40:
  8385  002348  0E00               	movlw	0
  8386  00234A                     i2u351_40:
  8387  00234A  6E10               	movwf	i2___fladd@grs,c
  8388  00234C  0E00               	movlw	0
  8389  00234E  6E01               	movwf	i2___fladd@b,c
  8390  002350  0E00               	movlw	0
  8391  002352  6E02               	movwf	i2___fladd@b+1,c
  8392  002354  0E00               	movlw	0
  8393  002356  6E03               	movwf	i2___fladd@b+2,c
  8394  002358  0E00               	movlw	0
  8395  00235A  6E04               	movwf	i2___fladd@b+3,c
  8396  00235C  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
  8397  002360  D015               	goto	i2u354_40
  8398  002362                     i2l1073:
  8399  002362  A010               	btfss	i2___fladd@grs,0,c
  8400  002364  D005               	goto	i2l3814
  8401  002366  90D8               	bcf	status,0,c
  8402  002368  3010               	rrcf	i2___fladd@grs,w,c
  8403  00236A  0901               	iorlw	1
  8404  00236C  6E10               	movwf	i2___fladd@grs,c
  8405  00236E  D002               	goto	i2l3816
  8406  002370                     i2l3814:
  8407  002370  90D8               	bcf	status,0,c
  8408  002372  3210               	rrcf	i2___fladd@grs,f,c
  8409  002374                     i2l3816:
  8410  002374  B001               	btfsc	i2___fladd@b,0,c
  8411  002376  8E10               	bsf	i2___fladd@grs,7,c
  8412  002378  3404               	rlcf	i2___fladd@b+3,w,c
  8413  00237A  3204               	rrcf	i2___fladd@b+3,f,c
  8414  00237C  3203               	rrcf	i2___fladd@b+2,f,c
  8415  00237E  3202               	rrcf	i2___fladd@b+1,f,c
  8416  002380  3201               	rrcf	i2___fladd@b,f,c
  8417  002382  2A0F               	incf	i2___fladd@bexp,f,c
  8418  002384                     i2l1072:
  8419  002384  500E               	movf	i2___fladd@aexp,w,c
  8420  002386  5C0F               	subwf	i2___fladd@bexp,w,c
  8421  002388  A0D8               	btfss	status,0,c
  8422  00238A  D7EB               	goto	i2l1073
  8423  00238C                     i2u354_40:
  8424  00238C  BC0D               	btfsc	i2___fladd@signs,6,c
  8425  00238E  D028               	goto	i2l3848
  8426  002390  500F               	movf	i2___fladd@bexp,w,c
  8427  002392  A4D8               	btfss	status,2,c
  8428  002394  D009               	goto	i2l3830
  8429  002396  0E00               	movlw	0
  8430  002398  6E01               	movwf	?i2___fladd,c
  8431  00239A  0E00               	movlw	0
  8432  00239C  6E02               	movwf	?i2___fladd+1,c
  8433  00239E  0E00               	movlw	0
  8434  0023A0  6E03               	movwf	?i2___fladd+2,c
  8435  0023A2  0E00               	movlw	0
  8436  0023A4  6E04               	movwf	?i2___fladd+3,c
  8437  0023A6  0012               	return	
  8438  0023A8                     i2l3830:
  8439  0023A8  5005               	movf	i2___fladd@a,w,c
  8440  0023AA  2601               	addwf	i2___fladd@b,f,c
  8441  0023AC  5006               	movf	i2___fladd@a+1,w,c
  8442  0023AE  2202               	addwfc	i2___fladd@b+1,f,c
  8443  0023B0  5007               	movf	i2___fladd@a+2,w,c
  8444  0023B2  2203               	addwfc	i2___fladd@b+2,f,c
  8445  0023B4  5008               	movf	i2___fladd@a+3,w,c
  8446  0023B6  2204               	addwfc	i2___fladd@b+3,f,c
  8447  0023B8  A004               	btfss	i2___fladd@b+3,0,c
  8448  0023BA  D071               	goto	i2u367_40
  8449  0023BC  A010               	btfss	i2___fladd@grs,0,c
  8450  0023BE  D005               	goto	i2l3838
  8451  0023C0  90D8               	bcf	status,0,c
  8452  0023C2  3010               	rrcf	i2___fladd@grs,w,c
  8453  0023C4  0901               	iorlw	1
  8454  0023C6  6E10               	movwf	i2___fladd@grs,c
  8455  0023C8  D002               	goto	i2l3840
  8456  0023CA                     i2l3838:
  8457  0023CA  90D8               	bcf	status,0,c
  8458  0023CC  3210               	rrcf	i2___fladd@grs,f,c
  8459  0023CE                     i2l3840:
  8460  0023CE  B001               	btfsc	i2___fladd@b,0,c
  8461  0023D0  8E10               	bsf	i2___fladd@grs,7,c
  8462  0023D2  3404               	rlcf	i2___fladd@b+3,w,c
  8463  0023D4  3204               	rrcf	i2___fladd@b+3,f,c
  8464  0023D6  3203               	rrcf	i2___fladd@b+2,f,c
  8465  0023D8  3202               	rrcf	i2___fladd@b+1,f,c
  8466  0023DA  3201               	rrcf	i2___fladd@b,f,c
  8467  0023DC  2A0F               	incf	i2___fladd@bexp,f,c
  8468  0023DE  D05F               	goto	i2u367_40
  8469  0023E0                     i2l3848:
  8470  0023E0  5005               	movf	i2___fladd@a,w,c
  8471  0023E2  5C01               	subwf	i2___fladd@b,w,c
  8472  0023E4  5006               	movf	i2___fladd@a+1,w,c
  8473  0023E6  5802               	subwfb	i2___fladd@b+1,w,c
  8474  0023E8  5007               	movf	i2___fladd@a+2,w,c
  8475  0023EA  5803               	subwfb	i2___fladd@b+2,w,c
  8476  0023EC  5004               	movf	i2___fladd@b+3,w,c
  8477  0023EE  0A80               	xorlw	128
  8478  0023F0  6E09               	movwf	??i2___fladd& (0+255),c
  8479  0023F2  5008               	movf	i2___fladd@a+3,w,c
  8480  0023F4  0A80               	xorlw	128
  8481  0023F6  5809               	subwfb	??i2___fladd& (0+255),w,c
  8482  0023F8  B0D8               	btfsc	status,0,c
  8483  0023FA  D025               	goto	i2l3858
  8484  0023FC  5001               	movf	i2___fladd@b,w,c
  8485  0023FE  5C05               	subwf	i2___fladd@a,w,c
  8486  002400  6E09               	movwf	??i2___fladd& (0+255),c
  8487  002402  5002               	movf	i2___fladd@b+1,w,c
  8488  002404  5806               	subwfb	i2___fladd@a+1,w,c
  8489  002406  6E0A               	movwf	(??i2___fladd+1)& (0+255),c
  8490  002408  5003               	movf	i2___fladd@b+2,w,c
  8491  00240A  5807               	subwfb	i2___fladd@a+2,w,c
  8492  00240C  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
  8493  00240E  5004               	movf	i2___fladd@b+3,w,c
  8494  002410  5808               	subwfb	i2___fladd@a+3,w,c
  8495  002412  6E0C               	movwf	(??i2___fladd+3)& (0+255),c
  8496  002414  0EFF               	movlw	255
  8497  002416  2409               	addwf	??i2___fladd,w,c
  8498  002418  6E01               	movwf	i2___fladd@b,c
  8499  00241A  0EFF               	movlw	255
  8500  00241C  200A               	addwfc	??i2___fladd+1,w,c
  8501  00241E  6E02               	movwf	i2___fladd@b+1,c
  8502  002420  0EFF               	movlw	255
  8503  002422  200B               	addwfc	??i2___fladd+2,w,c
  8504  002424  6E03               	movwf	i2___fladd@b+2,c
  8505  002426  0EFF               	movlw	255
  8506  002428  200C               	addwfc	??i2___fladd+3,w,c
  8507  00242A  6E04               	movwf	i2___fladd@b+3,c
  8508  00242C  0E80               	movlw	128
  8509  00242E  1A0D               	xorwf	i2___fladd@signs,f,c
  8510  002430  6C10               	negf	i2___fladd@grs,c
  8511  002432  5010               	movf	i2___fladd@grs,w,c
  8512  002434  A4D8               	btfss	status,2,c
  8513  002436  D00F               	goto	i2l1088
  8514  002438  0E01               	movlw	1
  8515  00243A  2601               	addwf	i2___fladd@b,f,c
  8516  00243C  0E00               	movlw	0
  8517  00243E  2202               	addwfc	i2___fladd@b+1,f,c
  8518  002440  2203               	addwfc	i2___fladd@b+2,f,c
  8519  002442  2204               	addwfc	i2___fladd@b+3,f,c
  8520  002444  D008               	goto	i2l1088
  8521  002446                     i2l3858:
  8522  002446  5005               	movf	i2___fladd@a,w,c
  8523  002448  5E01               	subwf	i2___fladd@b,f,c
  8524  00244A  5006               	movf	i2___fladd@a+1,w,c
  8525  00244C  5A02               	subwfb	i2___fladd@b+1,f,c
  8526  00244E  5007               	movf	i2___fladd@a+2,w,c
  8527  002450  5A03               	subwfb	i2___fladd@b+2,f,c
  8528  002452  5008               	movf	i2___fladd@a+3,w,c
  8529  002454  5A04               	subwfb	i2___fladd@b+3,f,c
  8530  002456                     i2l1088:
  8531  002456  5001               	movf	i2___fladd@b,w,c
  8532  002458  1002               	iorwf	i2___fladd@b+1,w,c
  8533  00245A  1003               	iorwf	i2___fladd@b+2,w,c
  8534  00245C  1004               	iorwf	i2___fladd@b+3,w,c
  8535  00245E  A4D8               	btfss	status,2,c
  8536  002460  D01C               	goto	i2l3882
  8537  002462  5010               	movf	i2___fladd@grs,w,c
  8538  002464  A4D8               	btfss	status,2,c
  8539  002466  D019               	goto	i2l3882
  8540  002468  0E00               	movlw	0
  8541  00246A  6E01               	movwf	?i2___fladd,c
  8542  00246C  0E00               	movlw	0
  8543  00246E  6E02               	movwf	?i2___fladd+1,c
  8544  002470  0E00               	movlw	0
  8545  002472  6E03               	movwf	?i2___fladd+2,c
  8546  002474  0E00               	movlw	0
  8547  002476  6E04               	movwf	?i2___fladd+3,c
  8548  002478  0012               	return	
  8549  00247A                     i2l3866:
  8550  00247A  90D8               	bcf	status,0,c
  8551  00247C  3601               	rlcf	i2___fladd@b,f,c
  8552  00247E  3602               	rlcf	i2___fladd@b+1,f,c
  8553  002480  3603               	rlcf	i2___fladd@b+2,f,c
  8554  002482  3604               	rlcf	i2___fladd@b+3,f,c
  8555  002484  BE10               	btfsc	i2___fladd@grs,7,c
  8556  002486  8001               	bsf	i2___fladd@b,0,c
  8557  002488  A010               	btfss	i2___fladd@grs,0,c
  8558  00248A  D002               	goto	i2l3876
  8559  00248C  80D8               	bsf	status,0,c
  8560  00248E  D001               	goto	L9
  8561  002490                     i2l3876:
  8562  002490  90D8               	bcf	status,0,c
  8563  002492                     L9:
  8564  002492  3610               	rlcf	i2___fladd@grs,f,c
  8565  002494  500F               	movf	i2___fladd@bexp,w,c
  8566  002496  A4D8               	btfss	status,2,c
  8567  002498  060F               	decf	i2___fladd@bexp,f,c
  8568  00249A                     i2l3882:
  8569  00249A  AE03               	btfss	i2___fladd@b+2,7,c
  8570  00249C  D7EE               	goto	i2l3866
  8571  00249E                     i2u367_40:
  8572  00249E  0E00               	movlw	0
  8573  0024A0  6E0E               	movwf	i2___fladd@aexp,c
  8574  0024A2  AE10               	btfss	i2___fladd@grs,7,c
  8575  0024A4  D00B               	goto	i2l1097
  8576  0024A6  C010  F009         	movff	i2___fladd@grs,??i2___fladd
  8577  0024AA  0E7F               	movlw	127
  8578  0024AC  1609               	andwf	??i2___fladd,f,c
  8579  0024AE  B4D8               	btfsc	status,2,c
  8580  0024B0  D003               	goto	i2l1098
  8581  0024B2                     i2u369_40:
  8582  0024B2  0E01               	movlw	1
  8583  0024B4  6E0E               	movwf	i2___fladd@aexp,c
  8584  0024B6  D002               	goto	i2l1097
  8585  0024B8                     i2l1098:
  8586  0024B8  B001               	btfsc	i2___fladd@b,0,c
  8587  0024BA  D7FB               	goto	i2u369_40
  8588  0024BC                     i2l1097:
  8589  0024BC  500E               	movf	i2___fladd@aexp,w,c
  8590  0024BE  B4D8               	btfsc	status,2,c
  8591  0024C0  D020               	goto	i2l3902
  8592  0024C2  0E01               	movlw	1
  8593  0024C4  2601               	addwf	i2___fladd@b,f,c
  8594  0024C6  0E00               	movlw	0
  8595  0024C8  2202               	addwfc	i2___fladd@b+1,f,c
  8596  0024CA  2203               	addwfc	i2___fladd@b+2,f,c
  8597  0024CC  2204               	addwfc	i2___fladd@b+3,f,c
  8598  0024CE  A004               	btfss	i2___fladd@b+3,0,c
  8599  0024D0  D018               	goto	i2l3902
  8600  0024D2  C001  F009         	movff	i2___fladd@b,??i2___fladd
  8601  0024D6  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
  8602  0024DA  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
  8603  0024DE  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
  8604  0024E2  340C               	rlcf	??i2___fladd+3,w,c
  8605  0024E4  320C               	rrcf	??i2___fladd+3,f,c
  8606  0024E6  320B               	rrcf	??i2___fladd+2,f,c
  8607  0024E8  320A               	rrcf	??i2___fladd+1,f,c
  8608  0024EA  3209               	rrcf	??i2___fladd,f,c
  8609  0024EC  C009  F001         	movff	??i2___fladd,i2___fladd@b
  8610  0024F0  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
  8611  0024F4  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
  8612  0024F8  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
  8613  0024FC  280F               	incf	i2___fladd@bexp,w,c
  8614  0024FE  A4D8               	btfss	status,2,c
  8615  002500  2A0F               	incf	i2___fladd@bexp,f,c
  8616  002502                     i2l3902:
  8617  002502  280F               	incf	i2___fladd@bexp,w,c
  8618  002504  B4D8               	btfsc	status,2,c
  8619  002506  D003               	goto	i2u375_40
  8620  002508  500F               	movf	i2___fladd@bexp,w,c
  8621  00250A  A4D8               	btfss	status,2,c
  8622  00250C  D00D               	goto	i2l3910
  8623  00250E                     i2u375_40:
  8624  00250E  0E00               	movlw	0
  8625  002510  6E01               	movwf	i2___fladd@b,c
  8626  002512  0E00               	movlw	0
  8627  002514  6E02               	movwf	i2___fladd@b+1,c
  8628  002516  0E00               	movlw	0
  8629  002518  6E03               	movwf	i2___fladd@b+2,c
  8630  00251A  0E00               	movlw	0
  8631  00251C  6E04               	movwf	i2___fladd@b+3,c
  8632  00251E  500F               	movf	i2___fladd@bexp,w,c
  8633  002520  A4D8               	btfss	status,2,c
  8634  002522  D002               	goto	i2l3910
  8635  002524  0E00               	movlw	0
  8636  002526  6E0D               	movwf	i2___fladd@signs,c
  8637  002528                     i2l3910:
  8638  002528  A00F               	btfss	i2___fladd@bexp,0,c
  8639  00252A  D002               	goto	i2l3914
  8640  00252C  8E03               	bsf	i2___fladd@b+2,7,c
  8641  00252E  D001               	goto	i2l3916
  8642  002530                     i2l3914:
  8643  002530  9E03               	bcf	i2___fladd@b+2,7,c
  8644  002532                     i2l3916:
  8645  002532  90D8               	bcf	status,0,c
  8646  002534  300F               	rrcf	i2___fladd@bexp,w,c
  8647  002536  6E04               	movwf	i2___fladd@b+3,c
  8648  002538  BE0D               	btfsc	i2___fladd@signs,7,c
  8649  00253A  8E04               	bsf	i2___fladd@b+3,7,c
  8650  00253C  C001  F001         	movff	i2___fladd@b,?i2___fladd
  8651  002540  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
  8652  002544  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
  8653  002548  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
  8654  00254C  0012               	return		;funcret
  8655  00254E                     __end_ofi2___fladd:
  8656                           	opt callstack 0
  8657                           
  8658                           	psect	rparam
  8659  0000                     
  8660                           	psect	temp
  8661  000065                     btemp:
  8662                           	opt callstack 0
  8663  000065                     	ds	1
  8664  0000                     int$flags	set	btemp
  8665  0000                     wtemp8	set	btemp+1
  8666  0000                     ttemp5	set	btemp+1
  8667  0000                     ttemp6	set	btemp+4
  8668  0000                     ttemp7	set	btemp+8
  8669                           tosu	equ	0xFFF
  8670                           tosh	equ	0xFFE
  8671                           tosl	equ	0xFFD
  8672                           stkptr	equ	0xFFC
  8673                           pclatu	equ	0xFFB
  8674                           pclath	equ	0xFFA
  8675                           pcl	equ	0xFF9
  8676                           tblptru	equ	0xFF8
  8677                           tblptrh	equ	0xFF7
  8678                           tblptrl	equ	0xFF6
  8679                           tablat	equ	0xFF5
  8680                           prodh	equ	0xFF4
  8681                           prodl	equ	0xFF3
  8682                           indf0	equ	0xFEF
  8683                           postinc0	equ	0xFEE
  8684                           postdec0	equ	0xFED
  8685                           preinc0	equ	0xFEC
  8686                           plusw0	equ	0xFEB
  8687                           fsr0h	equ	0xFEA
  8688                           fsr0l	equ	0xFE9
  8689                           wreg	equ	0xFE8
  8690                           indf1	equ	0xFE7
  8691                           postinc1	equ	0xFE6
  8692                           postdec1	equ	0xFE5
  8693                           preinc1	equ	0xFE4
  8694                           plusw1	equ	0xFE3
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           bsr	equ	0xFE0
  8698                           indf2	equ	0xFDF
  8699                           postinc2	equ	0xFDE
  8700                           postdec2	equ	0xFDD
  8701                           preinc2	equ	0xFDC
  8702                           plusw2	equ	0xFDB
  8703                           fsr2h	equ	0xFDA
  8704                           fsr2l	equ	0xFD9
  8705                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    23
    Data        7
    BSS         193
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     81     100
    BANK0           128    103     124
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), main@command(BANK0[25]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), dbuf(BANK1[32]), main@command(BANK0[25]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK0[25]), main@lcdDisplay(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK0[25]), main@lcdDisplay(BANK0[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1500_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK0[25]), main@lcdDisplay(BANK0[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK0[25]), main@lcdDisplay(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), main@command(BANK0[25]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), main@command(BANK0[25]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_sprintf(BANK0[2]), stoa@nuls(COMRAM[7]), main@command(BANK0[25]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    UART_send_string@message	PTR unsigned char  size(2) Largest target is 25
		 -> main@uart_char_to_send(BANK0[25]), STR_1(CODE[15]), 

    LCD_write_str@str	PTR unsigned char  size(2) Largest target is 16
		 -> main@lcdDisplay(BANK0[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_ctoa
    _stoa->_fputc
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_send_byte
    _atoi->_isspace
    _initLCD->_lcdInst
    ___flsub->___fladd
    ___flmul->___fldiv
    ___flge->___flsub
    _UART_send_string->_UART_send_char
    _UART_Init->___aldiv
    _RTC_Init->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _LCD_write_str->_send_byte
    _LCD_set_cursor->_lcdInst
    _lcdInst->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    _I2C_Master_Init->___lldiv

Critical Paths under _high_isr in COMRAM

    _high_isr->i2___flsub
    i2___flsub->i2___fladd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _high_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                90    90      0   28532
                                             24 BANK0     79    79      0
                      _DCMotorAllOff
                  _DCMotorCenterLeft
                 _DCMotorCenterRight
                    _DCMotorLeftBkwd
                     _DCMotorLeftFwd
                     _DCMotorLeftOFF
             _DCMotorLeftRightBkwdON
              _DCMotorLeftRightFwdON
                   _DCMotorRightBkwd
                    _DCMotorRightFwd
                    _DCMotorRightOFF
                    _I2C_Master_Init
                     _LCD_set_cursor
                      _LCD_write_str
                           _RTC_Init
                          _UART_Init
                     _UART_available
                          _UART_read
                   _UART_send_string
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            _initLCD
                          _portSetup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   12459
                                              6 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11235
                                             79 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           47    41      6   10699
                                             62 COMRAM    17    11      6
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2326
                                             39 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4215
                                             57 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3995
                                             46 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     318
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1802
                                             39 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1401
                                             30 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0     111
                                             29 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                             33 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                             26 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _portSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     245
                                             30 COMRAM     1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    4049
                                             42 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2462
                                             26 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2048
                                             51 COMRAM    25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    1398
                                             50 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1551
                                             26 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     6     4      2     308
                                             27 COMRAM     6     4      2
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      22
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_read                                            1     1      0      23
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_available                                       4     2      2       0
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            8     8      0     475
                                             40 COMRAM     8     8      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             26 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0    1162
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1162
                                             27 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_str                                        5     3      2     527
                                             29 COMRAM     5     3      2
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_set_cursor                                       4     0      4    2680
                                             30 COMRAM     4     0      4
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     111
                                             29 COMRAM     1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (7) _send_byte                                            1     1      0      89
                                             28 COMRAM     1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (8) _send_nibble                                          1     1      0      45
                                             27 COMRAM     1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (9) _pulse_e                                              1     1      0      23
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             39 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             26 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _DCMotorRightOFF                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorLeftRightFwdON                                0     0      0       0
                     _DCMotorLeftFwd
                    _DCMotorRightFwd
 ---------------------------------------------------------------------------------
 (1) _DCMotorRightFwd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DCMotorLeftFwd                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorLeftRightBkwdON                               0     0      0       0
                    _DCMotorLeftBkwd
                   _DCMotorRightBkwd
 ---------------------------------------------------------------------------------
 (1) _DCMotorRightBkwd                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DCMotorLeftBkwd                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorLeftOFF                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorCenterRight                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorCenterLeft                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCMotorAllOff                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                            2     2      0    4429
                                             24 COMRAM     2     2      0
                          i2___fladd
                          i2___flsub
 ---------------------------------------------------------------------------------
 (13) i2___flsub                                           8     0      8    2289
                                             16 COMRAM     8     0      8
                          i2___fladd
 ---------------------------------------------------------------------------------
 (14) i2___fladd                                          16     8      8    2140
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCMotorAllOff
   _DCMotorCenterLeft
   _DCMotorCenterRight
   _DCMotorLeftBkwd
   _DCMotorLeftFwd
   _DCMotorLeftOFF
   _DCMotorLeftRightBkwdON
     _DCMotorLeftBkwd
     _DCMotorRightBkwd
   _DCMotorLeftRightFwdON
     _DCMotorLeftFwd
     _DCMotorRightFwd
   _DCMotorRightBkwd
   _DCMotorRightFwd
   _DCMotorRightOFF
   _I2C_Master_Init
     ___lldiv
   _LCD_set_cursor
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
   _LCD_write_str
     _send_byte
       _send_nibble
         _pulse_e
   _RTC_Init
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _UART_Init
     ___aldiv
   _UART_available
   _UART_read
   _UART_send_string
     _UART_send_char
   ___fldiv
   ___flge
     ___flsub (ARG)
       ___fladd
   ___flmul
     ___fldiv (ARG)
   ___flsub
     ___fladd
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _portSetup
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _send_byte
                   _send_nibble
                     _pulse_e
             _fputs
               _fputc
                 _putch
                   _send_byte
                     _send_nibble
                       _pulse_e
             _strlen
         _fputc
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
         _isdigit
         _stoa
           _fputc
             _putch
               _send_byte
                 _send_nibble
                   _pulse_e
           _strlen

 _high_isr (ROOT)
   i2___fladd
   i2___flsub
     i2___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A0       7       62.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     67      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     51      64       1       79.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     180      34        0.0%
DATA                 0      0     180       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Mar 08 20:42:56 2019

                   ___fldiv@aexp 0033                     ___fldiv@bexp 0032  
                   ___fldiv@sign 002B          UART_send_string@message 001C  
                             l91 32A0                               l92 32B2  
                             l98 32D8                      __CFG_CPD$ON 000000  
            ___wmul@multiplicand 001D                      __CFG_BORV$3 000000  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                    __CFG_OSC$HS 000000                              l264 151E  
                            l294 182A                              l472 2EB0  
                            l570 3016                              l493 2ADA  
                            l808 2C30                     __CFG_CPB$OFF 000000  
                    i2___fladd@a 0005                      i2___fladd@b 0001  
                            _pad 2E82                              wreg 000FE8  
                    i2___flsub@a 0015                      i2___flsub@b 0011  
                   ___flmul@aexp 0045                     ___flmul@bexp 0046  
                   ___flmul@sign 0040                     ___flmul@temp 004B  
                   ___flmul@prod 0047                     __CFG_LVP$OFF 000000  
                    main@command 00B6                     __CFG_WDT$OFF 000000  
                           l1127 26C0                             l1072 2078  
                           l1073 2056                             l1138 272E  
                           l1242 2A6A                             l1139 272A  
                           l1157 1C64                             l1174 1F02  
                           l1166 1E7C                             l1167 1E78  
                           l1088 214A                             l3200 2ED2  
                           l1097 21B0                             l1098 21AC  
                           l3204 2EFE                             l3310 29D6  
                           l3304 29A0                             l3160 2DFA  
                           l3400 1B8E                             l4114 257A  
                           l3226 33DA                             l3314 2A0A  
                           l3306 29A8                             l3170 3482  
                           l3234 31F6                             l3410 1BB0  
                           l3500 2CCE                             l4220 2796  
                           l3308 29AE                             l3180 33EC  
                           l3172 3486                             l3236 3202  
                           l3252 2A9E                             l3404 1B98  
                           l5100 143E                             l5020 10A8  
                           l3510 2D02                             l4046 2D42  
                           l4054 2DAC                             l4230 27CC  
                           l4134 25BA                             l4118 257E  
                           l3190 2E9A                             l3270 2B26  
                           l3262 2AF0                             l3350 1936  
                           l4232 27CE                             l4224 27C0  
                           l4216 2772                             l4160 2620  
                           l4152 2608                             l3600 200A  
                           l3184 3402                             l3280 2B66  
                           l3352 1944                             l5200 16E8  
                           l5112 14AE                             l3514 2D10  
                           l4170 2670                             l4146 25F2  
                           l4138 25BE                             l4322 1E24  
                           l3290 294A                             l3194 2EA8  
                           l3266 2B08                             l3370 1A2A  
                           l4076 34FE                             l4252 1C10  
                           l3700 21F6                             l3612 2064  
                           l3196 2EBA                             l3284 2B7E  
                           l3276 2B4C                             l3372 1A38  
                           l3348 1918                             l5212 176C  
                           l5204 1722                             l5140 156C  
                           l5044 1224                             l5036 11C6  
                           l3462 2FC8                             l3518 2D26  
                           l4190 26D6                             l4270 1C50  
                           l4254 1C14                             l3614 2068  
                           l3534 1F62                             l5206 1730  
                           l5230 180E                             l5118 14D6  
                           l3464 2FD4                             l4184 26BE  
                           l4352 1EDE                             l4328 1E42  
                           l4280 1C82                             l4272 1C54  
                           l4256 1C24                             l3712 2224  
                           l3288 2946                             l3368 1A0C  
                           l5152 15A6                             l5144 1586  
                           l5136 1552                             l5128 152A  
                           l5080 1372                             l5056 1292  
                           l3474 3008                             l4178 2698  
                           l3714 2226                             l3570 1FCE  
                           l3562 1FAE                             l3538 1F66  
                           l3298 2990                             l3394 1B52  
                           l3386 1AE4                             l5226 17E4  
                           l5218 17A8                             l5162 15F8  
                           l5154 15D0                             l3492 2CA0  
                           l4196 26F4                             l4380 2BD0  
                           l4364 1F20                             l4348 1EC0  
                           l3708 221C                             l3636 20BE  
                           l3628 209C                             l5180 1656  
                           l5148 15A0                             l5068 1302  
                           l3486 2C88                             l3638 20C2  
                           l3646 20D4                             l3558 1FAA  
                           l5166 1612                             ?_pad 002F  
                           l4384 2C04                             l3664 216E  
                           l3680 218E                             l3656 213A  
                           l5184 1670                             l5088 13D0  
                           l3498 2CC2                             l4394 2C68  
                           l3674 2184                             l5194 16A0  
                           l5178 162C                             l4388 2C1A  
                           l5188 168A                             l5198 16C4  
                           l3978 32C4                             l3986 32F0  
                           l4980 31C8                             l4978 31A4  
                           STR_1 1018                             STR_2 102D  
                           STR_3 102D                             STR_4 102D  
                           STR_5 102D                             STR_6 1027  
                           u3100 202C                             _LATA 000F89  
                           u3110 203C                             _LATB 000F8A  
                           _LATC 000F8B                             u3120 203E  
                           _LATD 000F8C                             _LATE 000F8D  
                           u3300 21A6                             u3150 2080  
                           u4130 2780                             u2450 2DF2  
                           u2435 34C8                             u2436 34CA  
                           u4140 27A4                             u2540 3442  
                           u4230 1C70                             u2550 3444  
                           u2710 2A3A                             u2470 2E3A  
                           u4320 1ECE                             u4240 1DE6  
                           u3360 2202                             u3280 2192  
                           u2720 2A3C                             u2640 2B1C  
                           u2800 197C                             u4090 2724  
                           u4330 1EEC                             u2570 33D6  
                           u2810 197E                             u2820 198A  
                           u4245 1DDC                             u5117 1084  
                           u2670 2B92                             u5070 14E6  
                           u5127 302E                             u2591 2A7E  
                           u4280 1E72                             u5137 3046  
                           u2930 2FD8                             u2690 298C  
                           u2850 1A70                             u5147 3058  
                           u3900 2DDA                             u2860 1A72  
                           u5157 307A                             u2870 1A7E  
                           u5167 2F90                             u5177 34B0  
                           u5187 34BA                             u3907 2DD0  
                           _RCIE 007CED                             u2980 2CD2  
                           _RCIF 007CF5                             u3870 2D70  
                           u3865 2F5A                             u3890 2DA4  
                           u3795 30BA                             u3877 2D66  
                           u3897 2D9A                             _TXIE 007CEC  
                           _TXIF 007CF4                             _dbuf 0180  
                           _atoi 2934                             _ctoa 31E4  
                           _main 1034                             _keys 1001  
                           _prec 0056                             _nout 0052  
                           pad@i 0036                             pad@p 0033  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 0038  
                           fsr2l 000FD9                             _stoa 2A74  
                           btemp 0065                             prodh 000FF4  
                           prodl 000FF3                             start 000E  
                  __CFG_IESO$OFF 000000                  ___fldiv@new_exp 002C  
                  __CFG_MCLRE$ON 000000                     ___param_bank 000000  
      __size_of_UART_send_string 00AA                            ??_pad 0035  
               ?_I2C_Master_Init 0028                 ?_I2C_Master_Wait 0001  
               ?_I2C_Master_Stop 0001       __end_of_DCMotorCenterRight 361C  
                __end_of___aldiv 2D38                            ?_atoi 0022  
                          ?_ctoa 003A                  __end_of___fladd 2242  
                          ?_main 0001                  __end_of___fldiv 27D6  
                __end_of___flmul 1F36                  __end_of___flsub 335E  
                          ?_stoa 0028                  __end_of___lldiv 3028  
                          i2l320 2926                            i2l321 2922  
                          _RCREG 000FAE                     vfpfcnvrt@fmt 0041  
                          _SPBRG 000FAF                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TXREG 000FAD                    __CFG_PWRT$OFF 000000  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                  i2___fladd@grs 0010                  __end_of_lcdInst 35B4  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                   main@keypress 00E1                   __CFG_EBTR3$OFF 000000  
             __size_of_UART_Init 008E                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                __end_of_initLCD 3092                   __CFG_EBTRB$OFF 000000  
             __size_of_UART_read 0026                            _flags 0058  
                ??_DCMotorAllOff 001B                            _fputc 2DE2  
                          _fputs 33E2           __size_of_LCD_write_str 004A  
                __end_of_isdigit 344A                            _tickL 00F3  
                          _tickR 00EF                            atoi@n 002F  
               __end_of_RTC_Init 3478                            pad@fp 002F  
                          atoi@s 0022                            _width 0054  
                          ctoa@c 003C                            _putch 359C  
                          ctoa@w 003D                  __end_of_isspace 33E2  
                          tablat 000FF5                  send_nibble@data 001C  
                          plusw1 000FE3                            plusw2 000FDB  
                          stoa@i 0034                            stoa@l 003C  
                          stoa@p 003A                            stoa@s 002A  
                          stoa@w 0036                  __end_of_pulse_e 34CC  
                          ttemp5 0066                            ttemp6 0069  
                          ttemp7 006D                            status 000FD8  
                          wtemp8 0066                  __end_of_sprintf 3192  
             __size_ofi2___fladd 030C                   __CFG_PBADEN$ON 000000  
             __size_ofi2___flsub 0046          __size_of_LCD_set_cursor 004E  
                __initialization 30EE                     __end_of_atoi 2A74  
                   __end_of_ctoa 3232                     __end_of_main 187C  
                   __end_of_keys 1012                     __end_of_stoa 2B9C  
                         ??_atoi 0024                           ??_ctoa 003D  
                         ??_main 0098                           ??_stoa 002C  
                  __activetblptr 000002                ?_I2C_Master_Start 0001  
              ?_I2C_Master_Write 001C               ??_I2C_Master_Start 001C  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
             ??_I2C_Master_Write 001E                           _ADCON2 000FC0  
                   ?_send_nibble 0001                           ?_fputc 001F  
                         ?_fputs 0028          ??_DCMotorLeftRightFwdON 001B  
                         ?_putch 0001                           _INT0IE 007F94  
                         _INT0IF 007F91                           _INT1IE 007F83  
                         _INT1IF 007F80                           _INT2IE 007F84  
                         _INT2IF 007F81                           _CVRCON 000FB5  
                         i2l1072 2384                           i2l1073 2362  
                         i2l1088 2456                           i2l1097 24BC  
                         i2l1098 24B8                           i2l3802 2316  
                         i2l3740 2272                           i2l3910 2528  
                         i2l3902 2502                           i2l3830 23A8  
                         i2l3814 2370                           i2l3840 23CE  
                         i2l3816 2374                           i2l3760 22B6  
                         i2l3736 226E                           i2l4720 2858  
                         i2l3914 2530                           i2l4730 28CC  
                         i2l3916 2532                           i2l3772 22DA  
                         i2l3764 22BA                           i2l4740 28DC  
                         i2l4732 28CE                           i2l4716 2822  
                         i2l3838 23CA                           i2l4750 28FA  
                         i2l4718 2856                           i2l3848 23E0  
                         i2l4728 2898                           i2l3866 247A  
                         i2l3882 249A                           i2l3858 2446  
                         i2l3876 2490                           _SSPADD 000FC8  
                         _SSPBUF 000FC9                   i2___fladd@aexp 000E  
                 i2___fladd@bexp 000F                   __CFG_XINST$OFF 000000  
                   vfprintf@cfmt 0050                __end_of_UART_Init 2FA6  
               __end_of_high_isr 2934        __size_of_DCMotorRightBkwd 0008  
                         ___flge 2B9C                        ??___aldiv 0023  
                      ??___fladd 0023                    _LCD_write_str 32CE  
                         ___wmul 34CC                __end_of_UART_read 3518  
                      ??___fldiv 0023                   __CFG_STVREN$ON 000000  
                      ??___flmul 003C                        ??___flsub 0033  
                      ??___lldiv 0023                           clear_0 3114  
                         clear_1 3120                           clear_2 312C  
               ??_DCMotorLeftOFF 001B                        ??_lcdInst 001E  
                         pad@buf 0031                           ctoa@fp 003A  
               ??_DCMotorLeftFwd 001B                           _strlen 3478  
                      ??_initLCD 001F                           fputc@c 001F  
                         fputs@c 002C                           fputs@i 002D  
                   __pdataCOMRAM 005E                           fputs@s 0028  
              __end_ofi2___fladd 254E                        ??_isdigit 001D  
              __end_ofi2___flsub 33A4                     __mediumconst 0000  
                      ??_isspace 001D                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                         stoa@cp 0038                           stoa@fp 0028  
               __end_of_vfprintf 31E4                        ??_pulse_e 001B  
                      ??_sprintf 0052                  _travelDirection 00F9  
                     ___flge@ff1 0033                       ___flge@ff2 0037  
          pulse_e@interruptState 001B                       __accesstop 0080  
        __end_of__initialization 3132                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001                   ?_LCD_write_str 001E  
               _UART_send_string 2D38                    __end_of_fputc 2E82  
                  __end_of_fputs 341A                    __end_of_putch 35A8  
                      ?_RTC_Init 0001                  _key_was_pressed 00FB  
       __size_of_DCMotorLeftBkwd 0008         __size_of_DCMotorRightOFF 0006  
                 main@lcdDisplay 00CF         __size_of_DCMotorRightFwd 0008  
                        ??_fputc 0023                          ??_fputs 002C  
                        ??_putch 001E                       __pbssBANK0 00E7  
                     __pbssBANK1 0100          __size_of_UART_available 0020  
                 _LCD_set_cursor 3280                          ?___flge 0033  
                        ?___wmul 001B                  UART_send_char@c 001B  
             __size_of_send_byte 0012                       ??_RTC_Init 001E  
       ??_DCMotorLeftRightBkwdON 001B                          ?_strlen 001B  
                     __rx_buffer 0140                          _INTEDG0 007F8E  
                        _INTEDG1 007F8D                   LCD_write_str@i 0021  
             __size_of_portSetup 004E               __size_of_vfpfcnvrt 0368  
                     __tx_buffer 0100          __size_of_UART_send_char 001C  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                      ?_high_isr 0001               _DCMotorCenterRight 3616  
                        _SSPSTAT 000FC7             __size_of_send_nibble 0016  
         __end_of_LCD_set_cursor 32CE              ?_DCMotorCenterRight 0001  
                i2___fladd@signs 000D                  ??_LCD_write_str 0020  
                        __Hparam 0000                          __Lparam 0000  
               _DCMotorRightBkwd 35F2                          ___aldiv 2C6C  
                __size_of___flge 00D0                          ___fladd 1F36  
                        ___fldiv 254E                          ___flmul 1BE4  
                        ___flsub 3318                          ___lldiv 2FA6  
                __size_of___wmul 0026                        ?_vfprintf 0080  
                      _CMCONbits 000FB4                     __psmallconst 1000  
                        __pcinit 30EE                          __ramtop 1000  
                        _lcdInst 35A8                          __ptext0 1034  
                        __ptext1 3140                          __ptext2 3192  
                        __ptext3 187C                          __ptext4 2A74  
                        __ptext5 31E4                          __ptext6 2E82  
                        __ptext7 3478                          __ptext8 33E2  
                        __ptext9 2DE2                UART_send_string@i 0020  
           ??_DCMotorCenterRight 001B                  __size_of_strlen 002A  
                        _initLCD 3028                     __size_of_pad 0096  
                        _isdigit 341A                 ___aldiv@dividend 001B  
                        _isspace 33A4         __size_of_I2C_Master_Init 005C  
       __size_of_I2C_Master_Wait 0012         __size_of_I2C_Master_Stop 0008  
                        atoi@neg 0028                          _pulse_e 34A2  
              ??_DCMotorLeftBkwd 001B                          _sprintf 3140  
                     ??_high_isr 0019                   __pintcode_body 27D6  
           end_of_initialization 3132            __end_of_DCMotorAllOff 359C  
          __end_of_LCD_SIZE_HORZ 1018                __end_of_send_byte 358E  
          __end_of_LCD_SIZE_VERT 1017   __size_of_DCMotorLeftRightFwdON 000A  
  __end_of_DCMotorLeftRightFwdON 35C8                          fputc@fp 0021  
               LCD_write_str@str 001E                    __Lmediumconst 0000  
                        int_func 27D6                          fputs@fp 002A  
                ?_LCD_set_cursor 001F                ??_DCMotorRightOFF 001B  
              ??_DCMotorRightFwd 001B        __size_of_I2C_Master_Start 0008  
      __size_of_I2C_Master_Write 000A                  ___lldiv@divisor 001F  
                ___lldiv@counter 0027                __end_of_portSetup 3280  
              __end_of_vfpfcnvrt 1BE4                        _RCSTAbits 000FAB  
               ___aldiv@quotient 0025                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                     ??_vfprintf 0050                          strlen@a 001D  
                        strlen@s 001B                        _UART_Init 2F18  
                __rx_buffer_head 005D                        _UART_read 34F2  
__size_of_DCMotorLeftRightBkwdON 000A                        _PORTDbits 000F83  
                __rx_buffer_tail 005C                      ___fladd@grs 002A  
                      _TRISCbits 000F94                      ___fldiv@grs 002E  
                    ___fldiv@rem 0027                        i2___fladd 2242  
                      i2___flsub 335E         __end_of_UART_send_string 2DE2  
                    ___flmul@grs 0041                   _UART_available 3518  
                      _TXSTAbits 000FAC                    send_byte@data 001D  
                     main@moving 00E3                   __end_of___flge 2C6C  
                    vfpfcnvrt@ap 0043                      vfpfcnvrt@cp 0049  
                    vfpfcnvrt@fp 003F                   __end_of___wmul 34F2  
                     ?_UART_Init 0001                    __pidataCOMRAM 3602  
                     ?_UART_read 0001                __size_of_RTC_Init 002E  
                 __end_of_strlen 34A2              start_initialization 30EE  
                 _UART_send_char 3538                      __end_of_pad 2F18  
        main@correctingDirection 00E6                       ?i2___fladd 0001  
                     ?i2___flsub 0011           __end_of_UART_available 3538  
              LCD_set_cursor@row 001F           _DCMotorLeftRightBkwdON 35C8  
              ??_I2C_Master_Init 002C                ??_I2C_Master_Wait 001B  
              ??_I2C_Master_Stop 001C                    _sideTurnedOff 00F7  
                    vfprintf@fmt 0082                         ??___flge 003B  
                       ??___wmul 001F             LCD_set_cursor@column 0021  
       I2C_Master_Init@clockFreq 0028                 __CFG_LPT1OSC$OFF 000000  
                       ??_strlen 001D                        ___fladd@a 001F  
                      ___fladd@b 001B           __end_of_UART_send_char 3554  
                      ___fldiv@a 001F                        ___fldiv@b 001B  
                      ___flmul@a 0038                        ___flmul@b 0034  
                    __pbssCOMRAM 0052                        ___flsub@a 002F  
                      ___flsub@b 002B                    __pcstackBANK0 0080  
       __end_of_DCMotorRightBkwd 35FA          __size_of_DCMotorLeftOFF 0006  
                ?_UART_available 001B          __size_of_DCMotorLeftFwd 0008  
              __size_of_high_isr 292C                        _atoi$1480 002C  
                      _atoi$1478 002A                        _atoi$1479 002E  
               _I2C_Master_Start 35DA                 _I2C_Master_Write 35B4  
              __CFG_CCP2MX$PORTC 000000                        __pintcode 0008  
                       ?___aldiv 001B                         ?___fladd 001B  
                       ?___fldiv 001B                         ?___flmul 0034  
                       ?___flsub 002B                         ?___lldiv 001B  
                    ??_UART_Init 0029                  _DCMotorLeftBkwd 35FA  
            main@commandReceived 00E2                         ?_lcdInst 0001  
                    ??_UART_read 001B                        _distanceL 00EB  
                      _distanceR 00E7                _DCMotorCenterLeft 361C  
              __size_of_vfprintf 0052                         ?_initLCD 0001  
                    __smallconst 1000                  ?_UART_send_char 0001  
                       ?_isdigit 001B               ?_DCMotorCenterLeft 0001  
                       ?_isspace 001B                  _DCMotorRightOFF 360A  
                _DCMotorRightFwd 35E2            main@uart_char_to_send 009D  
                  ??_send_nibble 001C                         ?_pulse_e 0001  
                    ??i2___fladd 0009                 ??_LCD_set_cursor 0023  
                       ?_sprintf 0086                      ??i2___flsub 0019  
                 __size_of_fputc 00A0                   __size_of_fputs 0038  
            ??_DCMotorCenterLeft 001B                   __size_of_putch 000C  
                ___aldiv@divisor 001F                  ___aldiv@counter 0023  
                 ___wmul@product 001F                         _LATAbits 000F89  
                       _LATDbits 000F8C                         _PIE1bits 000F9D  
                     UART_read@c 001B                        _send_byte 357C  
                 _LCD_LINE1_ADDR 1015                   _LCD_LINE2_ADDR 1014  
                 _LCD_LINE3_ADDR 1013                   _LCD_LINE4_ADDR 1012  
                       i2u350_40 2348                         i2u351_40 234A  
                       i2u354_40 238C                         i2u349_40 2338  
                       i2u375_40 250E                         i2u367_40 249E  
                       i2u369_40 24B2            __end_of_LCD_write_str 3318  
               __CFG_WDTPS$32768 000000                UART_Init@baudRate 002D  
      __end_of_DCMotorCenterLeft 3622                        _portSetup 3232  
                      _vfpfcnvrt 187C                         _RTC_Init 344A  
                     _ADCON2bits 000FC0                ___wmul@multiplier 001B  
                __tx_buffer_head 005B                  __tx_buffer_tail 005A  
    __size_of_DCMotorCenterRight 0006                        main@index 00E4  
                   _isspace$1496 0021                       vfpfcnvrt@c 004F  
                      copy_data0 3102                ?_UART_send_string 001C  
         __end_of_LCD_LINE1_ADDR 1016               ??_UART_send_string 001E  
         __end_of_LCD_LINE2_ADDR 1015           __end_of_LCD_LINE3_ADDR 1014  
         __end_of_LCD_LINE4_ADDR 1013              __end_of_send_nibble 356A  
          _DCMotorLeftRightFwdON 35BE                       ?_send_byte 0001  
                       __Hrparam 0000          __end_of_DCMotorLeftBkwd 3602  
                     vfprintf@ap 0084                         __Lrparam 0000  
                     vfprintf@fp 0080               __CFG_BOREN$SBORDIS 000000  
               __size_of___aldiv 00CC                 __size_of___fladd 030C  
               __size_of___fldiv 0288                       ?_portSetup 0001  
               __size_of___flmul 0352                 __size_of___flsub 0046  
               __size_of___lldiv 0082                       ?_vfpfcnvrt 003F  
        __end_of_DCMotorRightOFF 3610           __size_of_DCMotorAllOff 000E  
        __end_of_DCMotorRightFwd 35EA                 __size_of_lcdInst 000C  
                     sprintf@fmt 0088                  _I2C_Master_Init 3092  
               __size_of_initLCD 006A                  _I2C_Master_Wait 356A  
                _I2C_Master_Stop 35D2                 __size_of_isdigit 0030  
               __size_of_isspace 003E                         __ptext10 359C  
                       __ptext11 2934                         __ptext20 2B9C  
                       __ptext12 33A4                         __ptext21 254E  
                       __ptext13 341A                         __ptext30 35D2  
                       __ptext22 2D38                         __ptext14 34CC  
                       __ptext31 35DA                         __ptext23 3538  
                       __ptext15 3232                         __ptext40 2FA6  
                       __ptext32 356A                         __ptext24 34F2  
                       __ptext16 3028                         __ptext41 360A  
                       __ptext33 32CE                         __ptext25 3518  
                       __ptext17 3318                         __ptext50 361C  
                       __ptext42 35BE                         __ptext34 3280  
                       __ptext26 2F18                         __ptext18 1F36  
                       __ptext51 358E                         __ptext43 35E2  
                       __ptext35 35A8                         __ptext27 2C6C  
                       __ptext19 1BE4                         __ptext44 35EA  
                       __ptext36 357C                         __ptext28 344A  
                       __ptext53 335E                         __ptext45 35C8  
                       __ptext37 3554                         __ptext29 35B4  
                       __ptext54 2242                         __ptext46 35F2  
                       __ptext38 34A2                         __ptext47 35FA  
                       __ptext39 3092                         __ptext48 3610  
                       __ptext49 3616          ?_DCMotorLeftRightBkwdON 0001  
                 _DCMotorLeftOFF 3610                   _DCMotorLeftFwd 35EA  
                       _high_isr 0008                 __size_of_pulse_e 002A  
               __size_of_sprintf 0052                    __size_of_atoi 0140  
                  __size_of_ctoa 004E                    __size_of_main 0848  
                  __size_of_stoa 0128                        stoa@F1136 005E  
                       int$flags 0065                         _vfprintf 3192  
     __size_of_DCMotorCenterLeft 0006      I2C_Master_Write@byteToWrite 001C  
                      putch@data 001E                   _vfpfcnvrt$1021 004B  
                 _vfpfcnvrt$1022 004D         __end_of_I2C_Master_Start 35E2  
       __end_of_I2C_Master_Write 35BE                       _INTCONbits 000FF2  
               ??_UART_available 001D           __end_of_DCMotorLeftOFF 3616  
 __end_of_DCMotorLeftRightBkwdON 35D2           __end_of_DCMotorLeftFwd 35F2  
                       isdigit@c 001B                ?_DCMotorRightBkwd 0001  
                    _send_nibble 3554                         intlevel2 0000  
                      sprintf@ap 0090               ??_DCMotorRightBkwd 001B  
                  _DCMotorAllOff 358E                    _LCD_SIZE_HORZ 1017  
                  _LCD_SIZE_VERT 1016                         isspace@c 001B  
               ___lldiv@dividend 001B           ?_DCMotorLeftRightFwdON 0001  
                    ??_send_byte 001D                 ?_DCMotorLeftBkwd 0001  
               ??_UART_send_char 001B                      ??_portSetup 001B  
        __end_of_I2C_Master_Init 30EE          __end_of_I2C_Master_Wait 357C  
        __end_of_I2C_Master_Stop 35DA                      ??_vfpfcnvrt 0045  
                    lcdInst@data 001E                         stoa@nuls 002D  
               ?_DCMotorRightOFF 0001                 ?_DCMotorRightFwd 0001  
                       sprintf@f 0092                         sprintf@s 0086  
               ___lldiv@quotient 0023                     ___aldiv@sign 0024  
                ?_DCMotorLeftOFF 0001                  ?_DCMotorLeftFwd 0001  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                  ___fladd@signs 0027                   ?_DCMotorAllOff 0001  
                   ___fladd@aexp 0028                     ___fladd@bexp 0029  
